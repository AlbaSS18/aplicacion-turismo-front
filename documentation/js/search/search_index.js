var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Activity.html",[0,0.056,1,1.483]],["body/classes/Activity.html",[0,0.096,1,2.72,2,2.196,3,0.227,4,0.198,5,0.198,6,4.017,7,0.198,8,0.499,9,4.083,10,2.72,11,1.326,12,1.685,13,1.461,14,4.083,15,4.083,16,5.238,17,0.67,18,0.756,19,5.238,20,0.375,21,0.018,22,1.166,23,0.417,24,5.229,25,5.229,26,5.229,27,3.164,28,5.229,29,5.229,30,5.229,31,5.229,32,4.498,33,5.229,34,5.229,35,5.229,36,0.275,37,3.657,38,4.017,39,1.798,40,2.747,41,2.747,42,3.657,43,3.657,44,0.012,45,0.015,46,0.012]],["title/classes/ActivityRecommended.html",[0,0.056,40,1.954]],["body/classes/ActivityRecommended.html",[0,0.094,1,3.065,2,2.106,3,0.217,4,0.19,5,0.19,6,3.852,7,0.19,8,0.486,9,4.009,10,2.67,11,1.301,12,1.655,13,1.435,14,4.009,15,4.009,16,5.142,17,0.658,18,0.737,19,5.142,20,0.376,21,0.018,22,1.161,23,0.418,27,3.184,32,4.314,36,0.268,37,3.507,38,3.852,39,1.725,40,3.245,41,3.245,42,4.682,43,4.682,44,0.012,45,0.015,46,0.012,47,5.014,48,5.014,49,4.244,50,5.014,51,5.014,52,5.014,53,5.014,54,5.014,55,5.014,56,5.014,57,5.014,58,5.014,59,5.014]],["title/injectables/ActivityService.html",[60,0.499,61,1.739]],["body/injectables/ActivityService.html",[0,0.042,1,2.438,3,0.121,4,0.105,5,0.105,7,0.105,8,0.325,11,1.264,12,1.642,17,0.639,18,0.776,20,0.241,21,0.019,22,0.417,23,0.369,36,0.121,40,1.46,44,0.007,45,0.01,46,0.007,60,0.555,61,2.727,62,0.956,63,2.135,64,4.241,65,0.555,66,2.563,67,2.889,68,3.554,69,2.889,70,4.695,71,3.554,72,3.554,73,3.554,74,3.554,75,0.867,76,1.556,77,3.326,78,4.131,79,1.434,80,1.518,81,1.482,82,0.873,83,1.685,84,1.434,85,1.232,86,2.474,87,3.055,88,1.894,89,1.47,90,2.839,91,2.474,92,2.312,93,3.554,94,2.779,95,1.468,96,3.019,97,1.701,98,3.019,99,2.868,100,1.407,101,2.868,102,3.66,103,3.462,104,4.08,105,2.171,106,2.208,107,0.911,108,3.033,109,1.486,110,2.418,111,3.362,112,1.798,113,3.554,114,2.779,115,2.59,116,1.735,117,3.552,118,3.554,119,2.779,120,2.171,121,1.932,122,2.171,123,2.779,124,2.207,125,3.326,126,3.554,127,2.779,128,3.554,129,2.779,130,3.173,131,1.594,132,5.258,133,1.328,134,3.554,135,2.779,136,3.173,137,1.232,138,3.554,139,2.779,140,3.817,141,4.241,142,0.568,143,0.54,144,3.554,145,0.929,146,1.354,147,1.735,148,0.685,149,0.292,150,1.556,151,1.376,152,1.3,153,1.3,154,0.829,155,1.556,156,1.944,157,1.664,158,1.556,159,1.292,160,1.556,161,1.46,162,0.687,163,3.026,164,1.376,165,0.911,166,1.46,167,1.46,168,1.109,169,1.054,170,0.596,171,1.46,172,1.664,173,1.664,174,1.804,175,1.167,176,1.264,177,5.458,178,0.655,179,2.391,180,4.131,181,0.72,182,2.779,183,2.779,184,1.944,185,2.391,186,2.779,187,2.779]],["title/components/AddActivityComponent.html",[188,0.444,189,0.963]],["body/components/AddActivityComponent.html",[0,0.031,1,1.621,3,0.089,4,0.077,5,0.077,7,0.077,8,0.256,9,1.224,10,0.815,11,0.902,13,1.086,14,1.224,15,1.224,17,0.531,18,0.485,20,0.264,21,0.019,23,0.347,36,0.089,39,1.121,44,0.005,45,0.008,46,0.005,61,2.751,65,0.438,67,3.244,75,0.816,79,1.415,80,1.379,81,1.597,82,0.546,83,0.844,84,1.41,85,1.808,88,1.202,89,1.754,95,1.269,97,1.398,100,1.05,101,2.135,102,1.224,103,2.169,104,3.244,107,0.642,109,1.481,110,1.332,112,1.335,125,1.712,131,1.567,133,1.102,137,1.854,142,0.83,143,0.985,145,1.214,148,0.745,149,0.215,159,1.019,162,0.805,165,0.67,170,1.36,174,1.646,178,1.093,181,1.571,188,0.605,189,1.468,190,1.019,191,0.67,192,0.67,193,0.67,194,0.67,195,5.558,196,4.519,197,1.758,198,0.927,199,1.398,200,0.67,201,2.283,202,2.077,203,1.068,204,4.064,205,1.068,206,3.258,207,3.496,208,4.064,209,2.843,210,4.064,211,3.258,212,2.803,213,3.563,214,1.595,215,1.758,216,2.804,217,3.091,218,2.751,219,2.47,220,2.47,221,2.912,222,3.258,223,2.437,224,2.053,225,2.508,226,1.712,227,2.577,228,2.279,229,3.292,230,1.712,231,1.613,232,1.712,233,1.613,234,2.053,235,1.542,236,2.337,237,1.613,238,1.613,239,1.613,240,1.524,241,1.443,242,2.053,243,1.891,244,1.824,245,1.613,246,1.824,247,2.043,248,1.951,249,1.754,250,2.279,251,1.85,252,3.258,253,1.45,254,2.673,255,1.824,256,1.824,257,1.524,258,1.524,259,1.524,260,1.613,261,1.613,262,2.1,263,2.803,264,1.524,265,1.674,266,1.536,267,3.258,268,2.043,269,3.258,270,2.803,271,5.347,272,3.523,273,2.777,274,3.244,275,3.244,276,3.233,277,2.595,278,2.803,279,2.043,280,2.803,281,3.989,282,2.803,283,1.824,284,3.233,285,2.279,286,2.503,287,2.803,288,3.244,289,2.803,290,2.503,291,2.043,292,1.824,293,2.043,294,1.85,295,1.85,296,2.803,297,2.503,298,1.524,299,2.503,300,4.148,301,2.043,302,2.043,303,1.613,304,3.544,305,2.043,306,1.712,307,2.503,308,2.843,309,2.503,310,1.613,311,1.542,312,2.043,313,1.524,314,1.524,315,2.595,316,1.824,317,1.011,318,0.905,319,1.429,320,1.224,321,0.775,322,1.429,323,2.1,324,2.279,325,1.758,326,3.258,327,2.043,328,1.57,329,2.043,330,1.224,331,0.775,332,0.775,333,2.135,334,1.224,335,0.905,336,0.858,337,0.905,338,0.905,339,0.858,340,0.905,341,1.538,342,2.043,343,1.317,344,2.804,345,0.858,346,1.826,347,0.905,348,2.043,349,1.429,350,1.224,351,1.429,352,1.429,353,1.429,354,1.429,355,1.429,356,1.758,357,1.758,358,1.758,359,1.758,360,1.758,361,1.758,362,1.758,363,1.758,364,1.758,365,1.429,366,1.57,367,1.758,368,1.758,369,2.043,370,1.758,371,1.758,372,2.043,373,1.758,374,1.758,375,1.758,376,1.758,377,2.043,378,2.043,379,1.758,380,1.57,381,1.57,382,1.57,383,2.803,384,2.043,385,1.144,386,2.043,387,2.803,388,4.638,389,1.758,390,3.258,391,0.815,392,2.043,393,2.043,394,2.043,395,3.258,396,2.043,397,2.043,398,2.043,399,2.043,400,2.043,401,2.043,402,2.043,403,2.043,404,2.043,405,2.043,406,2.043,407,2.043,408,2.043,409,2.503,410,3.244,411,2.47,412,1.429,413,1.429,414,1.758,415,1.429,416,1.758,417,1.429,418,2.043,419,2.043,420,1.57,421,1.144,422,2.043,423,1.57,424,1.57,425,2.012,426,2.043,427,2.043,428,1.429,429,1.758,430,1.57,431,0.905,432,1.57,433,1.429,434,2.803,435,1.758,436,2.503,437,3.258,438,1.824,439,1.712,440,1.443,441,2.803,442,1.758,443,1.758,444,1.429,445,1.758,446,1.758,447,3.258,448,2.279,449,2.279,450,2.279,451,3.258,452,2.803,453,0.815,454,1.368,455,0.815,456,0.815,457,0.815,458,2.045,459,0.703,460,1.922,461,1.467,462,0.815,463,0.775,464,1.144,465,1.799,466,1.317,467,1.9,468,2.012,469,2.135,470,1.429,471,2.243,472,1.524,473,2.296,474,1.707,475,2.043,476,0.775,477,0.775,478,2.043,479,2.043,480,1.317,481,2.043,482,2.803,483,1.758,484,1.951,485,1.011,486,1.144,487,2.043,488,0.905,489,1.758,490,2.043,491,1.758,492,2.043,493,1.758,494,2.043,495,1.758,496,1.429,497,1.758,498,1.758,499,2.803,500,1.758,501,1.758,502,1.758,503,1.224,504,1.758,505,1.144,506,1.224,507,1.758,508,2.803,509,1.758,510,1.758,511,3.496,512,3.496,513,1.758,514,1.758,515,1.758,516,1.758,517,1.758,518,1.224,519,2.803,520,1.758,521,0.609,522,1.068,523,1.068,524,0.67,525,0.67,526,0.67,527,0.555,528,0.67,529,0.529,530,1.212,531,1.068,532,0.529,533,0.341,534,0.67,535,0.529,536,1.068,537,0.555,538,0.639,539,0.529,540,0.927,541,0.67,542,0.529,543,0.67,544,0.529,545,0.67,546,0.529,547,0.529,548,0.67,549,0.529,550,1.068,551,0.555,552,0.639,553,0.67,554,0.529,555,0.67,556,0.529,557,0.609,558,0.529,559,0.609,560,0.67,561,0.529,562,0.581,563,0.67,564,0.67]],["title/components/AppComponent.html",[188,0.444,527,1.01]],["body/components/AppComponent.html",[0,0.073,3,0.209,4,0.183,5,0.183,7,0.183,8,0.475,17,0.647,18,0.576,20,0.295,21,0.018,23,0.33,36,0.209,44,0.011,45,0.014,46,0.011,66,2.075,75,0.849,82,0.648,148,0.738,149,0.507,169,2.288,178,1.625,181,1.251,188,0.785,189,1.251,190,1.886,191,1.583,192,1.583,193,1.583,194,1.583,200,1.583,201,2.547,202,2.317,203,1.978,205,1.978,220,2.98,235,1.831,236,2.371,277,2.702,321,1.831,332,1.831,341,1.311,346,1.872,521,1.44,522,1.978,523,1.978,524,1.583,525,1.583,526,1.583,527,1.872,528,1.583,529,1.251,530,1.963,531,1.978,532,1.251,533,0.806,534,1.583,535,1.251,536,1.978,537,1.311,538,1.509,539,1.251,540,1.717,541,1.583,542,1.251,543,1.583,544,1.251,545,1.583,546,1.251,547,1.251,548,1.583,549,1.251,550,1.978,551,1.311,552,1.509,553,1.583,554,1.251,555,1.583,556,1.251,557,1.44,558,1.251,559,1.44,560,1.583,561,1.251,562,1.374,563,1.583,564,1.583,565,4.153,566,6.581,567,6.033,568,4.827,569,5.055,570,5.93,571,4.827,572,4.827,573,4.827,574,4.827,575,4.827,576,4.827,577,4.153,578,4.153]],["title/modules/AppModule.html",[579,2.601,580,2.601]],["body/modules/AppModule.html",[0,0.053,3,0.153,4,0.133,5,0.133,21,0.019,36,0.212,44,0.008,45,0.012,46,0.008,77,2.959,148,0.883,149,0.37,151,1.743,165,1.154,176,0.684,178,1.435,181,0.912,189,1.716,196,2.462,202,1.05,221,2.424,235,1.857,318,1.559,321,1.335,332,1.335,365,2.462,411,1.478,521,1.05,527,1.972,529,1.716,530,1.679,532,1.716,533,0.818,535,1.716,537,1.798,538,1.101,539,1.716,540,1.393,542,1.716,544,1.716,546,1.716,547,1.716,549,1.716,551,1.798,552,1.101,554,1.716,556,1.716,557,1.05,558,1.716,559,1.05,561,1.716,562,1.002,579,2.462,580,5.461,581,2.269,582,2.462,583,4.844,584,4.326,585,4.844,586,2.704,587,3.029,588,3.029,589,3.029,590,3.029,591,3.029,592,4.269,593,3.707,594,3.425,595,3.029,596,2.462,597,2.704,598,4.213,599,4.897,600,2.741,601,1.85,602,3.521,603,3.521,604,4.213,605,3.521,606,3.521,607,3.029,608,4.897,609,3.521,610,4.897,611,3.521,612,4.897,613,3.521,614,4.897,615,4.897,616,2.462,617,3.029,618,4.897,619,3.521,620,2.704,621,3.521,622,4.897,623,3.521,624,4.897,625,3.521,626,4.897,627,3.521,628,4.897,629,3.521,630,4.897,631,3.029,632,3.425,633,3.521,634,3.029,635,2.462,636,4.326,637,4.897,638,3.521,639,4.897,640,3.521,641,3.156,642,4.897,643,3.521,644,4.897,645,3.521,646,4.897,647,3.521,648,4.897,649,3.521,650,2.462,651,3.029,652,4.897,653,3.521,654,4.897,655,3.521,656,2.462,657,3.029,658,2.462,659,4.213,660,3.521,661,4.897,662,3.521,663,4.897,664,3.521,665,4.897,666,3.521,667,4.897,668,3.521,669,4.213,670,2.704,671,4.897,672,3.521,673,2.462,674,4.897,675,3.521,676,2.462,677,4.897,678,3.521,679,3.521,680,3.029,681,4.213,682,4.897,683,3.521,684,4.897,685,3.521,686,2.704,687,2.462,688,3.029,689,2.462,690,4.897,691,3.521,692,4.897,693,3.521,694,4.897,695,3.521,696,3.029,697,2.462,698,3.029,699,4.897,700,3.521,701,4.897,702,3.521,703,3.521,704,3.521,705,4.897,706,3.521,707,2.462,708,3.029,709,4.897,710,3.521,711,4.897,712,3.521,713,3.521,714,2.704,715,3.521,716,2.704,717,3.521,718,3.029,719,3.521]],["title/modules/AppRoutingModule.html",[579,2.601,592,2.397]],["body/modules/AppRoutingModule.html",[0,0.067,3,0.193,4,0.169,5,0.169,13,0.954,21,0.019,36,0.193,39,2.559,44,0.011,45,0.014,46,0.011,148,0.865,149,0.468,162,1.1,178,1.578,181,1.153,188,0.907,189,1.485,196,3.113,331,1.688,347,1.97,529,1.485,530,1.89,532,1.485,533,1.184,535,1.485,539,1.485,540,1.803,542,1.485,544,1.485,546,1.485,547,1.485,549,1.485,554,1.485,556,1.485,557,1.709,558,1.485,559,1.327,561,1.485,562,1.266,581,2.869,586,3.419,592,3.693,598,3.829,604,4.929,607,3.829,616,3.113,617,3.829,631,3.829,634,3.829,635,3.113,636,4.402,650,3.113,651,3.829,656,3.113,657,3.829,658,3.113,659,4.929,676,3.113,687,3.113,688,3.829,689,3.113,696,3.829,697,3.113,698,3.829,707,3.113,708,3.829,720,4.451,721,4.451,722,4.432,723,5.73,724,4.008,725,4.451,726,3.419,727,6.337,728,4.008,729,4.451,730,3.419,731,5.24,732,4.451,733,7.655,734,5.73,735,4.084,736,5.73,737,5.73,738,3.829,739,2.869,740,5.755,741,6.401,742,4.796,743,4.451,744,4.451,745,3.419,746,4.451,747,4.451,748,4.451,749,4.451,750,4.451,751,4.451,752,4.451]],["title/guards/AuthGuardService.html",[724,2.601,753,2.601]],["body/guards/AuthGuardService.html",[0,0.082,3,0.234,4,0.204,5,0.204,7,0.204,17,0.635,18,0.771,20,0.316,21,0.018,23,0.353,36,0.234,44,0.013,45,0.015,46,0.013,60,0.867,65,0.867,75,0.949,82,0.867,107,0.684,148,0.775,149,0.567,168,2.152,169,2.047,175,2.266,176,1.255,198,1.535,219,3.121,310,2.671,311,2.047,331,2.047,341,1.465,391,2.152,724,4.517,726,5.309,740,5.503,754,3.774,755,5.946,756,3.774,757,4.145,758,2.85,759,4.642,760,5.555,761,6.162,762,5.946,763,6.162,764,4.642,765,4.145,766,2.389,767,2.047,768,2.389,769,3.231,770,4.145]],["title/injectables/AuthService.html",[60,0.499,771,2.081]],["body/injectables/AuthService.html",[0,0.062,3,0.176,4,0.154,5,0.154,7,0.154,8,0.425,11,1.179,17,0.596,18,0.724,20,0.329,21,0.019,22,0.611,23,0.353,36,0.176,44,0.01,45,0.013,46,0.01,60,0.726,62,1.399,65,0.726,66,2.378,75,1.067,76,2.277,77,3.708,79,1.308,80,1.497,81,1.755,82,0.815,83,1.792,84,1.468,85,1.611,86,3.235,87,3.617,88,1.828,89,1.809,90,2.269,91,3.235,92,3.024,95,1.32,96,2.714,97,1.453,98,2.714,99,3.396,100,1.308,105,3.396,106,2.137,107,0.819,108,2.893,109,1.32,110,2.205,111,3.022,112,1.598,131,1.753,133,1.412,137,1.611,142,0.831,143,0.791,145,1.215,146,1.771,147,2.269,148,0.754,149,0.428,150,2.277,151,2.014,152,3.022,153,1.902,154,1.213,155,2.277,156,2.845,158,2.277,159,1.272,160,2.277,161,2.137,162,1.006,163,3.003,164,2.014,165,1.334,166,2.137,167,2.137,168,1.622,169,1.543,170,1.442,171,2.137,172,2.436,173,2.436,174,1.647,175,1.708,176,1.05,249,1.611,533,1.155,735,3.91,739,3.91,771,3.765,772,3.125,773,5.218,774,5.403,775,4.648,776,4.068,777,5.56,778,4.648,779,4.648,780,3.199,781,4.068,782,3.779,783,4.648,784,4.648,785,3.125,786,5.403]],["title/classes/City.html",[0,0.056,10,1.483]],["body/classes/City.html",[0,0.089,2,2.465,3,0.255,4,0.222,5,0.222,7,0.222,8,0.534,10,2.707,12,1.77,17,0.703,20,0.332,21,0.018,22,1.019,23,0.371,27,2.85,36,0.255,44,0.014,45,0.016,46,0.014,787,5.051,788,5.871,789,5.871]],["title/injectables/CityService.html",[60,0.499,217,1.954]],["body/injectables/CityService.html",[0,0.054,3,0.154,4,0.135,5,0.135,7,0.135,8,0.388,10,2.877,11,1.189,12,1.4,17,0.601,18,0.73,20,0.277,21,0.019,22,0.534,23,0.363,36,0.154,44,0.008,45,0.012,46,0.008,60,0.663,62,1.224,65,0.663,66,2.503,75,0.996,76,1.991,77,3.58,79,1.425,80,1.512,81,1.66,82,0.821,83,1.8,84,1.442,85,1.471,86,2.954,87,3.422,88,1.869,89,1.689,90,2.568,91,2.954,92,2.761,95,1.418,96,2.917,97,1.659,98,2.917,99,2.592,100,1.371,101,2.592,102,3.661,105,2.592,106,2.2,107,0.88,108,2.986,109,1.418,110,2.365,111,3.248,112,1.717,115,2.975,116,2.568,117,2.592,120,2.592,121,2.307,122,2.592,124,1.781,133,1.007,142,0.726,143,0.692,145,1.109,146,1.617,147,2.071,148,0.745,149,0.374,150,1.991,151,1.761,152,1.664,153,1.664,154,1.061,155,1.991,156,2.488,158,1.991,159,1.542,160,1.991,161,1.869,162,0.879,163,3.179,164,1.761,165,1.166,166,1.869,167,1.869,168,1.419,169,1.349,170,1.214,171,1.869,172,2.13,173,2.13,174,1.744,175,1.494,176,1.189,178,0.839,181,0.922,184,2.488,217,3.374,228,3.96,385,2.761,790,2.733,791,4.871,792,4.243,793,4.243,794,3.789,795,5.26,796,4.933,797,4.243,798,3.558,799,6.346,800,4.243,801,3.558,802,2.442,803,4.243,804,3.558,805,3.558,806,4.243,807,3.06,808,3.558,809,3.558,810,3.558,811,2.733,812,3.558]],["title/components/EditActivitiesComponent.html",[188,0.444,529,0.963]],["body/components/EditActivitiesComponent.html",[0,0.026,1,1.856,3,0.075,4,0.066,5,0.217,7,0.066,8,0.225,9,1.708,10,1.138,11,1.029,12,1.041,13,1.134,14,1.708,15,1.708,17,0.563,18,0.555,20,0.245,21,0.019,22,0.632,23,0.358,36,0.075,37,2.945,39,1.448,44,0.004,45,0.007,46,0.004,61,2.585,65,0.383,69,2.542,75,0.741,79,1.444,80,1.453,81,1.501,82,0.625,83,1.371,84,1.408,85,1.708,88,0.449,89,1.648,95,1.26,97,1.287,100,1.221,103,3.063,104,1.213,106,1.802,107,0.67,109,1.459,110,1.735,112,1.041,125,1.499,131,1.303,133,1.26,137,1.578,142,0.582,143,0.707,145,1.326,146,1.812,148,0.704,149,0.182,154,0.517,159,0.892,162,0.429,165,0.568,170,1.346,174,1.733,178,0.993,181,0.449,188,0.555,189,0.449,190,0.892,191,0.568,192,0.568,193,1.526,194,0.568,198,0.812,199,1.25,200,0.568,201,2.213,202,2.013,203,0.935,205,0.935,209,2.542,212,2.454,214,1.448,216,2.084,217,0.911,218,2.585,219,2.321,220,2.321,221,2.736,223,2.213,224,2.216,225,2.304,226,1.499,227,2.352,229,2.802,230,1.499,231,1.412,232,1.499,233,1.412,234,1.864,235,1.378,236,2.122,237,1.412,238,1.412,239,1.412,240,1.334,241,1.263,242,1.864,243,1.841,244,1.596,245,1.412,246,1.596,248,1.038,249,1.758,250,1.213,251,1.856,253,1.929,254,2.736,255,0.97,256,0.97,257,0.811,258,0.811,259,0.811,260,0.858,261,0.858,262,1.117,263,1.492,264,0.811,265,1.312,266,1.424,271,5.072,272,1.708,273,2.522,274,2.945,275,2.945,276,3.168,277,2.357,278,2.454,280,2.454,281,3.623,282,2.454,283,1.596,284,3.31,285,1.995,286,2.191,287,2.454,288,1.995,289,2.454,290,3.235,294,1.68,295,2.11,297,2.191,298,1.334,303,1.412,304,3.255,306,1.909,307,2.191,308,2.542,309,2.191,310,1.799,311,1.899,313,1.334,314,1.969,316,1.596,317,0.858,318,0.768,319,1.213,320,1.038,321,0.658,322,1.213,323,1.117,324,1.213,330,1.038,331,0.658,332,0.658,333,1.909,334,1.038,335,0.768,336,0.728,337,0.768,338,0.768,339,0.728,340,0.768,341,1.501,344,2.619,346,1.924,347,0.768,350,1.038,351,1.213,352,1.213,353,1.213,354,1.213,355,1.213,356,1.492,357,1.492,358,1.492,359,1.492,360,1.492,361,1.492,362,1.492,363,1.492,364,1.492,365,1.213,366,1.332,367,1.492,368,1.492,370,1.492,371,1.492,373,1.492,374,1.492,375,1.492,376,1.492,379,1.492,382,1.332,383,1.492,387,2.454,389,2.454,391,1.449,409,2.191,410,2.945,411,2.321,412,1.213,413,1.213,414,1.492,415,1.213,416,1.492,417,1.213,420,1.332,421,0.97,423,2.792,424,1.332,425,1.799,428,1.213,429,1.492,430,1.332,431,0.768,432,1.332,433,1.213,434,1.492,435,1.492,436,2.191,439,1.499,440,1.609,441,2.454,442,1.492,443,1.492,444,2.542,445,1.492,446,1.492,448,1.995,449,1.995,450,2.945,452,2.454,453,0.692,454,0.728,455,0.692,456,0.692,457,1.138,458,2.129,459,0.596,460,1.765,461,1.52,462,1.138,463,0.658,464,0.97,465,1.864,466,1.117,467,1.699,468,1.799,469,1.909,470,1.213,471,2.342,472,1.699,473,1.799,474,1.768,476,1.082,477,0.658,480,1.839,482,2.454,483,1.492,484,2.787,488,1.263,489,1.492,491,1.492,493,1.492,495,1.492,496,1.213,497,1.492,498,1.492,499,2.454,500,1.492,501,1.492,502,1.492,503,1.038,504,1.492,505,1.596,521,0.517,522,0.935,523,0.935,524,0.568,525,0.568,526,0.568,527,0.471,528,0.568,529,1.371,530,1.903,531,0.935,532,0.449,533,0.29,534,0.568,535,0.449,536,0.935,537,0.471,538,0.542,539,0.449,540,1.324,541,0.568,542,0.449,543,0.568,544,0.449,545,0.568,546,0.449,547,0.449,548,0.568,549,0.449,550,0.935,551,0.471,552,0.542,553,0.568,554,0.449,555,0.568,556,0.449,557,0.517,558,0.449,559,0.517,560,0.568,561,0.449,562,0.493,563,0.568,564,0.568,596,1.213,600,0.97,601,0.911,676,4.633,813,4.633,814,1.213,815,2.792,816,2.191,817,3.634,818,3.634,819,2.792,820,2.853,821,2.853,822,2.191,823,2.792,824,1.492,825,4.246,826,2.714,827,2.714,828,2.853,829,2.542,830,2.191,831,1.995,832,2.454,833,2.454,834,2.522,835,2.454,836,1.839,837,1.839,838,1.839,839,1.839,840,1.839,841,1.839,842,1.839,843,1.839,844,1.839,845,1.839,846,1.708,847,1.839,848,1.839,849,1.708,850,1.839,851,2.853,852,1.734,853,2.792,854,2.853,855,4.655,856,2.853,857,1.995,858,2.853,859,1.734,860,2.853,861,4.211,862,3.226,863,2.853,864,1.734,865,1.734,866,2.191,867,3.235,868,1.734,869,2.191,870,1.995,871,1.995,872,2.191,873,1.995,874,2.191,875,1.839,876,1.839,877,1.995,878,3.235,879,1.995,880,1.492,881,2.454,882,1.839,883,1.839,884,1.734,885,1.117,886,2.342,887,0.97,888,1.734,889,3.235,890,3.41,891,1.734,892,1.734,893,1.734,894,1.492,895,2.454,896,1.734,897,1.734,898,1.995,899,2.191,900,1.839,901,1.734,902,1.492,903,1.734,904,1.213,905,1.734,906,1.734,907,1.734,908,2.853,909,1.734,910,1.492,911,1.734,912,1.734,913,1.734,914,1.734,915,2.853,916,1.734,917,1.734,918,1.734,919,1.734,920,1.734,921,1.734,922,1.734,923,1.734,924,1.734,925,1.734,926,1.734,927,2.853,928,1.492,929,1.734,930,2.454,931,2.454,932,2.454,933,1.839,934,2.853,935,1.734,936,1.734,937,1.332,938,1.734,939,1.734,940,3.634,941,1.734,942,1.526,943,1.734,944,1.734,945,1.734,946,1.734,947,1.734,948,1.734,949,1.734,950,1.734,951,1.734,952,1.734,953,1.734,954,1.734,955,1.332,956,2.792,957,1.332,958,1.332,959,1.332,960,1.332,961,1.734,962,1.734,963,1.734,964,1.734,965,1.734,966,1.734,967,2.853,968,1.492,969,1.734,970,1.734,971,1.734,972,1.734,973,1.734,974,2.853,975,1.734,976,1.734,977,1.734,978,1.492,979,0.768,980,1.332,981,1.332,982,1.492,983,1.117,984,1.492,985,1.734,986,1.734,987,1.734,988,1.734]],["title/components/EditUserAdminComponent.html",[188,0.444,532,0.963]],["body/components/EditUserAdminComponent.html",[0,0.032,3,0.092,4,0.081,5,0.081,7,0.128,8,0.265,11,0.654,12,1.173,17,0.466,18,0.402,20,0.269,21,0.019,23,0.351,36,0.092,39,0.732,44,0.005,45,0.008,46,0.005,65,0.452,75,0.834,79,1.395,80,1.395,81,1.621,82,0.452,83,1.424,84,1.388,85,1.832,88,0.872,89,1.877,95,1.219,97,1.067,100,1.304,106,1.717,107,0.601,109,1.353,110,1.103,112,1.173,131,1.674,133,1.37,137,1.78,142,0.435,143,0.922,145,1.067,148,0.743,149,0.224,153,0.995,154,0.635,159,1.052,162,0.526,165,1.695,170,1.317,174,1.668,176,0.922,178,1.119,181,0.551,188,0.498,189,0.551,190,1.052,191,0.698,192,0.698,193,0.698,194,0.698,198,0.958,199,1.436,200,0.698,201,2.3,202,2.092,203,1.103,205,1.103,214,1.632,216,2.349,219,2.506,220,2.506,221,2.954,223,1.768,224,2.642,225,2.559,226,1.768,227,2.51,230,1.768,231,1.666,232,1.768,233,1.666,234,2.101,235,1.583,236,2.396,237,1.666,238,1.666,239,1.666,240,1.574,241,1.49,242,2.433,243,1.791,244,1.884,245,1.666,246,1.884,248,2.015,249,1.832,251,1.893,253,1.052,254,2.954,255,1.884,256,1.884,257,1.574,258,1.574,259,1.574,260,1.666,261,1.666,262,2.169,264,1.574,265,1.507,266,1.35,272,2.841,276,2.015,294,1.893,295,2.38,298,1.574,299,2.585,304,3.615,306,2.493,307,2.585,308,2.354,310,1.666,311,1.961,313,1.574,314,2.219,316,1.884,317,1.053,318,0.942,321,0.807,331,0.807,332,0.807,333,1.768,334,1.274,335,0.942,336,0.894,337,0.942,338,0.942,339,0.894,340,0.942,341,1.563,344,2.066,346,1.799,391,2.192,411,1.993,421,1.884,425,1.666,428,1.489,430,1.635,431,0.942,438,1.191,439,1.118,440,1.49,453,0.849,454,0.894,455,0.849,456,0.849,457,1.342,458,1.507,459,0.732,460,1.277,461,0.768,462,0.849,463,0.807,464,1.191,465,0.942,466,1.372,471,2.288,472,1.574,473,2.349,474,0.894,476,0.807,477,1.277,484,2.015,485,1.666,486,1.191,506,2.015,507,1.831,508,2.895,509,1.831,510,1.831,511,3.591,512,3.591,513,1.831,514,1.831,515,1.831,516,1.831,517,1.831,518,2.015,519,2.895,520,1.831,521,1.004,522,1.103,523,1.103,524,0.698,525,0.698,526,0.698,527,0.578,528,0.698,529,0.551,530,2.001,531,1.103,532,1.491,533,1.261,534,0.698,535,0.551,536,1.103,537,0.578,538,0.665,539,0.551,540,0.958,541,0.698,542,0.551,543,0.698,544,0.551,545,0.698,546,0.551,547,0.551,548,0.698,549,0.551,550,1.103,551,0.578,552,0.665,553,0.698,554,0.551,555,0.698,556,0.551,557,0.635,558,0.551,559,0.635,560,0.698,561,0.551,562,0.606,563,0.698,564,0.698,687,4.567,742,2.169,813,4.567,819,3.207,822,2.585,823,3.645,824,1.831,825,4.585,829,2.92,830,2.585,831,2.354,832,2.895,833,2.895,834,2.015,835,2.895,853,2.585,866,2.585,867,3.645,869,2.585,870,2.354,871,2.354,872,2.585,873,2.354,874,2.585,875,2.169,876,2.169,877,2.354,878,3.645,879,2.354,882,2.169,885,2.169,886,3.058,887,1.884,890,3.71,898,2.354,899,2.585,900,1.372,902,1.831,904,1.489,928,1.831,937,1.635,942,1.413,955,1.635,956,3.207,957,1.635,958,1.635,959,1.635,960,1.635,983,1.372,984,1.831,989,1.831,990,4.175,991,3.366,992,4.175,993,4.175,994,2.333,995,4.175,996,4.745,997,2.954,998,4.745,999,2.841,1000,3.366,1001,1.884,1002,2.128,1003,2.128,1004,2.128,1005,2.128,1006,3.366,1007,2.128,1008,3.366,1009,2.417,1010,2.128,1011,2.128,1012,2.128,1013,2.128,1014,1.635,1015,1.372,1016,1.831,1017,2.169,1018,1.635,1019,2.128,1020,2.128,1021,2.559,1022,2.72,1023,2.128,1024,2.128,1025,1.635,1026,1.831,1027,2.128,1028,2.128,1029,1.635,1030,1.831,1031,2.128,1032,2.128,1033,2.128,1034,1.372,1035,3.366,1036,2.128,1037,2.585,1038,1.635,1039,1.635,1040,1.372,1041,1.635,1042,2.128,1043,1.635,1044,2.128,1045,2.128,1046,2.128,1047,2.128,1048,2.128,1049,2.128,1050,1.274,1051,2.128,1052,2.128,1053,1.635,1054,1.274,1055,2.128,1056,1.831,1057,3.366,1058,2.128,1059,2.128,1060,2.128,1061,1.831,1062,1.831,1063,1.831,1064,1.831,1065,1.831,1066,1.831,1067,1.831,1068,1.831,1069,1.831,1070,1.831,1071,2.895,1072,2.895,1073,3.366,1074,2.354,1075,3.366,1076,3.366,1077,1.831,1078,2.92,1079,2.128,1080,1.635,1081,1.191,1082,1.118,1083,1.635,1084,2.128,1085,2.128,1086,2.691,1087,2.128,1088,1.831,1089,1.635,1090,1.831,1091,1.831,1092,1.635,1093,2.128,1094,2.128]],["title/components/EditUserComponent.html",[188,0.444,535,0.963]],["body/components/EditUserComponent.html",[0,0.035,3,0.099,4,0.086,5,0.086,7,0.135,8,0.28,11,0.849,13,1.145,17,0.485,18,0.424,20,0.241,21,0.019,23,0.351,36,0.099,39,1.696,44,0.005,45,0.008,46,0.005,65,0.478,75,0.867,79,1.292,80,1.371,81,1.744,82,0.478,83,1.584,84,1.371,85,1.688,88,0.921,89,1.688,95,1.248,97,0.8,100,1.101,106,1.688,107,0.625,109,1.311,110,1.166,112,0.879,131,1.638,133,1.391,137,1.688,142,0.726,143,0.691,145,1.109,148,0.733,149,0.24,154,0.681,162,0.564,165,1.752,170,1.31,174,1.537,176,1.101,178,1.163,181,0.591,188,0.521,189,0.591,190,1.112,191,0.748,192,0.748,193,0.748,194,0.748,198,1.012,199,1.502,200,0.748,201,2.327,202,2.117,203,1.166,205,1.166,209,3.055,214,1.696,216,2.441,220,2.567,223,1.869,224,2.183,225,2.646,226,1.869,227,2.258,233,1.76,234,1.574,235,1.657,236,2.285,237,1.76,238,1.76,239,1.76,243,1.403,248,2.13,249,1.471,251,1.967,253,1.112,254,3.026,255,1.99,256,1.99,257,1.663,258,1.663,259,1.663,260,1.76,261,1.76,264,1.663,265,1.78,266,1.403,276,2.13,294,1.967,295,1.418,298,1.663,303,1.76,310,1.76,311,2.147,313,1.663,314,2.306,316,1.99,317,1.13,318,1.011,332,0.866,333,1.869,334,1.367,335,1.011,336,0.959,337,1.011,338,1.011,339,0.959,340,1.011,341,1.339,344,2.646,345,0.959,346,1.886,347,1.934,349,2.487,350,2.13,391,2.358,409,2.732,410,3.449,411,2.377,412,1.597,413,1.597,415,1.597,417,1.597,425,1.76,431,1.011,436,2.732,438,1.278,439,1.2,440,1.574,453,0.911,454,1.493,455,0.911,456,0.911,457,1.418,458,1.284,459,0.785,460,1.349,461,0.824,462,0.911,463,0.866,464,1.278,465,1.011,467,1.068,468,1.13,469,1.2,470,1.597,471,2.366,472,1.663,473,2.441,474,0.959,476,0.866,477,1.349,485,1.13,488,1.011,505,1.278,506,1.367,518,1.367,521,1.303,522,1.166,523,1.166,524,0.748,525,0.748,526,0.748,527,0.62,528,0.748,529,0.591,530,1.982,531,1.166,532,0.591,533,1.049,534,0.748,535,1.584,536,1.166,537,0.62,538,0.714,539,0.591,540,1.012,541,0.748,542,0.591,543,0.748,544,0.591,545,0.748,546,0.591,547,0.591,548,0.748,549,0.591,550,1.166,551,0.62,552,0.714,553,0.748,554,0.591,555,0.748,556,0.591,557,0.681,558,0.591,559,0.681,560,0.748,561,0.591,562,0.65,563,0.748,564,0.748,689,4.575,758,2.319,766,1.011,767,0.866,768,1.011,813,4.575,819,3.356,822,2.732,823,3.788,829,3.449,853,2.732,866,2.732,867,3.788,869,2.732,870,2.487,871,2.487,872,2.732,873,2.487,874,2.732,875,2.292,876,2.292,877,2.487,878,3.788,879,2.487,885,2.292,886,3.178,887,1.99,890,3.178,898,2.487,899,2.732,900,1.471,904,2.487,937,1.754,942,2.071,955,1.754,956,4.106,957,1.754,958,1.754,959,1.754,960,1.754,979,1.011,983,2.292,994,0.785,997,2.926,1001,1.99,1015,1.471,1017,2.292,1018,1.754,1021,2.646,1022,2.802,1026,3.059,1029,1.754,1030,1.964,1034,1.471,1037,2.732,1038,1.754,1039,1.754,1040,1.471,1041,1.754,1043,1.754,1050,1.367,1054,1.367,1056,1.964,1061,1.964,1062,1.964,1063,1.964,1064,1.964,1065,1.964,1066,1.964,1067,1.964,1068,1.964,1069,1.964,1070,1.964,1071,3.059,1072,3.059,1074,2.487,1078,2.487,1081,1.278,1082,1.2,1083,1.754,1086,2.816,1088,1.964,1089,1.754,1090,1.964,1091,1.964,1095,1.754,1096,3.39,1097,2.283,1098,3.758,1099,3.059,1100,4.368,1101,4.932,1102,3.059,1103,1.754,1104,3.556,1105,2.13,1106,2.13,1107,1.99,1108,1.869,1109,1.99,1110,2.283,1111,2.283,1112,2.283,1113,2.283,1114,2.283,1115,2.283,1116,2.283,1117,1.964,1118,2.283,1119,2.445,1120,1.2,1121,3.758,1122,3.059,1123,2.487,1124,1.964,1125,2.283,1126,2.283,1127,1.597,1128,1.754,1129,1.754,1130,1.367,1131,2.283,1132,1.99,1133,2.732,1134,2.283,1135,2.283,1136,2.283,1137,2.283,1138,1.597,1139,2.283,1140,2.283,1141,1.13,1142,2.283,1143,2.283,1144,2.283,1145,2.283,1146,2.283,1147,1.964,1148,1.964,1149,1.964,1150,2.283,1151,2.283,1152,2.283,1153,2.283,1154,2.283,1155,3.556,1156,2.283,1157,3.556,1158,2.283,1159,3.556,1160,2.283,1161,2.283,1162,2.283,1163,2.283,1164,3.556,1165,3.556,1166,3.556,1167,3.356,1168,2.283,1169,2.283,1170,2.283,1171,3.059,1172,3.556,1173,1.574,1174,1.869,1175,2.732,1176,3.059,1177,2.732,1178,3.059,1179,3.059,1180,2.732,1181,3.556,1182,2.283,1183,2.283,1184,2.283,1185,2.283,1186,2.283,1187,2.283,1188,1.597]],["title/injectables/ImagesService.html",[60,0.499,1189,2.857]],["body/injectables/ImagesService.html",[0,0.082,1,2.171,3,0.236,4,0.206,5,0.206,7,0.206,8,0.511,17,0.638,18,0.775,20,0.34,21,0.019,22,0.817,23,0.379,36,0.236,44,0.013,45,0.015,46,0.013,60,0.872,62,1.872,65,0.872,75,0.957,76,3.046,77,3.913,82,0.872,107,0.69,142,1.111,143,1.058,148,0.778,149,0.572,150,3.046,151,2.694,157,3.259,162,1.345,163,2.694,164,2.694,165,1.784,166,2.86,167,2.86,168,2.171,169,2.064,175,2.285,176,1.058,1189,4.987,1190,4.181,1191,6.937,1192,6.491,1193,6.491,1194,6.491,1195,5.443,1196,6.491,1197,6.491,1198,5.443]],["title/components/InformationActivitiesComponent.html",[188,0.444,537,1.01]],["body/components/InformationActivitiesComponent.html",[0,0.048,1,2.697,3,0.199,4,0.121,5,0.121,7,0.121,8,0.36,9,2.742,10,2.132,11,0.89,13,1.146,17,0.573,18,0.382,20,0.262,21,0.019,23,0.337,36,0.139,39,1.101,44,0.008,45,0.011,46,0.008,61,3.162,65,0.615,66,1.839,75,0.94,79,1.42,80,1.458,81,1.584,82,0.43,84,1.388,85,1.972,95,0.935,97,0.72,100,0.89,103,3.092,106,1.74,107,0.406,112,1.526,125,2.406,133,1.191,137,1.365,145,1.312,146,2.024,148,0.692,149,0.336,157,1.916,174,1.584,175,1.344,178,1.376,181,0.829,188,0.638,189,0.829,190,1.431,191,1.049,192,1.049,193,1.753,194,1.049,198,1.303,199,1.839,200,1.049,201,2.442,202,2.221,203,1.501,205,1.501,214,2.007,227,2.637,234,2.733,236,2.402,240,2.887,241,2.733,243,2.011,249,1.365,251,1.826,253,1.431,255,2.562,266,1.303,284,3.494,294,1.826,295,2.327,303,1.584,330,1.916,335,1.417,336,1.344,337,1.417,338,1.417,339,1.344,340,1.417,341,1.243,346,1.676,448,3.202,449,3.202,450,4.081,454,2.776,458,2.229,459,1.101,461,1.155,462,1.276,465,1.417,471,2.367,472,1.496,474,1.344,476,2.028,477,2.028,480,2.951,484,3.201,486,1.791,488,1.417,521,0.954,522,1.501,523,1.501,524,1.049,525,1.049,526,1.049,527,0.869,528,1.049,529,0.829,530,1.594,531,1.501,532,0.829,533,0.535,534,1.049,535,0.829,536,1.501,537,1.795,538,2.114,539,0.829,540,1.757,541,1.049,542,0.829,543,1.049,544,0.829,545,1.049,546,0.829,547,0.829,548,1.049,549,0.829,550,1.501,551,0.869,552,1.001,553,1.049,554,0.829,555,1.049,556,0.829,557,0.954,558,0.829,559,0.954,560,1.049,561,0.829,562,0.911,563,1.049,564,1.049,569,4.933,600,1.791,601,1.681,670,2.458,673,4.492,814,2.238,815,4.106,816,3.517,826,3.761,827,3.761,834,2.742,836,2.951,837,2.951,838,2.951,839,2.951,840,2.951,841,2.951,842,2.951,843,2.951,844,2.951,845,2.951,846,2.742,847,2.951,848,2.951,849,2.742,850,2.951,862,2.063,883,2.951,887,2.562,889,3.517,894,2.753,895,3.939,910,2.753,930,2.753,931,2.753,932,2.753,933,2.063,978,2.753,979,1.417,980,2.458,981,2.458,982,2.753,1034,2.063,1082,1.681,1199,5.524,1200,3.2,1201,5.019,1202,6.173,1203,3.939,1204,4.599,1205,4.578,1206,4.578,1207,4.599,1208,4.599,1209,4.599,1210,3.2,1211,3.2,1212,2.753,1213,3.2,1214,3.2,1215,3.202,1216,3.202,1217,3.939,1218,3.202,1219,3.939,1220,3.2,1221,1.916,1222,1.916,1223,3.2,1224,3.2]],["title/interceptors/InterceptorService.html",[1225,3.199,1226,2.601]],["body/interceptors/InterceptorService.html",[0,0.075,3,0.216,4,0.189,5,0.189,7,0.189,17,0.604,18,0.734,20,0.301,21,0.019,23,0.365,36,0.267,44,0.012,45,0.015,46,0.012,60,0.826,65,0.826,75,1.082,82,0.826,107,0.779,108,2.662,148,0.818,149,0.523,151,2.465,154,1.485,162,1.52,164,2.465,168,1.986,169,1.889,176,1.297,198,1.417,219,3.104,266,1.417,300,3.826,311,1.889,331,1.889,341,1.944,431,2.723,632,3.483,714,3.826,758,2.766,766,2.205,767,1.889,768,2.205,769,2.982,1120,2.617,1226,4.668,1227,4.98,1228,3.826,1229,6.97,1230,6.151,1231,4.284,1232,4.98,1233,4.98,1234,6.151,1235,6.97,1236,6.674,1237,6.97,1238,4.98,1239,6.151,1240,5.291,1241,4.98,1242,6.151,1243,5.291,1244,6.151,1245,3.996,1246,4.98,1247,4.98,1248,4.98,1249,4.98,1250,3.826,1251,4.98,1252,4.98,1253,4.98,1254,4.98,1255,4.98,1256,4.284,1257,4.98,1258,4.284,1259,4.284]],["title/classes/Interest.html",[0,0.056,13,0.797]],["body/classes/Interest.html",[0,0.102,2,2.43,3,0.251,4,0.219,5,0.219,7,0.219,8,0.53,12,1.759,13,1.442,20,0.329,21,0.018,22,1.069,23,0.368,27,3.077,36,0.292,44,0.014,45,0.016,46,0.014,345,3.077,1138,4.047,1141,2.864,1260,4.445,1261,5.786,1262,5.786,1263,3.729]],["title/classes/Interest-1.html",[0,0.047,13,0.665,1173,1.373]],["body/classes/Interest-1.html",[0,0.11,2,2.332,3,0.241,4,0.21,5,0.21,7,0.21,8,0.517,12,1.373,13,1.55,20,0.321,21,0.018,22,1.167,23,0.359,27,2.938,36,0.314,44,0.013,45,0.016,46,0.013,152,2.596,345,2.938,533,0.927,780,2.748,994,2.259,1021,3.252,1022,3.252,1141,3.463,1264,3.579,1265,5.553,1266,5.553,1267,3.271,1268,3.579,1269,3.676,1270,3.579]],["title/classes/InterestByUser.html",[0,0.056,1263,2.397]],["body/classes/InterestByUser.html",[0,0.101,2,2.408,3,0.249,4,0.217,5,0.217,7,0.217,8,0.527,12,1.417,13,1.229,20,0.347,21,0.018,22,1.065,23,0.387,27,3.125,36,0.29,44,0.014,45,0.016,46,0.014,345,3.068,1138,4.959,1141,3.509,1260,4.404,1263,4.314,1271,5.734,1272,5.734,1273,5.734]],["title/injectables/InterestService.html",[60,0.499,218,1.739]],["body/injectables/InterestService.html",[0,0.049,3,0.141,4,0.123,5,0.123,7,0.123,8,0.364,11,1.207,12,1.596,13,1.52,17,0.61,18,0.741,20,0.264,21,0.019,22,0.488,23,0.363,36,0.141,44,0.008,45,0.011,46,0.008,60,0.622,62,1.118,65,0.622,66,2.518,75,0.948,76,1.819,77,3.49,79,1.473,80,1.503,81,1.595,82,0.834,83,1.759,84,1.438,85,1.381,86,2.772,87,3.288,88,1.871,89,1.608,90,2.71,91,2.772,92,2.591,95,1.431,96,2.943,97,1.576,98,2.943,99,2.432,100,1.378,101,2.432,103,2.165,105,2.432,106,2.196,107,0.888,108,2.997,109,1.462,110,2.368,111,3.277,112,1.77,115,2.833,116,2.467,117,3.087,120,2.432,121,2.165,122,2.432,124,1.671,131,1.385,133,1.386,142,0.664,143,0.632,145,1.041,146,1.518,147,1.944,148,0.659,149,0.342,150,1.819,151,1.609,154,0.969,158,1.819,159,1.686,160,1.819,161,1.708,162,0.803,163,3.195,164,2.291,165,1.065,166,1.708,167,1.708,168,1.296,169,1.233,170,1.155,171,1.708,172,1.946,173,1.946,174,1.753,175,1.365,176,1.207,178,0.766,181,0.842,184,2.273,218,2.904,229,3.017,243,1.534,245,1.609,249,2.025,385,4.121,802,2.291,871,2.273,1263,2.095,1274,2.497,1275,4.638,1276,3.982,1277,3.556,1278,3.556,1279,3.982,1280,5.054,1281,4.629,1282,3.982,1283,3.25,1284,4.11,1285,6.16,1286,3.556,1287,3.25,1288,3.982,1289,3.25,1290,3.982,1291,3.25,1292,3.982,1293,3.982,1294,3.25,1295,3.771,1296,3.982,1297,2.095,1298,3.25,1299,4.629,1300,3.25,1301,3.25,1302,2.497,1303,3.25,1304,3.25]],["title/guards/IsLogginInGuardService.html",[728,2.601,753,2.601]],["body/guards/IsLogginInGuardService.html",[0,0.083,3,0.237,4,0.207,5,0.207,7,0.207,17,0.538,18,0.653,20,0.268,21,0.019,23,0.356,36,0.237,44,0.013,45,0.015,46,0.013,60,0.875,65,0.875,75,0.963,82,0.736,107,0.694,148,0.78,149,0.576,162,1.354,168,2.184,169,2.077,175,2.3,198,1.558,219,3.132,266,1.558,331,2.077,341,1.487,728,4.557,730,5.343,738,6.416,754,3.83,756,3.83,757,4.207,758,2.859,759,4.711,764,4.711,766,2.425,767,2.077,768,2.425,769,3.279,994,1.884,1053,4.207,1305,5.983,1306,3.53,1307,4.711,1308,4.711]],["title/classes/JwtModel.html",[0,0.056,155,2.081]],["body/classes/JwtModel.html",[0,0.09,2,2.495,3,0.258,4,0.225,5,0.225,7,0.225,8,0.538,20,0.291,21,0.018,22,1.026,23,0.325,36,0.258,44,0.014,45,0.016,46,0.014,155,3.825,1245,4.308,1309,5.112,1310,5.943]],["title/components/ListActivitiesEvaluateComponent.html",[188,0.444,539,0.963]],["body/components/ListActivitiesEvaluateComponent.html",[0,0.039,1,2.638,3,0.11,4,0.096,5,0.096,7,0.096,8,0.304,11,0.909,17,0.581,18,0.558,20,0.275,21,0.019,22,0.581,23,0.346,27,1.624,36,0.11,39,1.33,40,2.457,42,2.705,44,0.006,45,0.009,46,0.006,61,2.961,65,0.519,75,0.918,79,1.418,80,1.367,81,1.418,82,0.628,83,1.002,84,1.387,85,1.395,89,1.153,95,1.207,97,0.87,100,1.231,103,2.442,106,1.153,107,0.593,109,1.435,112,1.705,124,1.688,125,3.532,130,4.315,131,1.449,133,1.293,137,1.153,140,3.653,143,1.015,145,1.33,146,1.841,148,0.742,149,0.268,154,0.759,157,1.525,159,2.068,170,1.267,174,1.606,176,0.752,178,1.626,181,0.66,188,0.558,189,0.66,190,1.209,191,0.835,192,0.835,193,1.533,194,0.835,198,1.101,199,1.608,200,0.835,201,2.367,202,2.153,203,1.268,205,1.268,214,1.796,227,2.359,236,2.034,243,1.802,251,1.543,253,1.633,266,1.331,272,2.316,273,2.316,274,2.705,275,2.705,276,2.316,277,2.165,284,3.128,285,2.705,294,2.083,295,2.083,298,1.808,304,3.271,308,3.653,309,2.971,313,1.808,321,0.966,330,1.525,335,1.127,336,1.069,337,1.127,338,1.127,339,1.069,340,1.127,341,1.418,346,1.525,347,1.712,440,1.127,453,1.015,455,1.015,456,1.015,457,1.543,458,1.886,459,1.33,460,1.467,461,0.919,462,1.015,463,0.966,464,1.425,465,1.712,466,1.641,467,1.191,468,1.26,469,1.338,471,1.712,474,1.069,476,0.966,477,1.467,485,1.914,488,1.127,506,3.128,518,3.884,521,0.759,522,1.268,523,1.268,524,0.835,525,0.835,526,0.835,527,0.691,528,0.835,529,0.66,530,1.395,531,1.268,532,0.66,533,0.646,534,0.835,535,0.66,536,1.268,537,0.691,538,0.796,539,1.592,540,2.134,541,0.835,542,0.66,543,0.835,544,0.66,545,0.835,546,0.66,547,0.66,548,0.835,549,0.66,550,1.268,551,0.691,552,0.796,553,0.835,554,0.66,555,0.835,556,0.66,557,0.759,558,0.66,559,0.759,560,0.835,561,0.66,562,0.724,563,0.835,564,0.835,600,1.425,601,1.338,697,4.536,758,2.402,766,1.127,767,0.966,768,1.127,802,1.914,826,3.366,827,3.366,834,3.128,836,2.493,837,2.493,838,2.493,839,2.493,840,2.493,841,2.493,842,2.493,843,2.493,844,2.493,845,3.366,846,2.316,847,2.493,848,2.493,849,2.316,850,2.493,857,1.781,862,1.641,870,2.705,883,2.493,889,2.971,898,2.705,900,1.641,933,1.641,942,2.659,979,1.127,997,3.042,1001,2.165,1015,1.641,1034,2.493,1086,1.641,1092,2.971,1096,3.363,1103,1.956,1105,2.316,1106,2.316,1107,2.165,1108,2.032,1109,2.165,1119,2.165,1120,1.338,1127,1.781,1128,1.956,1129,1.956,1130,1.525,1132,1.425,1133,2.971,1173,2.804,1215,2.705,1216,2.705,1218,2.705,1311,4.18,1312,2.19,1313,3.868,1314,4.677,1315,3.868,1316,4.023,1317,4.677,1318,4.677,1319,4.677,1320,3.868,1321,2.971,1322,3.868,1323,2.546,1324,5.914,1325,3.868,1326,2.546,1327,3.868,1328,3.868,1329,2.971,1330,2.546,1331,2.971,1332,2.705,1333,2.546,1334,2.546,1335,2.546,1336,3.868,1337,3.868,1338,3.868,1339,2.19,1340,2.546,1341,2.546,1342,2.546,1343,2.546,1344,2.19,1345,1.956,1346,1.956,1347,2.546,1348,2.546,1349,3.868,1350,3.868,1351,2.546,1352,2.546,1353,3.327,1354,3.868,1355,3.868,1356,2.546,1357,2.546,1358,1.956,1359,2.19,1360,1.781,1361,2.19,1362,5.914,1363,2.19,1364,5.087,1365,2.546,1366,2.546,1367,2.19,1368,2.546,1369,2.546,1370,2.19,1371,2.546,1372,2.546,1373,2.546,1374,2.546,1375,2.546,1376,2.546,1377,2.546,1378,2.546,1379,2.546,1380,2.546,1381,2.546,1382,2.546,1383,2.19,1384,2.19,1385,2.546,1386,2.546,1387,2.546,1388,2.546,1389,3.327,1390,3.327,1391,2.546,1392,2.546,1393,2.546,1394,3.593,1395,2.19,1396,2.19,1397,2.19,1398,3.327,1399,2.971,1400,2.19,1401,2.19,1402,2.19,1403,1.956]],["title/components/ListCitiesComponent.html",[188,0.444,542,0.963]],["body/components/ListCitiesComponent.html",[0,0.042,3,0.121,4,0.106,5,0.106,7,0.106,8,0.327,10,2.803,12,1.026,17,0.675,18,0.653,20,0.319,21,0.019,23,0.4,36,0.121,39,2.241,44,0.007,45,0.01,46,0.007,65,0.558,75,0.73,82,0.736,107,0.871,142,1.118,143,1.065,148,0.746,149,0.294,176,0.962,178,1.657,181,1.076,188,0.591,189,0.725,190,1.298,191,0.918,192,0.918,193,0.918,194,0.918,198,1.182,199,1.703,200,0.918,201,2.4,202,2.183,203,1.361,205,1.361,214,1.884,216,3.14,217,3.22,220,2.664,221,3.14,225,2.896,235,1.062,236,2.476,266,1.979,273,1.676,310,3.225,311,2.077,317,1.385,318,1.239,319,1.958,321,1.062,332,1.062,333,2.601,334,1.676,341,1.588,343,2.676,344,2.45,346,1.866,347,1.239,391,2.829,411,2.951,421,3.274,425,2.896,431,2.192,438,2.324,439,2.182,440,2.59,453,1.116,454,1.175,455,1.116,456,1.116,457,1.656,458,1.499,459,0.963,460,1.575,461,1.011,462,1.116,463,1.062,476,2.219,477,2.077,496,1.958,503,1.676,521,0.835,522,1.361,523,1.361,524,0.918,525,0.918,526,0.918,527,0.76,528,0.918,529,0.725,530,1.476,531,1.361,532,0.725,533,0.467,534,0.918,535,0.725,536,1.361,537,0.76,538,0.875,539,0.725,540,1.182,541,0.918,542,1.419,543,0.918,544,0.725,545,0.918,546,0.725,547,0.725,548,0.918,549,0.725,550,1.361,551,0.76,552,0.875,553,0.918,554,0.725,555,0.918,556,0.725,557,0.835,558,0.725,559,0.835,560,0.918,561,0.725,562,0.796,563,0.918,564,0.918,641,4.089,650,5.142,745,5.113,794,3.19,807,2.408,811,2.15,1050,2.964,1054,1.676,1080,2.15,1081,1.566,1082,1.471,1119,2.771,1120,1.471,1132,2.771,1221,2.487,1222,1.676,1243,2.408,1250,2.15,1311,4.739,1404,2.408,1405,4.95,1406,4.152,1407,4.95,1408,4.95,1409,4.95,1410,4.95,1411,4.95,1412,4.711,1413,4.711,1414,5.477,1415,5.477,1416,5.477,1417,4.711,1418,3.831,1419,3.572,1420,4.152,1421,2.799,1422,4.152,1423,2.799,1424,2.799,1425,4.152,1426,2.799,1427,2.799,1428,2.799,1429,2.799,1430,2.799,1431,2.799,1432,2.799,1433,3.572,1434,2.799,1435,4.152,1436,2.799,1437,2.799,1438,2.799,1439,2.799,1440,2.799,1441,2.799,1442,2.799,1443,2.799,1444,2.799,1445,2.799,1446,4.259,1447,2.799,1448,5.477,1449,4.152,1450,2.799,1451,4.95,1452,2.904,1453,2.799,1454,4.95,1455,4.152,1456,2.799,1457,4.152,1458,1.958,1459,2.799,1460,1.958,1461,2.799,1462,2.799,1463,5.032,1464,2.799,1465,2.408,1466,2.799,1467,4.152,1468,4.95,1469,2.799,1470,2.799,1471,2.799,1472,2.799,1473,2.799,1474,2.799,1475,2.799,1476,4.152,1477,5.477,1478,5.477,1479,5.477,1480,1.958,1481,1.958]],["title/components/ListInterestComponent.html",[188,0.444,544,0.963]],["body/components/ListInterestComponent.html",[0,0.033,3,0.095,4,0.083,5,0.083,7,0.083,8,0.27,11,0.667,12,0.849,13,1.528,17,0.609,18,0.574,20,0.284,21,0.019,23,0.385,36,0.095,39,2.13,44,0.005,45,0.008,46,0.005,65,0.461,75,0.846,79,1.37,80,1.386,81,1.635,82,0.646,84,1.37,85,1.795,88,1.247,89,1.657,95,1.134,97,0.772,100,1.277,101,3.163,106,1.024,107,0.819,109,1.229,112,1.373,116,1.441,121,1.605,124,0.788,131,1.419,133,0.982,137,1.795,142,0.982,143,0.935,145,1.082,148,0.675,149,0.229,170,1.29,174,1.508,176,0.825,178,1.571,181,0.889,188,0.506,189,0.565,190,1.073,191,0.715,192,0.715,193,0.715,194,0.715,198,0.977,199,1.459,200,0.715,201,2.31,202,2.101,203,1.125,205,1.125,213,3.696,214,1.655,216,2.98,218,2.718,220,2.528,221,2.98,223,1.804,224,1.52,225,2.877,226,1.804,227,2.401,229,3.466,233,1.699,234,2.459,235,1.609,236,2.407,237,1.699,238,1.699,239,1.699,240,2.25,241,2.13,242,1.52,243,1.87,244,1.921,245,1.699,246,1.921,249,2.114,251,1.369,254,2.75,257,1.605,258,1.605,259,1.605,260,1.699,261,1.699,264,2.25,265,1.239,266,1.87,272,2.056,273,1.307,283,1.921,292,1.921,294,1.919,295,1.369,298,1.605,303,1.08,310,2.98,311,1.825,313,2.815,314,2.815,315,3.109,317,1.08,318,0.966,320,1.307,321,0.828,332,0.828,333,2.23,334,1.307,341,1.42,343,2.212,344,2.1,345,2.197,346,1.755,347,0.966,380,1.676,381,1.676,382,3.696,385,3.968,391,2.691,411,2.798,421,2.928,425,2.59,431,1.879,438,1.921,439,1.804,440,2.316,453,0.87,454,0.916,455,0.87,456,0.87,457,1.369,458,1.239,459,0.751,460,1.302,461,0.788,462,0.87,463,0.828,476,1.984,477,1.825,496,1.526,503,1.307,505,2.693,521,0.651,522,1.125,523,1.125,524,0.715,525,0.715,526,0.715,527,0.592,528,0.715,529,0.565,530,1.266,531,1.125,532,0.565,533,0.364,534,0.715,535,0.565,536,1.125,537,0.592,538,0.682,539,0.565,540,0.977,541,0.715,542,0.565,543,0.715,544,1.506,545,0.715,546,0.565,547,0.565,548,0.715,549,0.565,550,1.125,551,0.592,552,0.682,553,0.715,554,0.565,555,0.715,556,0.565,557,0.651,558,0.565,559,0.651,560,0.715,561,0.565,562,0.621,563,0.715,564,0.715,641,3.88,656,4.958,802,1.699,882,2.212,886,3.58,890,3.58,1050,2.541,1054,1.307,1080,1.676,1081,1.221,1082,1.147,1119,2.693,1120,1.147,1132,2.375,1221,2.056,1222,1.307,1250,1.676,1277,2.637,1278,2.637,1284,3.365,1286,2.637,1302,1.676,1311,4.569,1412,4.139,1413,4.139,1417,4.139,1418,3.365,1419,2.953,1433,2.953,1446,3.65,1452,2.401,1458,1.526,1460,1.526,1465,1.877,1480,1.526,1481,1.526,1482,1.877,1483,4.243,1484,3.433,1485,4.243,1486,4.243,1487,4.243,1488,4.243,1489,4.243,1490,4.811,1491,4.811,1492,1.877,1493,3.433,1494,2.401,1495,2.637,1496,2.182,1497,2.182,1498,2.182,1499,2.212,1500,2.401,1501,2.637,1502,3.433,1503,2.182,1504,2.182,1505,2.182,1506,2.182,1507,2.182,1508,2.182,1509,2.182,1510,2.182,1511,2.182,1512,2.182,1513,2.182,1514,4.811,1515,2.182,1516,2.182,1517,2.182,1518,2.182,1519,2.182,1520,3.433,1521,2.182,1522,4.243,1523,2.182,1524,3.433,1525,2.182,1526,3.433,1527,2.182,1528,2.182,1529,2.182,1530,4.5,1531,1.877,1532,2.182,1533,4.243,1534,2.182,1535,2.182,1536,2.182,1537,2.182,1538,2.182,1539,2.182,1540,3.433,1541,3.433,1542,4.811,1543,4.811,1544,4.811]],["title/components/ListUserComponent.html",[188,0.444,546,0.963]],["body/components/ListUserComponent.html",[0,0.04,3,0.115,4,0.1,5,0.1,7,0.1,8,0.313,11,0.931,17,0.561,18,0.571,20,0.234,21,0.019,23,0.328,36,0.115,39,1.369,44,0.006,45,0.009,46,0.006,65,0.535,75,0.937,79,1.425,80,1.412,81,1.446,82,0.643,83,1.031,84,1.445,85,1.911,88,1.031,95,1.225,97,1.197,100,1.035,106,1.187,107,0.607,109,0.977,112,1.483,116,1.672,124,0.955,131,1.621,133,1.308,137,1.992,142,0.54,143,0.514,145,0.895,148,0.749,149,0.278,153,1.237,159,1.245,170,1.286,174,1.78,176,0.514,178,1.599,181,0.685,188,0.571,189,0.685,190,1.245,191,0.867,192,0.867,193,0.867,194,0.867,198,1.133,199,1.646,200,0.867,201,2.381,202,2.166,203,1.305,205,1.305,214,1.832,219,2.691,220,2.691,221,3.172,224,2.358,227,2.799,230,2.092,231,1.971,232,2.092,233,1.971,234,2.657,235,1.816,236,2.204,237,1.971,238,1.971,239,1.971,240,2.49,241,2.358,242,1.763,243,1.9,244,2.228,245,1.971,246,2.228,249,1.79,251,1.588,253,0.827,257,1.862,258,1.862,259,1.862,260,1.971,261,1.971,264,2.49,265,1.437,266,1.515,283,2.228,294,2.124,295,2.394,298,1.862,303,1.31,306,2.092,321,1.003,331,1.003,332,1.003,335,1.171,336,1.111,337,1.171,338,1.171,339,1.111,340,1.171,341,1.691,346,1.629,347,1.171,411,2.691,421,2.228,425,1.971,431,1.171,438,1.481,439,1.39,440,1.763,453,1.055,454,1.111,455,1.055,456,1.055,457,1.588,458,1.437,459,1.369,460,1.51,461,1.437,462,1.055,463,1.003,465,1.171,467,1.862,468,1.971,469,2.092,476,1.003,477,1.51,485,1.31,488,1.171,503,1.584,521,0.789,522,1.305,523,1.305,524,0.867,525,0.867,526,0.867,527,0.718,528,0.867,529,0.685,530,1.428,531,1.305,532,0.685,533,1.199,534,0.867,535,0.685,536,1.305,537,0.718,538,0.827,539,0.685,540,1.133,541,0.867,542,0.685,543,0.867,544,0.685,545,0.867,546,1.613,547,0.685,548,0.867,549,0.685,550,1.305,551,0.718,552,0.827,553,0.867,554,0.685,555,0.867,556,0.685,557,0.789,558,0.685,559,0.789,560,0.867,561,0.685,562,1.133,563,0.867,564,0.867,641,4.13,658,4.355,758,2.43,766,1.171,767,1.003,768,1.171,802,1.971,882,2.566,890,2.566,979,1.171,994,1.646,997,3.082,999,3.837,1001,3.485,1009,1.862,1015,1.705,1016,2.276,1021,1.971,1022,1.31,1050,1.584,1054,1.584,1074,1.85,1081,1.481,1082,1.39,1095,2.032,1098,4.118,1099,3.425,1103,2.032,1105,2.384,1106,2.384,1107,2.228,1108,2.092,1109,2.228,1119,2.228,1120,1.39,1127,1.85,1130,2.384,1132,1.481,1221,1.584,1222,1.584,1267,2.238,1268,2.566,1311,4.013,1332,2.785,1358,2.032,1452,1.85,1458,1.85,1460,1.85,1480,3.725,1481,1.85,1494,2.785,1495,3.058,1499,3.085,1500,2.785,1501,3.058,1545,4.118,1546,4.118,1547,3.981,1548,3.058,1549,3.981,1550,3.981,1551,2.646,1552,3.981,1553,2.646,1554,3.058,1555,3.981,1556,2.646,1557,4.581,1558,3.425,1559,4.581,1560,3.425,1561,2.646,1562,2.032,1563,2.276,1564,4.091,1565,2.646,1566,2.646,1567,4.787,1568,2.646,1569,4.581,1570,2.646,1571,2.646,1572,2.646,1573,2.646,1574,2.646,1575,2.646,1576,2.646,1577,2.646,1578,3.981,1579,3.425,1580,3.425,1581,3.425,1582,3.981,1583,3.425,1584,2.276,1585,3.981,1586,2.646,1587,3.981,1588,2.276,1589,2.646,1590,2.646,1591,3.425,1592,2.276]],["title/injectables/LocalStorageService.html",[60,0.499,758,1.411]],["body/injectables/LocalStorageService.html",[0,0.059,3,0.168,4,0.147,5,0.147,7,0.147,11,1.016,17,0.514,18,0.624,20,0.189,21,0.019,22,0.994,23,0.381,36,0.168,44,0.009,45,0.012,46,0.009,60,0.702,62,1.331,65,0.702,66,2.47,75,1.04,79,1.15,80,1.232,81,1.419,82,0.702,83,1.861,84,1.444,95,1.507,100,0.753,106,1.889,107,0.92,109,1.549,110,1.713,131,1.494,133,1.524,137,1.154,145,1.175,148,0.586,149,0.407,162,0.957,168,1.544,169,1.468,170,1.418,171,2.034,174,1.419,176,1.232,242,1.714,243,1.803,253,2.245,266,1.803,283,2.925,292,3.815,300,5.082,314,2.962,316,3.545,346,1.72,758,2.244,767,2.688,831,3.655,875,4.083,876,4.083,887,2.166,994,2.179,1096,3.793,1107,2.166,1108,3.723,1109,2.166,1245,4.63,1267,2.962,1284,3.655,1593,5.444,1594,2.974,1595,5.226,1596,6.335,1597,6.335,1598,6.335,1599,5.449,1600,5.226,1601,3.871,1602,5.226,1603,3.871,1604,5.226,1605,5.226,1606,3.871,1607,6.335,1608,3.871,1609,3.871,1610,3.871,1611,5.226,1612,5.226,1613,3.871,1614,3.871,1615,3.33,1616,3.33,1617,3.33,1618,2.974,1619,3.33,1620,3.871,1621,3.871,1622,3.871,1623,3.871,1624,5.226,1625,6.335,1626,5.226,1627,3.871,1628,3.871,1629,3.871]],["title/components/LoginComponent.html",[188,0.444,547,0.963]],["body/components/LoginComponent.html",[0,0.037,3,0.107,4,0.093,5,0.093,7,0.093,8,0.297,11,0.734,17,0.505,18,0.45,20,0.251,21,0.019,22,0.567,23,0.358,36,0.107,44,0.006,45,0.009,46,0.006,65,0.507,75,0.903,79,1.418,80,1.389,81,1.702,82,0.507,83,1.331,84,1.442,85,1.989,88,0.978,89,1.742,95,1.28,97,0.849,100,1.135,107,0.702,109,1.382,112,1.27,131,1.661,133,1.382,137,2.101,142,0.936,143,0.891,145,1.155,148,0.721,149,0.259,159,1.606,162,0.61,170,1.45,174,1.745,176,0.479,178,1.211,181,0.639,188,0.613,189,0.639,190,1.18,191,0.808,192,0.808,193,0.808,194,0.808,198,1.074,199,1.577,200,0.808,201,2.356,202,2.143,203,1.237,205,1.237,209,3.207,214,1.767,216,3.103,219,2.633,220,2.633,221,3.103,223,1.983,224,1.671,225,2.741,226,1.983,227,2.761,230,1.983,231,1.868,232,1.983,233,1.868,234,2.274,235,1.739,236,2.156,237,1.868,238,1.868,239,2.891,240,1.765,241,1.671,242,2.274,243,1.866,244,2.875,245,1.868,246,2.112,248,2.26,249,1.813,250,2.64,251,2.049,253,1.826,254,2.891,255,2.112,256,2.112,257,1.765,258,1.765,259,1.765,260,1.868,261,1.868,262,2.433,264,1.765,265,1.855,266,1.662,290,2.9,292,2.112,294,2.329,295,2.329,303,1.868,311,0.935,313,1.765,314,2.731,317,1.221,318,1.092,321,0.935,328,1.894,331,0.935,332,0.935,335,1.092,336,1.036,337,1.092,338,1.092,339,1.036,340,1.092,341,1.702,343,1.589,344,1.868,346,1.504,391,1.829,410,2.64,411,2.325,412,1.725,413,1.725,415,1.725,417,1.725,431,1.092,453,0.984,454,1.925,455,0.984,456,0.984,457,0.984,458,1.656,459,0.848,460,1.432,461,1.363,462,1.829,463,0.935,467,1.153,468,1.221,469,1.983,470,3.593,471,2.451,472,1.765,473,2.27,474,1.925,476,1.432,477,1.949,486,2.112,488,1.092,505,2.112,521,0.735,522,1.237,523,1.237,524,0.808,525,0.808,526,0.808,527,0.67,528,0.808,529,0.639,530,1.368,531,1.237,532,0.639,533,0.858,534,0.808,535,0.639,536,1.237,537,0.67,538,0.771,539,0.639,540,1.074,541,0.808,542,0.639,543,0.808,544,0.639,545,0.808,546,0.639,547,1.575,548,0.808,549,0.639,550,1.237,551,0.67,552,0.771,553,0.808,554,0.639,555,0.808,556,0.639,557,0.735,558,0.639,559,0.735,560,0.808,561,0.639,562,0.702,563,0.808,564,0.808,593,2.875,686,1.894,735,3.569,739,2.433,758,2.378,765,3.947,766,1.092,767,0.935,768,1.092,771,3.402,785,2.9,825,3.947,857,1.725,873,2.64,875,2.433,876,2.433,885,2.433,979,1.092,983,1.589,994,1.905,1009,1.765,1025,1.894,1053,1.894,1078,1.725,1096,2.26,1105,2.26,1106,2.26,1107,2.112,1108,1.983,1109,2.112,1122,3.247,1149,2.121,1188,1.725,1221,2.26,1222,2.26,1267,2.402,1269,2.875,1306,1.589,1308,2.121,1360,1.725,1403,1.894,1418,3.593,1500,2.64,1564,1.894,1630,2.121,1631,4.586,1632,3.775,1633,4.586,1634,4.586,1635,5.138,1636,4.42,1637,3.775,1638,2.466,1639,5.138,1640,3.775,1641,2.9,1642,2.466,1643,3.775,1644,3.247,1645,2.466,1646,3.247,1647,2.466,1648,3.775,1649,3.775,1650,3.775,1651,3.775,1652,2.466,1653,3.775,1654,3.775,1655,3.247,1656,3.775,1657,3.775,1658,2.466,1659,3.775,1660,5.138,1661,3.775,1662,2.466,1663,3.247,1664,4.254,1665,3.247,1666,2.466,1667,4.586,1668,2.466,1669,2.121,1670,3.775,1671,2.466,1672,2.466,1673,2.121,1674,2.466,1675,2.466,1676,3.775,1677,2.466,1678,2.466,1679,2.466,1680,2.466,1681,3.775,1682,2.121,1683,3.775,1684,3.775,1685,3.775,1686,3.775,1687,3.247,1688,2.466]],["title/components/MapComponent.html",[188,0.444,549,0.963]],["body/components/MapComponent.html",[0,0.068,3,0.196,4,0.171,5,0.171,7,0.171,8,0.455,17,0.568,21,0.019,23,0.367,36,0.196,44,0.011,45,0.014,46,0.011,65,0.776,75,1.121,107,0.732,148,0.648,149,0.474,162,1.115,178,1.586,181,1.169,188,0.761,189,1.169,190,1.807,191,1.479,192,1.479,193,1.479,194,1.479,198,1.644,199,2.193,200,1.479,201,2.532,202,2.303,203,1.895,205,1.895,214,2.313,266,1.914,322,3.155,323,2.907,341,1.931,346,1.826,347,3.243,349,3.155,350,2.701,351,3.155,352,3.155,353,3.155,354,3.155,355,3.155,454,1.894,459,1.988,461,2.086,471,1.997,472,2.109,474,1.894,486,2.524,521,1.345,522,1.895,523,1.895,524,1.479,525,1.479,526,1.479,527,1.225,528,1.479,529,1.169,530,1.902,531,1.895,532,1.169,533,0.753,534,1.479,535,1.169,536,1.895,537,1.225,538,1.41,539,1.169,540,1.644,541,1.479,542,1.169,543,1.479,544,1.169,545,1.479,546,1.169,547,1.169,548,1.479,549,1.742,550,1.895,551,1.225,552,1.41,553,1.479,554,1.169,555,1.479,556,1.169,557,1.345,558,1.169,559,1.345,560,1.479,561,1.169,562,1.283,563,1.479,564,1.479,594,3.155,942,2.824,979,1.997,1078,3.155,1086,2.907,1089,3.465,1384,3.88,1689,3.88,1690,5.486,1691,4.971,1692,6.725,1693,5.779,1694,4.51,1695,4.51,1696,4.51,1697,3.88,1698,4.51,1699,3.88,1700,3.88,1701,3.88,1702,3.88,1703,4.51,1704,4.51,1705,4.51,1706,4.51,1707,4.51]],["title/components/MenuBarComponent.html",[188,0.444,551,1.01]],["body/components/MenuBarComponent.html",[0,0.042,3,0.119,4,0.104,5,0.104,7,0.104,8,0.323,11,0.797,17,0.571,18,0.489,20,0.284,21,0.019,22,0.948,23,0.362,36,0.119,44,0.007,45,0.01,46,0.007,65,0.551,66,1.686,75,0.955,79,1.375,80,1.438,81,1.475,82,0.551,83,1.063,84,1.412,85,2.012,88,1.063,89,1.223,95,1.244,100,1.129,107,0.621,109,1.324,112,1.56,131,1.667,133,1.415,137,1.62,142,0.562,143,0.535,148,0.683,149,0.289,159,0.861,170,1.051,174,1.577,178,1.281,181,0.713,188,0.585,189,0.713,190,1.282,191,0.903,192,0.903,193,0.903,194,0.903,198,1.167,199,1.686,200,0.903,201,2.394,202,2.178,203,1.345,205,1.345,214,1.869,219,2.65,220,2.439,227,2.643,230,2.155,231,2.03,232,2.155,233,2.427,234,2.793,235,2.061,236,2.604,237,2.427,238,2.427,239,3.015,240,1.918,241,1.816,243,1.546,249,1.223,251,1.636,266,1.653,294,1.636,295,1.636,311,1.044,313,1.918,314,1.918,316,2.296,321,1.044,331,1.044,332,1.044,335,1.219,336,1.156,337,1.219,338,1.219,339,1.156,340,1.219,341,1.331,346,1.475,391,1.955,454,1.156,458,0.994,460,1.044,463,1.044,467,1.287,468,1.363,472,1.287,473,2.03,474,1.156,476,1.044,477,1.044,485,2.03,488,2.17,518,2.936,521,0.821,522,1.345,523,1.345,524,0.903,525,0.903,526,0.903,527,0.748,528,0.903,529,0.713,530,1.462,531,1.345,532,0.713,533,0.685,534,0.903,535,0.713,536,1.345,537,0.748,538,0.861,539,0.713,540,1.546,541,0.903,542,0.713,543,0.903,544,0.713,545,0.903,546,0.713,547,0.713,548,0.903,549,0.713,550,1.345,551,1.713,552,2.072,553,0.903,554,0.713,555,0.903,556,0.713,557,1.462,558,0.713,559,0.821,560,0.903,561,0.713,562,0.783,563,0.903,564,0.903,569,4.173,570,4.673,577,2.369,578,2.369,620,5.182,742,1.775,745,3.151,757,2.115,758,2.459,766,1.219,767,1.044,768,1.219,769,1.649,830,2.115,831,2.869,849,1.649,942,1.722,979,1.816,994,2.17,1009,1.918,1025,3.151,1081,1.541,1082,1.447,1086,1.775,1096,4.151,1105,2.456,1106,2.456,1107,2.296,1108,2.155,1109,2.296,1130,1.649,1171,3.529,1256,2.369,1267,3.099,1306,1.775,1353,3.529,1360,1.926,1364,2.369,1383,2.369,1394,2.115,1399,2.115,1546,3.529,1554,3.151,1599,4.673,1663,3.529,1664,4.173,1682,2.369,1708,5.803,1709,2.369,1710,4.903,1711,4.903,1712,4.102,1713,4.903,1714,4.903,1715,4.102,1716,4.102,1717,4.102,1718,4.102,1719,4.102,1720,4.102,1721,2.753,1722,4.102,1723,4.102,1724,4.102,1725,4.102,1726,2.753,1727,4.102,1728,2.753,1729,4.102,1730,5.433,1731,4.102,1732,4.102,1733,2.753,1734,4.102,1735,2.753,1736,4.102,1737,2.753,1738,2.753,1739,2.753,1740,2.753,1741,2.753,1742,4.102,1743,4.903,1744,2.753,1745,2.753,1746,6.932,1747,4.102,1748,4.102,1749,4.102,1750,4.102,1751,4.102,1752,2.753,1753,2.369,1754,2.753,1755,2.753,1756,6.31,1757,4.903,1758,6.484,1759,2.753,1760,2.753,1761,2.753,1762,2.753,1763,4.102,1764,2.753,1765,2.753]],["title/injectables/MockActivityService.html",[60,0.499,1766,2.857]],["body/injectables/MockActivityService.html",[0,0.032,1,2.282,3,0.091,4,0.079,5,0.079,7,0.126,8,0.262,9,3.894,10,2.594,11,1.36,12,1.761,13,1.394,14,3.894,15,3.894,16,4.996,17,0.712,18,0.798,19,4.996,20,0.23,21,0.019,22,0.315,23,0.385,36,0.091,37,4.549,38,4.996,39,2.237,40,1.101,41,1.747,42,3.819,43,3.819,44,0.005,45,0.008,46,0.005,49,3.422,60,0.447,61,3.041,62,0.721,64,2.86,65,0.447,66,2.349,67,3.291,68,4.047,69,3.291,70,4.922,71,4.047,72,4.047,73,4.047,74,4.047,79,1.449,80,1.46,82,0.898,83,1.071,84,1.189,88,1.538,90,1.975,93,3.555,95,1.212,96,2.493,97,1.609,98,2.493,99,1.747,100,1.154,101,1.747,102,2.475,103,3.162,104,2.891,105,1.101,106,1.906,107,0.865,108,2.953,109,1.48,110,2.054,111,2.776,112,1.632,113,3.555,115,1.101,116,0.88,117,2.696,118,3.555,120,1.101,121,0.98,122,1.101,124,1.492,125,2.172,126,3.555,128,1.803,130,1.61,131,1.21,132,3.555,133,1.454,134,3.555,136,1.61,137,0.625,138,3.555,140,2.326,141,2.86,142,0.961,143,0.915,144,1.803,145,0.471,146,0.687,147,0.88,148,0.527,149,0.22,154,0.625,157,1.255,162,1.022,170,1.099,176,1.154,253,2.135,265,1.699,277,2.633,315,2.633,346,0.903,350,1.991,433,3.291,444,3.291,505,1.173,533,0.35,1173,2.533,1174,3.291,1177,2.554,1316,3.555,1344,1.803,1766,2.554,1767,5.595,1768,3.64,1769,1.173,1770,4.133,1771,4.133,1772,2.096,1773,2.096,1774,2.096,1775,2.096,1776,2.096,1777,3.325,1778,2.096,1779,2.096,1780,2.096,1781,2.096,1782,2.096,1783,2.096,1784,2.096,1785,2.096,1786,2.096,1787,2.096,1788,2.096,1789,6.504,1790,5.936,1791,5.936,1792,6.32,1793,4.705,1794,4.705,1795,5.936,1796,4.705,1797,4.705,1798,4.705,1799,4.705,1800,4.705,1801,4.705,1802,4.705,1803,4.705,1804,5.936,1805,4.705,1806,4.705,1807,5.936,1808,6.264,1809,6.264,1810,6.504,1811,6.504,1812,6.504,1813,4.705,1814,4.705,1815,4.705,1816,4.705,1817,4.705,1818,4.705,1819,4.705,1820,4.705,1821,4.705,1822,4.705,1823,4.705,1824,4.705,1825,4.705,1826,5.936,1827,4.705,1828,4.705,1829,4.705,1830,4.705,1831,5.936,1832,4.705,1833,4.705,1834,4.705,1835,5.46,1836,1.61,1837,3.325,1838,3.325,1839,3.325,1840,3.325,1841,3.325,1842,4.705,1843,3.325,1844,3.325,1845,3.325,1846,2.096,1847,3.325,1848,3.325,1849,2.096,1850,2.096,1851,2.096,1852,2.096,1853,2.096,1854,2.554,1855,3.291,1856,1.803,1857,2.096,1858,2.096,1859,1.61,1860,2.096,1861,2.096,1862,2.096,1863,2.096,1864,2.096,1865,2.096,1866,2.096,1867,2.096,1868,1.803,1869,2.096,1870,2.096,1871,2.096,1872,2.096,1873,2.096,1874,1.61,1875,2.096,1876,2.096,1877,2.096,1878,2.86,1879,2.096,1880,2.096,1881,2.096,1882,2.096,1883,2.096,1884,2.096,1885,2.096,1886,2.096,1887,2.096,1888,2.096,1889,2.096,1890,2.096,1891,2.096,1892,2.096,1893,2.096,1894,2.096,1895,2.096]],["title/injectables/MockAuthService.html",[60,0.499,1896,2.857]],["body/injectables/MockAuthService.html",[0,0.071,3,0.202,4,0.176,5,0.176,7,0.176,8,0.464,11,1.147,17,0.669,18,0.812,20,0.344,21,0.018,22,0.7,23,0.384,36,0.202,41,3.1,44,0.011,45,0.014,46,0.011,49,3.623,60,0.792,62,1.602,65,0.792,66,2.341,80,1.416,82,0.914,83,1.528,84,1.394,88,1.528,95,1.204,96,2.477,97,1.326,98,2.477,99,3.1,100,1.147,105,3.1,106,2.03,107,0.862,108,2.968,109,1.204,110,1.934,111,2.758,112,1.458,131,1.718,133,1.322,137,1.389,142,0.951,143,0.906,145,1.047,146,1.527,147,1.956,148,0.787,149,0.49,152,3.354,153,2.178,154,1.389,155,2.607,156,3.258,170,1.264,176,1.259,249,1.389,265,1.682,533,1.137,735,4.386,739,4.386,771,4.014,773,5.075,775,5.569,777,5.075,778,4.007,779,5.569,780,3.55,782,3.258,783,4.007,784,4.007,1245,3.532,1569,4.007,1768,3.623,1769,2.607,1836,3.578,1896,4.532,1897,5.569,1898,4.658,1899,4.658,1900,4.658,1901,4.658,1902,4.658,1903,4.007,1904,4.007,1905,4.658,1906,4.658,1907,4.658,1908,4.658,1909,4.658]],["title/injectables/MockCityService.html",[60,0.499,1910,2.857]],["body/injectables/MockCityService.html",[0,0.058,3,0.167,4,0.146,5,0.146,7,0.198,8,0.411,10,2.894,11,1.149,12,1.793,17,0.725,18,0.813,20,0.255,21,0.019,22,0.58,23,0.396,36,0.167,41,2.741,44,0.009,45,0.012,46,0.009,49,3.699,60,0.701,62,1.328,65,0.701,66,2.436,79,1.23,80,1.474,82,0.915,83,1.531,84,1.324,88,1.639,90,1.621,95,1.292,96,2.657,97,1.566,98,2.657,99,2.028,100,1.23,101,2.028,102,3.124,105,2.028,106,2.077,107,0.897,108,3.015,109,1.292,110,2.167,111,2.959,112,1.564,115,2.028,116,2.19,117,2.028,120,2.028,121,1.805,122,2.028,124,1.394,133,0.788,142,1.065,143,1.014,145,0.868,146,1.266,147,1.621,148,0.709,149,0.406,154,1.151,162,1.289,170,0.827,176,1.23,217,3.721,228,2.7,265,2.133,315,3.307,346,1.416,385,2.161,433,4.133,791,4.488,792,5.444,793,5.444,794,4.861,795,5.991,797,5.083,799,5.991,800,5.083,802,1.911,803,5.083,806,3.321,811,2.966,1173,2.616,1174,2.741,1463,4.488,1768,3.812,1769,2.161,1792,4.488,1854,2.966,1855,4.133,1856,3.321,1859,2.966,1868,3.321,1874,2.966,1878,4.488,1910,4.007,1911,5.86,1912,5.908,1913,3.861,1914,3.861,1915,3.861,1916,3.861,1917,3.861,1918,3.861,1919,3.861,1920,3.861,1921,5.217,1922,3.321,1923,3.861,1924,3.861,1925,3.861,1926,3.861,1927,3.861,1928,3.861,1929,3.861,1930,3.861,1931,3.861,1932,3.861,1933,3.861,1934,3.861,1935,3.861,1936,3.861]],["title/injectables/MockInterestService.html",[60,0.499,1937,2.857]],["body/injectables/MockInterestService.html",[0,0.056,3,0.16,4,0.14,5,0.14,7,0.191,8,0.398,11,1.206,12,1.795,13,1.541,17,0.676,18,0.821,20,0.247,21,0.019,22,0.553,23,0.397,36,0.16,41,2.654,44,0.009,45,0.012,46,0.009,49,3.759,60,0.679,62,1.267,65,0.679,66,2.473,79,1.382,80,1.449,82,0.924,83,1.494,84,1.337,88,1.685,90,2.121,95,1.328,96,2.73,97,1.462,98,2.73,99,1.935,100,1.264,101,1.935,103,1.722,105,1.935,106,2.089,107,0.9,108,3.019,109,1.451,110,2.202,111,3.04,112,1.66,115,1.935,116,2.121,117,2.654,120,1.935,121,1.722,122,1.935,124,1.33,131,1.191,133,1.267,142,1.031,143,0.982,145,0.828,146,1.207,147,1.546,148,0.753,149,0.387,153,1.722,154,1.098,159,1.151,162,1.249,170,0.789,176,1.206,218,3.323,229,2.061,243,1.048,249,1.851,265,2.082,288,2.576,315,3.227,345,2.82,346,1.372,385,4.063,771,2.061,780,1.823,802,1.823,1173,2.553,1174,2.654,1275,4.346,1276,5.338,1277,4.767,1278,4.767,1279,4.346,1280,5.917,1282,4.96,1284,3.533,1285,5.778,1286,4.43,1288,4.96,1290,3.168,1292,3.168,1293,3.168,1295,2.576,1296,3.168,1297,2.374,1302,2.829,1363,4.346,1367,4.346,1530,4.346,1768,3.759,1769,2.061,1854,2.829,1855,4.033,1859,2.829,1874,2.829,1903,3.168,1937,3.881,1938,5.778,1939,4.96,1940,3.168,1941,3.683,1942,3.683,1943,3.683,1944,3.683,1945,3.683,1946,3.683,1947,3.683,1948,3.683,1949,3.683,1950,3.683,1951,3.683,1952,3.683,1953,3.683,1954,3.683,1955,3.683,1956,3.683,1957,3.168,1958,3.683,1959,3.683,1960,3.683,1961,3.683,1962,5.052,1963,3.683,1964,3.683]],["title/injectables/MockRolService.html",[60,0.499,1965,2.857]],["body/injectables/MockRolService.html",[0,0.078,3,0.224,4,0.195,5,0.195,7,0.195,8,0.495,12,1.744,20,0.307,21,0.019,22,0.774,23,0.385,36,0.224,41,3.301,44,0.012,45,0.015,46,0.012,49,3.516,60,0.844,62,1.773,65,0.844,66,2.161,79,1.221,80,1.221,84,1.002,90,2.165,95,1.053,96,2.165,97,1.159,98,2.165,100,1.002,107,0.796,108,2.813,124,1.861,133,1.053,142,1.283,143,1.221,145,1.159,146,1.69,147,2.165,148,0.791,149,0.542,154,1.538,176,1.002,243,1.467,994,2.426,999,4.33,1009,2.411,1014,3.96,1173,2.781,1174,3.301,1295,3.606,1768,3.793,1769,2.885,1836,3.96,1965,4.826,1966,5.83,1967,5.405,1968,6.405,1969,5.155,1970,5.155,1971,6.068,1972,5.405,1973,5.405,1974,4.435,1975,5.155,1976,5.155,1977,5.155]],["title/injectables/MockUserService.html",[60,0.499,1978,2.857]],["body/injectables/MockUserService.html",[0,0.052,3,0.15,4,0.131,5,0.131,7,0.131,8,0.38,11,1.174,12,1.826,13,1.036,17,0.678,18,0.823,20,0.273,21,0.019,22,0.519,23,0.399,36,0.15,41,2.539,44,0.008,45,0.011,46,0.008,49,3.685,60,0.649,62,1.188,65,0.649,66,2.441,79,0.939,80,1.428,82,0.926,83,0.895,84,1.235,88,1.646,90,2.34,95,1.297,96,2.668,97,1.429,98,2.668,100,1.235,106,2.016,107,0.899,108,3.016,109,1.408,110,2.158,111,2.971,112,1.571,115,1.815,116,1.45,117,3.172,120,1.815,121,1.615,122,1.815,124,1.247,131,1.692,133,1.297,142,1.138,143,1.084,145,0.777,146,1.132,147,1.45,148,0.677,149,0.363,153,1.615,154,1.03,165,2.158,170,0.74,176,1.235,249,1.8,253,1.08,265,1.745,288,2.416,315,2.705,336,2.029,345,2.535,533,1.17,742,3.891,942,2.535,994,2.264,997,3.468,1001,1.933,1021,3.259,1022,3.259,1029,2.654,1138,4.222,1141,2.988,1148,2.971,1173,2.673,1174,3.172,1267,3.079,1370,4.157,1499,2.226,1548,4.637,1562,2.654,1580,2.971,1581,2.971,1768,3.86,1769,1.933,1855,2.416,1904,5.193,1922,2.971,1940,2.971,1972,5.193,1973,5.664,1978,3.712,1979,5.932,1980,5.574,1981,4.157,1982,5.193,1983,5.193,1984,5.193,1985,5.814,1986,4.795,1987,3.454,1988,4.795,1989,3.454,1990,4.795,1991,3.454,1992,4.795,1993,3.454,1994,3.454,1995,3.454,1996,3.454,1997,3.454,1998,3.454,1999,3.454,2000,6.584,2001,6.584,2002,6.584,2003,4.833,2004,2.971,2005,4.833,2006,4.833,2007,2.971,2008,3.454,2009,3.454,2010,3.454,2011,3.454,2012,3.454,2013,3.454,2014,4.833,2015,3.454,2016,3.454,2017,3.454,2018,3.454,2019,3.454]],["title/injectables/NotificationService.html",[60,0.499,593,2.081]],["body/injectables/NotificationService.html",[0,0.072,3,0.207,4,0.181,5,0.181,7,0.181,8,0.472,11,0.928,17,0.469,18,0.57,20,0.293,21,0.019,22,1.084,23,0.375,36,0.207,44,0.011,45,0.014,46,0.011,60,0.805,62,1.642,65,0.805,75,1.151,79,1.453,80,1.335,81,1.627,82,0.641,84,1.335,95,1.402,97,1.347,100,1.335,102,3.588,107,0.759,109,1.402,131,1.126,137,1.424,142,0.975,143,0.928,148,0.734,149,0.502,159,1.873,168,1.904,169,1.811,170,1.023,171,2.509,174,1.627,220,2.005,224,2.653,235,1.811,242,2.899,245,2.363,253,1.873,265,2.163,266,1.954,306,3.792,321,1.811,332,1.811,411,3.11,423,3.668,424,5.03,425,3.573,440,3.04,593,3.665,1641,5.434,1644,6.209,2020,4.107,2021,6.867,2022,5.992,2023,4.775,2024,5.992,2025,5.992,2026,4.775,2027,5.992,2028,5.992,2029,4.775,2030,4.775,2031,4.775,2032,4.107]],["title/components/RecommendationComponent.html",[188,0.444,554,0.963]],["body/components/RecommendationComponent.html",[0,0.06,3,0.277,4,0.15,5,0.15,7,0.15,8,0.417,13,1.282,17,0.588,18,0.472,20,0.326,21,0.019,23,0.375,27,2.226,36,0.171,44,0.009,45,0.013,46,0.009,65,0.712,75,0.695,79,1.031,82,0.531,107,0.501,109,1.082,131,1.25,142,1.221,143,1.163,148,0.747,149,0.416,175,1.66,178,1.507,181,1.025,188,0.714,189,1.025,190,1.657,191,1.296,192,1.296,193,1.296,194,1.296,198,1.509,199,2.057,200,1.296,201,2.5,202,2.274,203,1.738,205,1.738,214,2.198,218,3.208,236,2.359,266,1.125,277,2.967,320,2.368,341,1.074,346,1.735,381,3.038,444,3.708,453,1.577,455,1.577,456,1.577,457,2.115,458,2.159,459,1.36,460,2.011,461,1.428,463,1.5,464,2.213,465,2.347,467,1.849,468,1.957,469,2.078,471,2.829,472,1.849,473,1.957,474,2.226,476,1.5,477,2.011,484,3.175,486,2.213,488,2.347,521,1.179,522,1.738,523,1.738,524,1.296,525,1.296,526,1.296,527,1.074,528,1.296,529,1.025,530,1.784,531,1.738,532,1.025,533,0.66,534,1.296,535,1.025,536,1.738,537,1.074,538,1.236,539,1.025,540,1.509,541,1.296,542,1.025,543,1.296,544,1.025,545,1.296,546,1.025,547,1.025,548,1.296,549,1.025,550,1.738,551,1.074,552,1.236,553,1.296,554,1.656,555,1.296,556,1.025,557,1.906,558,1.025,559,1.179,560,1.296,561,1.025,562,1.125,563,1.296,564,1.296,758,2.658,766,1.751,767,1.5,768,1.751,769,2.368,942,2.226,979,1.751,1040,2.549,1130,2.368,1188,2.766,1245,3.581,1297,2.549,1306,2.549,1492,3.402,1664,4.073,1939,5.732,1957,3.402,2033,3.402,2034,5.981,2035,5.302,2036,5.981,2037,5.981,2038,5.302,2039,3.954,2040,3.954,2041,3.954,2042,3.954,2043,3.954,2044,3.954,2045,3.954,2046,5.302,2047,5.302,2048,5.302,2049,5.302,2050,5.302,2051,5.302,2052,5.302,2053,5.302,2054,5.302,2055,5.302,2056,5.302,2057,3.954,2058,3.402,2059,5.302,2060,3.954,2061,3.954,2062,3.954]],["title/components/RecommendationMapComponent.html",[188,0.444,556,0.963]],["body/components/RecommendationMapComponent.html",[0,0.029,1,2.666,3,0.082,4,0.072,5,0.072,7,0.146,8,0.241,11,1.014,14,1.133,15,1.133,17,0.562,18,0.581,20,0.28,21,0.019,22,0.46,23,0.361,36,0.082,39,1.676,40,2.561,43,2.142,44,0.004,45,0.007,46,0.004,61,2.074,65,0.411,75,0.78,79,1.44,80,1.406,81,1.553,82,0.655,83,0.794,84,1.415,85,1.556,88,0.794,89,1.453,92,1.059,95,1.292,97,1.364,100,1.23,103,3.234,107,0.661,109,1.365,110,1.265,112,0.757,116,1.863,121,1.432,124,1.602,125,3.104,131,1.558,133,1.391,136,3.744,137,1.453,140,2.142,142,0.788,143,0.75,145,1.364,146,1.598,148,0.741,149,0.199,153,0.885,154,0.564,157,1.133,159,1.717,162,1.097,170,1.356,174,1.747,176,0.862,178,1.23,181,0.49,185,1.628,188,0.461,189,0.49,190,0.958,191,0.62,192,0.62,193,1.265,194,0.62,198,0.872,199,1.327,200,0.62,201,2.251,202,2.048,203,1.004,205,1.004,214,1.526,216,2.196,217,3.004,218,2.674,223,2.331,224,1.356,225,2.412,226,1.609,227,2.524,228,2.142,229,1.714,234,1.356,236,1.526,240,1.432,241,1.356,243,1.857,249,1.453,251,1.222,253,1.788,254,1.516,256,1.714,257,1.432,258,1.432,259,1.432,264,1.432,266,1.484,272,1.834,273,1.834,274,2.142,275,2.142,276,1.834,283,1.714,284,2.657,286,2.353,292,1.059,294,1.222,295,1.222,297,5.232,298,2.074,306,1.609,310,1.516,311,0.718,313,1.432,314,1.432,315,1.714,316,1.714,317,0.937,318,0.838,319,1.323,320,1.133,321,0.718,322,1.323,323,1.219,328,3.408,330,1.133,341,1.553,344,0.937,346,1.747,347,2.531,351,1.323,352,1.323,353,1.323,354,1.323,355,1.323,391,1.539,428,1.323,440,0.838,453,0.755,455,0.755,456,0.755,457,1.222,458,1.983,459,1.526,460,1.464,461,1.106,462,0.755,463,0.718,465,0.838,467,0.885,468,0.937,469,0.994,471,1.709,473,0.937,474,0.794,476,1.464,477,1.683,480,1.219,485,0.937,488,1.356,506,2.657,518,1.133,521,0.564,522,1.004,523,1.004,524,0.62,525,0.62,526,0.62,527,0.514,528,0.62,529,0.49,530,1.151,531,1.004,532,0.49,533,0.814,534,0.62,535,0.49,536,1.004,537,0.514,538,0.592,539,0.49,540,0.872,541,0.62,542,0.49,543,0.62,544,0.49,545,0.62,546,0.49,547,0.49,548,0.62,549,0.49,550,1.004,551,0.514,552,0.592,553,0.62,554,0.49,555,0.62,556,1.423,557,1.851,558,0.49,559,0.564,560,0.62,561,0.49,562,0.538,563,0.62,564,0.62,594,1.323,600,1.059,601,0.994,707,4.675,758,2.169,766,0.838,767,0.718,768,0.838,782,2.142,802,2.83,826,2.859,827,2.859,829,3.103,834,2.657,836,1.974,837,1.974,838,1.974,839,1.974,840,1.974,841,1.974,842,1.974,843,1.974,844,1.974,845,1.974,846,1.834,847,1.974,848,1.974,849,1.834,850,1.974,857,1.323,862,1.219,881,4.724,883,1.974,900,1.219,904,1.323,933,1.219,942,2.606,979,1.709,997,2.83,1001,1.714,1015,1.219,1092,2.965,1096,3.288,1105,1.834,1106,1.834,1107,2.483,1108,1.609,1109,1.714,1119,2.16,1120,0.994,1127,1.323,1128,1.453,1129,1.453,1130,1.834,1132,1.714,1133,2.353,1173,1.964,1215,3.103,1216,2.142,1217,2.635,1218,2.142,1321,2.353,1329,2.353,1331,2.353,1332,2.142,1345,1.453,1346,1.453,1359,1.628,1360,1.323,1361,2.635,1389,3.32,1390,2.635,1394,2.353,1395,1.628,1396,1.628,1397,1.628,1398,2.635,1399,2.353,1400,1.628,1401,1.628,1402,1.628,1403,1.453,1494,2.142,1655,2.635,1690,3.32,1691,2.635,1697,1.628,1699,1.628,1700,1.628,1701,1.628,1702,1.628,1753,1.628,2063,5.749,2064,1.628,2065,3.86,2066,3.86,2067,3.86,2068,3.86,2069,3.86,2070,3.86,2071,3.86,2072,3.063,2073,3.063,2074,3.063,2075,4.436,2076,1.892,2077,5.718,2078,3.063,2079,3.86,2080,3.063,2081,3.063,2082,3.063,2083,1.892,2084,3.063,2085,3.063,2086,5.718,2087,3.063,2088,3.063,2089,4.436,2090,3.063,2091,3.063,2092,4.436,2093,1.892,2094,3.063,2095,3.063,2096,1.892,2097,2.635,2098,3.063,2099,6.069,2100,1.892,2101,3.063,2102,1.892,2103,3.063,2104,1.892,2105,3.063,2106,3.063,2107,3.063,2108,3.063,2109,1.892,2110,1.892,2111,3.063,2112,1.892,2113,1.892,2114,1.892,2115,1.892,2116,1.892,2117,1.892,2118,3.063,2119,1.892,2120,1.892,2121,1.892,2122,1.892,2123,1.892,2124,1.892,2125,1.892,2126,1.892,2127,3.063,2128,1.892,2129,1.892,2130,3.063,2131,3.063,2132,3.063,2133,3.063,2134,3.063,2135,4.436,2136,4.436,2137,3.063,2138,3.063,2139,3.063,2140,3.86,2141,3.063,2142,3.063,2143,3.063,2144,3.063,2145,1.892,2146,1.892,2147,1.892,2148,1.892,2149,1.892,2150,1.892,2151,3.063,2152,3.063,2153,1.892,2154,1.892,2155,1.892,2156,1.892,2157,1.892,2158,1.892,2159,1.892,2160,1.892,2161,1.892,2162,1.892,2163,1.892,2164,1.892,2165,1.892,2166,1.892,2167,1.892,2168,1.892,2169,1.892,2170,1.892,2171,1.892,2172,1.892,2173,3.063,2174,3.063,2175,3.063,2176,1.892,2177,1.892,2178,1.892,2179,1.892,2180,1.892,2181,1.892,2182,1.892,2183,1.628,2184,1.892,2185,1.892,2186,1.892,2187,1.892,2188,1.892,2189,1.892]],["title/classes/Rol.html",[0,0.056,1009,1.739]],["body/classes/Rol.html",[0,0.089,2,2.465,3,0.255,4,0.222,5,0.222,7,0.222,8,0.534,12,1.77,20,0.332,21,0.018,22,1.019,23,0.371,27,2.85,36,0.255,44,0.014,45,0.016,46,0.014,1009,3.174,1971,6.159,2190,5.051,2191,5.871,2192,5.871]],["title/injectables/RolService.html",[60,0.499,999,2.227]],["body/injectables/RolService.html",[0,0.071,3,0.204,4,0.178,5,0.178,7,0.178,8,0.467,11,0.914,13,1.008,17,0.462,18,0.561,20,0.318,21,0.019,22,0.706,23,0.355,36,0.204,44,0.011,45,0.014,46,0.011,60,0.797,62,1.618,65,0.797,66,2.237,75,1.143,76,2.632,77,3.836,79,1.46,80,1.468,81,1.854,82,0.632,83,1.538,84,1.369,85,1.77,86,3.554,87,3.822,88,1.685,89,1.939,90,2.868,91,3.554,92,3.322,95,1.212,96,2.492,97,1.334,98,2.492,100,1.264,107,0.752,108,2.594,110,1.542,124,2.143,133,1.212,142,0.96,143,0.914,145,1.334,146,1.946,147,2.492,148,0.789,149,0.494,150,2.632,151,2.328,154,1.403,158,2.632,159,1.47,160,2.632,161,2.471,162,1.163,163,2.938,164,2.328,165,1.542,166,2.471,167,2.471,168,1.876,169,1.784,170,1.008,171,2.471,172,2.816,173,2.816,174,1.277,175,1.975,176,0.914,178,1.109,243,1.85,994,2.237,999,4.217,1009,2.199,1014,3.613,1295,4.548,1297,3.031,1967,5.594,1968,5.875,1974,5.106,2193,3.613,2194,5.935,2195,4.703,2196,4.703]],["title/guards/RoleGuardService.html",[731,2.601,753,2.601]],["body/guards/RoleGuardService.html",[0,0.079,3,0.227,4,0.199,5,0.199,7,0.199,8,0.413,17,0.624,18,0.757,20,0.311,21,0.019,22,0.787,23,0.347,36,0.227,44,0.012,45,0.015,46,0.012,60,0.852,65,0.852,75,0.922,82,0.852,107,0.664,148,0.765,149,0.551,162,1.569,168,2.091,169,1.988,175,2.201,176,1.234,198,1.491,219,3.137,310,3.141,311,1.988,331,1.988,341,1.423,391,2.091,533,0.875,731,4.439,740,5.449,741,4.509,742,3.378,754,3.666,756,3.666,758,2.801,760,5.459,761,6.102,762,5.872,763,6.102,765,4.026,766,2.32,767,1.988,768,2.32,769,3.139,770,4.026,994,1.803,1009,2.967,1173,2.32,1231,4.509,1306,3.378,1307,4.509,2197,5.872,2198,5.241,2199,5.241,2200,5.241,2201,6.346,2202,5.241]],["title/components/SignUpComponent.html",[188,0.444,558,0.963]],["body/components/SignUpComponent.html",[0,0.035,3,0.101,4,0.088,5,0.088,7,0.088,8,0.284,11,0.453,13,1.276,17,0.49,18,0.278,20,0.177,21,0.019,23,0.37,36,0.101,39,1.242,44,0.006,45,0.009,46,0.006,65,0.485,75,0.876,79,1.4,80,1.355,81,1.671,82,0.313,83,0.935,84,1.4,85,1.961,88,1.478,89,1.925,95,1.318,97,0.812,100,0.969,107,0.683,109,1.411,112,0.892,131,1.55,133,1.363,137,1.991,142,0.903,143,0.86,145,1.12,148,0.724,149,0.245,162,1.232,165,1.871,170,0.774,174,1.464,176,0.453,178,1.175,181,0.603,188,0.528,189,0.603,190,1.129,191,0.763,192,0.763,193,0.763,194,0.763,198,1.027,199,1.521,200,0.763,201,2.335,202,2.124,203,1.184,205,1.184,213,3.828,214,1.714,215,2.002,216,2.947,218,2.877,219,2.584,223,1.897,224,2.206,225,3.127,226,2.324,227,2.454,229,3.444,230,1.897,231,1.787,232,1.897,236,2.353,242,2.206,243,1.9,248,2.162,249,1.776,250,2.525,251,1.988,253,1.129,254,3.386,255,2.475,256,2.021,257,1.688,258,1.688,259,1.688,260,1.787,261,1.787,262,2.327,264,1.688,265,1.799,266,1.624,277,2.021,292,2.021,294,1.988,295,1.988,298,1.688,299,2.773,303,1.787,306,1.897,311,1.677,313,2.668,314,2.33,317,1.787,318,1.031,320,1.394,324,1.628,331,0.883,335,1.031,336,0.977,337,1.031,338,1.031,339,0.977,340,1.031,341,1.464,343,1.5,344,2.947,345,0.977,346,1.464,349,2.525,350,2.162,366,2.773,380,1.788,391,2.575,411,1.857,431,1.598,432,1.788,453,0.928,454,2.092,455,0.928,456,0.928,457,1.44,458,2.06,459,1.242,460,1.369,461,0.84,462,0.928,463,0.883,464,1.303,465,1.598,466,1.5,471,1.958,472,1.088,473,1.152,474,1.516,484,2.648,485,1.152,486,1.303,488,1.031,505,2.789,521,0.694,522,1.184,523,1.184,524,0.763,525,0.763,526,0.763,527,0.632,528,0.763,529,1.146,530,1.319,531,1.184,532,0.603,533,0.901,534,0.763,535,0.603,536,1.184,537,0.632,538,0.728,539,0.603,540,1.027,541,0.763,542,0.603,543,0.763,544,0.603,545,0.763,546,0.603,547,0.603,548,0.763,549,0.603,550,1.184,551,0.632,552,0.728,553,0.763,554,0.603,555,0.763,556,0.603,557,0.694,558,1.397,559,1.835,560,0.763,561,0.603,562,0.662,563,0.763,564,0.763,593,3.444,616,4.785,686,1.788,735,2.327,739,3.476,770,1.788,771,3.444,782,2.525,785,2.773,877,2.525,879,3.991,882,2.327,886,2.327,942,1.516,968,3.106,979,1.031,983,3.476,994,0.801,1017,2.327,1018,1.788,1021,2.189,1022,2.467,1034,1.5,1037,2.773,1038,1.788,1039,1.788,1040,2.327,1041,1.788,1043,1.788,1074,2.525,1102,3.106,1117,2.002,1121,4.287,1123,2.525,1124,2.002,1141,1.152,1147,2.002,1167,1.788,1173,1.598,1174,1.897,1175,2.773,1176,3.106,1177,2.773,1178,3.805,1179,3.106,1180,2.773,1188,1.628,1267,2.33,1269,2.789,1270,1.5,1339,3.106,1418,3.485,1641,2.773,1665,3.106,1669,2.002,1673,2.002,1687,3.106,2032,2.002,2203,5.885,2204,2.002,2205,3.61,2206,4.423,2207,3.61,2208,4.423,2209,4.423,2210,4.423,2211,4.423,2212,4.983,2213,4.983,2214,3.61,2215,2.328,2216,6.153,2217,2.328,2218,2.328,2219,2.328,2220,2.328,2221,3.61,2222,2.328,2223,2.328,2224,2.328,2225,4.983,2226,4.983,2227,3.61,2228,2.328,2229,4.423,2230,3.61,2231,2.328,2232,3.61,2233,3.61,2234,2.328,2235,2.773,2236,2.328,2237,2.328,2238,2.328,2239,3.61,2240,2.002,2241,2.328,2242,2.328,2243,2.328,2244,2.002,2245,2.002,2246,2.328,2247,2.328,2248,2.328,2249,2.328,2250,2.328,2251,2.328,2252,2.328,2253,2.328,2254,2.328,2255,2.328,2256,2.328,2257,2.328,2258,2.002,2259,2.328,2260,2.328,2261,2.328,2262,2.328,2263,2.328,2264,2.328,2265,3.61,2266,2.328,2267,2.328,2268,2.328,2269,2.328,2270,2.328,2271,2.328,2272,2.328,2273,3.61,2274,3.61,2275,3.61,2276,3.61,2277,3.61,2278,3.61,2279,3.61,2280,2.328,2281,2.328,2282,2.328,2283,3.61,2284,2.002,2285,2.328,2286,2.328,2287,2.328,2288,2.328]],["title/components/TableActivitiesComponent.html",[188,0.444,561,0.963]],["body/components/TableActivitiesComponent.html",[0,0.033,1,2.629,3,0.096,4,0.084,5,0.084,7,0.084,8,0.273,10,1.383,11,1.023,13,0.743,17,0.594,18,0.628,20,0.209,21,0.019,23,0.36,36,0.096,39,1.921,44,0.005,45,0.008,46,0.005,61,2.731,65,0.466,67,2.426,69,2.426,75,0.852,79,1.448,80,1.459,81,1.316,82,0.707,84,1.469,85,1.966,88,1.255,89,1.034,90,1.456,95,1.409,97,1.256,100,1.086,103,3.082,106,1.666,107,0.766,109,0.989,112,1.573,116,1.456,124,0.798,125,3.267,131,1.426,133,1.27,137,2.018,145,1.09,146,1.726,148,0.713,149,0.232,159,1.989,170,1.364,174,1.728,176,0.674,178,1.143,181,0.573,188,0.511,189,0.573,190,1.084,191,0.725,192,0.725,193,1.403,194,0.725,198,0.987,199,1.472,200,0.725,201,2.315,202,2.106,203,1.137,205,1.137,214,1.667,219,2.539,220,2.539,221,2.993,224,2.145,227,2.699,230,1.822,231,1.717,232,1.822,233,1.717,234,2.817,235,1.623,236,2.188,237,1.717,238,1.717,239,1.717,240,2.828,241,2.677,242,1.535,243,1.925,244,1.941,245,1.717,246,1.941,249,1.804,251,1.383,253,1.084,257,1.622,258,1.622,259,1.622,260,1.717,261,1.717,264,2.828,265,1.252,266,1.721,283,1.941,284,2.902,292,1.941,294,1.933,295,2.629,298,1.622,303,1.094,306,1.822,321,0.838,330,1.324,331,0.838,332,0.838,335,0.979,336,0.928,337,0.979,338,0.979,339,0.928,340,0.979,341,1.586,346,1.586,347,0.979,411,2.539,420,1.698,421,1.941,425,1.717,431,1.535,438,1.237,439,1.162,440,1.535,448,1.546,449,1.546,450,2.993,453,0.882,455,0.882,456,0.882,457,1.383,458,1.901,459,1.472,460,1.315,461,1.545,462,0.882,463,0.838,465,0.979,476,0.838,477,1.315,485,1.094,503,1.324,521,0.659,522,1.137,523,1.137,524,0.725,525,0.725,526,0.725,527,0.6,528,0.725,529,1.109,530,1.276,531,1.137,532,0.573,533,0.369,534,0.725,535,0.573,536,1.137,537,0.942,538,1.084,539,0.573,540,1.876,541,0.725,542,0.573,543,0.725,544,0.573,545,0.725,546,0.573,547,0.573,548,0.725,549,0.573,550,1.137,551,0.6,552,0.691,553,0.725,554,0.573,555,0.725,556,0.573,557,0.659,558,0.573,559,0.659,560,0.725,561,1.364,562,1.846,563,0.725,564,0.725,600,1.237,601,1.162,635,4.675,636,1.698,641,3.898,669,5.202,670,1.698,673,1.546,802,2.399,814,1.546,815,3.287,816,2.664,826,3.123,827,3.123,834,2.902,836,2.235,837,2.235,838,2.235,839,2.235,840,2.235,841,2.235,842,2.235,843,2.235,844,2.235,845,2.235,846,2.077,847,2.235,848,2.235,849,2.077,850,2.235,862,1.425,880,1.902,883,2.235,885,2.235,933,1.425,980,1.698,981,1.698,1050,1.324,1054,1.324,1081,1.237,1082,1.162,1119,1.941,1120,1.162,1132,1.237,1201,3.681,1203,1.902,1204,3.681,1207,2.983,1208,2.983,1209,2.983,1212,4.169,1215,3.389,1216,2.426,1218,2.426,1219,2.983,1221,1.324,1222,1.324,1321,2.664,1329,2.664,1331,2.664,1332,2.426,1345,1.698,1346,1.698,1358,1.698,1452,1.546,1458,1.546,1460,1.546,1480,3.682,1481,1.546,1494,3.389,1495,2.664,1499,2.758,1500,2.426,1501,2.664,1531,1.902,1545,3.681,1554,3.723,1557,4.169,1558,2.983,1559,4.169,1560,2.983,1563,1.902,1564,3.723,1579,2.983,1583,2.983,1584,1.902,1588,1.902,1591,2.983,1592,1.902,1636,4.169,1646,2.983,2058,1.902,2097,2.983,2258,1.902,2284,1.902,2289,5.751,2290,3.468,2291,4.846,2292,4.846,2293,3.468,2294,2.211,2295,3.468,2296,3.468,2297,3.468,2298,2.211,2299,3.468,2300,2.211,2301,2.211,2302,2.211,2303,2.211,2304,2.211,2305,3.468,2306,2.211,2307,3.468,2308,2.211,2309,2.211,2310,2.211,2311,3.468,2312,2.211,2313,2.211,2314,2.211,2315,2.211,2316,2.211,2317,3.468,2318,2.211,2319,2.211,2320,2.211,2321,2.211,2322,2.211,2323,2.211,2324,2.211,2325,3.468,2326,2.211,2327,2.211,2328,2.211,2329,2.211]],["title/classes/User.html",[0,0.056,533,0.621]],["body/classes/User.html",[0,0.109,2,2.271,3,0.235,4,0.205,5,0.205,7,0.205,8,0.509,12,1.71,13,1.483,20,0.359,21,0.018,22,1.17,23,0.4,27,2.905,36,0.311,44,0.013,45,0.015,46,0.013,152,2.529,345,2.271,533,1.08,780,2.677,994,2.466,1021,3.549,1022,3.549,1141,2.677,1264,3.486,1267,3.427,1268,4.168,1269,3.62,1270,3.486,2330,5.409,2331,5.409,2332,5.409,2333,5.409,2334,5.409]],["title/classes/UserLogin.html",[0,0.056,152,1.739]],["body/classes/UserLogin.html",[0,0.11,2,2.332,3,0.241,4,0.21,5,0.21,7,0.21,8,0.517,12,1.373,13,1.499,20,0.321,21,0.018,22,1.17,23,0.359,27,2.758,36,0.314,44,0.013,45,0.016,46,0.013,152,3.072,345,2.332,533,0.927,780,2.748,994,2.259,1021,3.252,1022,3.252,1141,2.748,1264,3.579,1267,3.451,1268,3.579,1269,4.047,1270,3.579,2335,5.553,2336,5.553]],["title/injectables/UserService.html",[60,0.499,997,1.841]],["body/injectables/UserService.html",[0,0.051,3,0.147,4,0.129,5,0.129,7,0.129,8,0.376,11,1.227,12,1.784,13,0.728,17,0.62,18,0.753,20,0.27,21,0.019,22,0.51,23,0.368,36,0.147,44,0.008,45,0.011,46,0.008,60,0.641,62,1.168,65,0.641,66,2.534,75,0.971,76,1.9,77,3.534,79,1.357,80,1.504,81,1.627,82,0.848,83,1.552,84,1.414,85,1.424,86,2.859,87,3.353,88,1.885,89,1.647,90,2.883,91,2.859,92,2.672,95,1.444,96,2.97,97,1.59,98,2.97,100,1.39,106,2.185,107,0.896,108,3.011,109,1.474,110,2.385,111,3.307,112,1.748,115,2.902,116,2.005,117,3.608,120,2.509,121,2.233,122,2.509,124,1.724,131,1.762,133,1.444,142,0.693,143,0.66,145,1.074,146,1.565,147,2.005,148,0.708,149,0.357,150,1.9,151,1.681,153,1.588,154,1.013,158,1.9,159,1.062,160,1.9,161,1.784,162,0.839,163,3.241,164,1.681,165,1.113,166,1.784,167,1.784,168,1.354,169,1.288,170,0.728,171,1.784,172,2.033,173,2.033,174,1.778,175,1.426,176,1.227,178,0.801,179,4.107,184,2.375,243,0.966,249,2.048,253,1.493,533,1.094,997,3.125,1001,3.091,1297,2.189,1499,3.077,1548,3.668,1562,3.668,1981,4.751,1982,4.107,1983,4.107,1984,4.107,1985,5.154,1986,4.107,1988,4.107,1990,4.107,1992,4.107,2007,4.107,2337,2.608,2338,4.775,2339,3.396,2340,3.396,2341,3.396,2342,3.396,2343,3.396,2344,3.396,2345,5.523,2346,3.396,2347,3.396]],["title/classes/UserSignUp.html",[0,0.056,780,1.841]],["body/classes/UserSignUp.html",[0,0.108,2,2.233,3,0.231,4,0.201,5,0.201,7,0.201,8,0.504,12,1.314,13,1.588,20,0.367,21,0.018,22,1.174,23,0.409,27,2.688,36,0.309,44,0.013,45,0.015,46,0.013,152,2.486,345,2.233,533,0.888,780,3.169,994,2.452,1021,3.528,1022,3.528,1141,2.632,1264,3.427,1267,3.411,1268,3.427,1269,3.989,1270,4.427,2348,5.318,2349,5.318,2350,5.318,2351,5.318,2352,5.318,2353,5.318,2354,5.318]],["title/coverage.html",[2355,4.375]],["body/coverage.html",[0,0.111,1,1.518,5,0.144,6,3.97,10,1.518,13,1.107,20,0.186,21,0.019,40,2,44,0.009,45,0.012,46,0.009,60,1.005,61,1.78,63,3.97,152,1.78,155,2.131,163,3.435,165,1.248,188,0.901,189,0.986,195,3.275,196,2.663,197,3.275,217,2,218,1.78,270,6.282,333,2,365,4.601,459,2.531,480,3.331,527,1.034,529,0.986,532,0.986,533,0.98,535,0.986,537,1.034,539,0.986,540,1.47,542,0.986,544,0.986,546,0.986,547,0.986,549,0.986,551,1.034,554,0.986,556,0.986,558,0.986,561,0.986,562,1.083,565,3.275,593,2.131,597,2.925,616,2.663,620,2.925,632,2.663,635,2.663,650,2.663,656,2.663,658,2.663,673,2.663,676,2.663,687,2.663,689,2.663,697,2.663,707,2.663,716,2.925,724,2.663,726,2.925,728,2.663,730,2.925,731,2.663,753,4.103,755,3.275,756,4.103,758,1.444,767,1.96,771,2.131,772,3.97,780,1.885,787,3.275,790,3.97,813,4.103,814,4.103,942,3.233,989,3.275,997,1.885,999,2.28,1009,1.78,1017,2.454,1040,2.454,1077,3.275,1095,3.97,1123,2.663,1189,2.925,1190,3.97,1199,3.275,1225,3.275,1226,2.663,1228,3.97,1260,3.97,1263,2.454,1264,4.055,1274,3.97,1305,3.275,1309,3.275,1311,4.055,1312,3.275,1404,3.275,1482,3.275,1593,3.97,1594,3.97,1618,2.925,1630,3.275,1689,3.275,1708,3.275,1709,3.275,1766,2.925,1767,3.275,1768,3.797,1769,3.797,1896,2.925,1897,3.275,1910,2.925,1911,3.275,1937,2.925,1938,3.275,1965,2.925,1966,3.275,1978,2.925,1979,3.275,2020,3.275,2033,3.275,2063,3.275,2064,3.275,2183,4.445,2190,3.275,2193,3.97,2197,3.275,2203,3.275,2204,3.275,2235,2.925,2289,3.275,2337,3.97,2355,3.275,2356,3.807,2357,3.807,2358,3.807,2359,5.168,2360,5.168,2361,7.06,2362,6.578,2363,3.807,2364,3.807,2365,3.807,2366,6.292,2367,3.807,2368,3.807,2369,3.807,2370,3.807,2371,3.807,2372,3.807,2373,5.168,2374,5.168,2375,5.866,2376,5.168,2377,3.807,2378,3.807,2379,3.807,2380,3.807,2381,3.807,2382,3.807,2383,3.807,2384,3.807,2385,3.807,2386,3.807,2387,5.168,2388,3.807,2389,7.303,2390,3.807,2391,3.807,2392,3.807,2393,3.807,2394,3.807,2395,3.807,2396,5.168,2397,5.168,2398,5.168,2399,3.807,2400,3.807,2401,3.807,2402,3.807,2403,3.807,2404,3.807,2405,5.168,2406,3.275,2407,3.275,2408,3.275,2409,3.275,2410,3.275,2411,4.445,2412,3.275,2413,3.807]],["title/dependencies.html",[582,3.13,2414,3.101]],["body/dependencies.html",[21,0.019,44,0.013,45,0.015,46,0.013,149,0.575,154,1.631,235,2.469,241,2.421,318,2.421,323,4.196,324,3.826,325,4.705,331,2.075,332,2.075,506,3.275,582,3.826,584,4.202,600,3.644,601,3.421,680,4.705,681,4.705,1615,4.705,1616,4.705,2415,5.47,2416,7.642,2417,5.47,2418,5.47,2419,5.47,2420,5.47,2421,5.47,2422,5.47,2423,5.47,2424,5.47,2425,5.47,2426,5.47,2427,5.47,2428,5.47,2429,5.47,2430,5.47,2431,5.47,2432,5.47,2433,5.47,2434,5.47,2435,5.47,2436,5.47,2437,6.511,2438,5.47,2439,5.47,2440,5.47,2441,5.47,2442,5.47,2443,5.47,2444,5.47]],["title/miscellaneous/functions.html",[2445,2.169,2446,3.85]],["body/miscellaneous/functions.html",[7,0.204,17,0.529,18,0.642,21,0.018,44,0.013,45,0.015,46,0.013,79,1.391,80,1.254,82,0.723,84,1.472,89,1.923,107,0.907,109,1.317,131,1.269,161,2.828,170,1.154,231,2.664,243,1.532,249,2.059,253,1.683,254,2.664,285,3.765,296,4.63,333,3.628,385,3.012,597,4.135,716,4.954,718,4.63,846,3.223,887,3.012,942,2.26,1017,4.45,1123,4.829,1180,4.135,1269,3.012,2235,5.304,2240,4.63,2406,4.63,2407,4.63,2408,4.63,2409,4.63,2445,3.765,2446,4.63,2447,5.383,2448,5.383,2449,5.383,2450,5.383,2451,5.383,2452,7.157,2453,7.157,2454,5.383,2455,5.383,2456,5.383,2457,5.383,2458,5.383,2459,7.157,2460,5.383,2461,5.383,2462,5.383,2463,5.383,2464,5.383,2465,5.383]],["title/index.html",[7,0.117,2466,3.101,2467,3.101]],["body/index.html",[4,0.205,17,0.532,21,0.015,44,0.013,45,0.015,46,0.013,165,1.776,188,0.826,202,1.615,207,4.659,339,2.274,467,3.516,596,3.788,1083,5.509,1167,4.16,2244,5.955,2468,5.416,2469,6.472,2470,5.416,2471,6.922,2472,5.416,2473,5.416,2474,6.472,2475,7.33,2476,5.416,2477,5.416,2478,5.416,2479,5.416,2480,5.416,2481,5.416,2482,5.416,2483,5.416,2484,5.416,2485,6.922,2486,6.922,2487,5.416,2488,7.33,2489,5.416,2490,5.416,2491,5.416,2492,5.416,2493,5.416,2494,5.416,2495,4.659,2496,6.472,2497,6.472,2498,7.172,2499,5.416,2500,6.472,2501,6.472,2502,5.416,2503,5.416,2504,5.416,2505,5.416,2506,6.922,2507,5.416,2508,5.416,2509,4.16,2510,5.416,2511,5.416,2512,5.416]],["title/modules.html",[581,3.278]],["body/modules.html",[21,0.016,44,0.014,45,0.016,46,0.014,580,4.231,581,3.899,592,3.899,601,3.178,2513,6.049,2514,6.049,2515,6.904,2516,6.049,2517,6.049]],["title/overview.html",[2509,3.907]],["body/overview.html",[2,2.127,21,0.019,44,0.012,45,0.015,46,0.012,62,1.743,189,1.742,190,1.584,521,1.511,527,2.014,529,1.742,532,1.742,535,1.742,537,1.826,539,1.742,542,1.742,544,1.742,546,1.742,547,1.742,549,1.742,551,1.826,554,1.742,556,1.742,558,1.742,561,1.742,579,3.543,580,5.545,581,3.265,582,3.543,583,4.358,584,3.892,585,4.358,586,3.892,587,4.358,588,4.358,589,4.358,590,4.358,591,4.358,592,4.334,593,3.764,594,4.348,595,4.358,596,3.543,722,3.543,754,3.543,1174,2.662,1175,3.892,2245,4.358,2509,3.892,2518,5.066,2519,5.066,2520,5.066]],["title/routes.html",[722,3.557]],["body/routes.html",[21,0.016,44,0.015,45,0.016,46,0.015,722,4.284]],["title/miscellaneous/variables.html",[2445,2.169,2521,3.85]],["body/miscellaneous/variables.html",[7,0.178,20,0.379,21,0.019,22,0.706,44,0.011,45,0.014,46,0.011,63,3.613,87,4.024,89,2.144,100,1.419,109,1.212,133,0.96,142,1.542,143,1.468,158,4.024,159,2.248,160,4.024,161,3.778,163,3.788,164,3.614,165,2.393,166,3.836,167,3.836,242,2.082,253,1.47,311,2.251,391,1.876,632,4.151,714,3.613,767,1.784,772,3.613,790,3.613,887,2.632,1108,2.471,1190,3.613,1226,3.29,1228,3.613,1240,4.046,1245,2.816,1258,4.046,1259,4.046,1274,3.613,1593,3.613,1594,4.559,1617,4.046,1618,4.559,1619,4.046,2004,6.412,2193,3.613,2337,3.613,2410,4.046,2411,5.875,2412,4.046,2445,3.29,2495,5.106,2521,4.046,2522,4.703,2523,4.703,2524,4.703,2525,4.703,2526,4.703,2527,4.703,2528,4.703,2529,4.703,2530,4.703,2531,4.703,2532,4.703]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":942,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockUserService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.1",{"_index":1760,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["0.10.2",{"_index":2444,"title":{},"body":{"dependencies.html":{}}}],["0.16",{"_index":1400,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["0.23",{"_index":1401,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["0.25",{"_index":2123,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["0.5",{"_index":1848,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["0.9",{"_index":1765,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["0/1",{"_index":2362,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2379,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2380,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2381,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2371,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2361,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2366,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2377,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2382,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2386,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2383,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1173,"title":{"classes/Interest-1.html":{}},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{}}}],["1.0",{"_index":340,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["1.5em",{"_index":1093,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["1.5rem",{"_index":1403,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["1.7.1",{"_index":2434,"title":{},"body":{"dependencies.html":{}}}],["1.99999",{"_index":1847,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["1/1",{"_index":2389,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1180,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/functions.html":{}}}],["10.2.0",{"_index":2472,"title":{},"body":{"index.html":{}}}],["10/10",{"_index":2365,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":2376,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":459,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1041,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["100px",{"_index":2329,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["10px",{"_index":1188,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationComponent.html":{},"components/SignUpComponent.html":{}}}],["11",{"_index":2245,"title":{},"body":{"components/SignUpComponent.html":{},"overview.html":{}}}],["11.2.0",{"_index":2416,"title":{},"body":{"dependencies.html":{}}}],["11.2.3",{"_index":2440,"title":{},"body":{"dependencies.html":{}}}],["11/12",{"_index":2360,"title":{},"body":{"coverage.html":{}}}],["11/20",{"_index":2372,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2001,"title":{},"body":{"injectables/MockUserService.html":{}}}],["12/13",{"_index":2405,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":1391,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["12rem",{"_index":2188,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["13.0.0",{"_index":2424,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":2519,"title":{},"body":{"overview.html":{}}}],["15/16",{"_index":2385,"title":{},"body":{"coverage.html":{}}}],["1500",{"_index":430,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["150px",{"_index":1395,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["155",{"_index":2005,"title":{},"body":{"injectables/MockUserService.html":{}}}],["15px",{"_index":1358,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["16",{"_index":2520,"title":{},"body":{"overview.html":{}}}],["16/17",{"_index":2364,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":1090,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["17",{"_index":2518,"title":{},"body":{"overview.html":{}}}],["18",{"_index":2457,"title":{},"body":{"miscellaneous/functions.html":{}}}],["18t00:00:00.000+00:00",{"_index":2002,"title":{},"body":{"injectables/MockUserService.html":{}}}],["19",{"_index":1701,"title":{},"body":{"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["1990",{"_index":1825,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["1].id",{"_index":1859,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{}}}],["1px",{"_index":1088,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["1rem",{"_index":1361,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["2",{"_index":1174,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"components/SignUpComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":2437,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2435,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":2427,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":2402,"title":{},"body":{"coverage.html":{}}}],["2196f3",{"_index":1762,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["23547b",{"_index":1372,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["250",{"_index":2143,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["256029",{"_index":1378,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["25em",{"_index":1385,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["2px",{"_index":1384,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/MapComponent.html":{}}}],["2rem",{"_index":1402,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["2x.png",{"_index":329,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["3",{"_index":1175,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{},"overview.html":{}}}],["3.1.2",{"_index":2433,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":2432,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":2403,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2400,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2390,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":2146,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["300px",{"_index":462,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["30px",{"_index":1705,"title":{},"body":{"components/MapComponent.html":{}}}],["33201",{"_index":1835,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["33394",{"_index":1806,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["35",{"_index":2135,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["375px",{"_index":483,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["380px",{"_index":2057,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["390px",{"_index":493,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["3px",{"_index":1394,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["4",{"_index":1176,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["4.0.0",{"_index":2439,"title":{},"body":{"dependencies.html":{}}}],["4.5.3",{"_index":2428,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":2430,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":2392,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2401,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":492,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["401",{"_index":1251,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["40vw",{"_index":482,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["42",{"_index":2387,"title":{},"body":{"coverage.html":{}}}],["43.333333",{"_index":1699,"title":{},"body":{"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["43.524088",{"_index":1793,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["43.544993",{"_index":1840,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["43.549",{"_index":1829,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["45",{"_index":2393,"title":{},"body":{"coverage.html":{}}}],["45vw",{"_index":491,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["480px",{"_index":987,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["5",{"_index":1177,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/MockActivityService.html":{},"components/SignUpComponent.html":{}}}],["5.15.1",{"_index":2423,"title":{},"body":{"dependencies.html":{}}}],["5.614049",{"_index":1794,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["5.6631",{"_index":1830,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["5.664037",{"_index":1841,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["5.826187",{"_index":2120,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["5/11",{"_index":2394,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2368,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":480,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/RecommendationMapComponent.html":{},"coverage.html":{}}}],["500",{"_index":1465,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["55",{"_index":1077,"title":{},"body":{"components/EditUserAdminComponent.html":{},"coverage.html":{}}}],["56",{"_index":2182,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["5px",{"_index":473,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["5rem",{"_index":1386,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["6",{"_index":349,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserComponent.html":{},"components/MapComponent.html":{},"components/SignUpComponent.html":{}}}],["6.0.0",{"_index":2425,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":2441,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":2395,"title":{},"body":{"coverage.html":{}}}],["6/14",{"_index":2404,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2374,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":2399,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1040,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/RecommendationComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["600",{"_index":2184,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["694382",{"_index":1369,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["6px",{"_index":1398,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["7",{"_index":1178,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["7/8",{"_index":2397,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":2284,"title":{},"body":{"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["700",{"_index":1390,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["75",{"_index":2398,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":1224,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["8",{"_index":350,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/MapComponent.html":{},"injectables/MockActivityService.html":{},"components/SignUpComponent.html":{}}}],["8.75",{"_index":2121,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["8/9",{"_index":2370,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2391,"title":{},"body":{"coverage.html":{}}}],["800px",{"_index":463,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["805b36",{"_index":1381,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["83",{"_index":2367,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2373,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":2396,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2369,"title":{},"body":{"coverage.html":{}}}],["8a5340",{"_index":1366,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["8d8",{"_index":1907,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["9",{"_index":1179,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["9/10",{"_index":2378,"title":{},"body":{"coverage.html":{}}}],["9/21",{"_index":2388,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2375,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":2359,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":2183,"title":{},"body":{"components/RecommendationMapComponent.html":{},"coverage.html":{}}}],["93",{"_index":2384,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":2363,"title":{},"body":{"coverage.html":{}}}],["a.interestid",{"_index":1164,"title":{},"body":{"components/EditUserComponent.html":{}}}],["a[propname",{"_index":1069,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["a[propname].length",{"_index":1058,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["a[propname].slice().sort().every((value",{"_index":1060,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["abre",{"_index":2097,"title":{},"body":{"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["absolute",{"_index":1704,"title":{},"body":{"components/MapComponent.html":{}}}],["acceder",{"_index":1107,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["accept",{"_index":1460,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["acceso",{"_index":831,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"injectables/LocalStorageService.html":{},"components/MenuBarComponent.html":{}}}],["accessors",{"_index":1102,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["act._latlng.lat",{"_index":2162,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["act._latlng.lng",{"_index":2164,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["acti.id",{"_index":1876,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activatedroute",{"_index":825,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/LoginComponent.html":{}}}],["activatedroutesnapshot",{"_index":761,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/RoleGuardService.html":{}}}],["actividad",{"_index":103,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockInterestService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["actividades",{"_index":125,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activities",{"_index":540,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["activities'},{'name",{"_index":531,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activities.component",{"_index":636,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TableActivitiesComponent.html":{}}}],["activities.component.html",{"_index":816,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activities.component.scss",{"_index":815,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activities.component.ts",{"_index":814,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["activities.component.ts:103",{"_index":880,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:131",{"_index":2303,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:140",{"_index":2306,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:158",{"_index":2301,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:167",{"_index":2298,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:176",{"_index":2304,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:186",{"_index":859,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:210",{"_index":884,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:223",{"_index":868,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:240",{"_index":865,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:25",{"_index":1210,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["activities.component.ts:29",{"_index":1203,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:306",{"_index":852,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:32",{"_index":892,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:320",{"_index":864,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:33",{"_index":2308,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:36",{"_index":896,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:37",{"_index":2295,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:40",{"_index":891,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:43",{"_index":1211,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["activities.component.ts:44",{"_index":888,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:48",{"_index":893,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:52",{"_index":894,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{}}}],["activities.component.ts:56",{"_index":897,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:60",{"_index":828,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:74",{"_index":2302,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:87",{"_index":2300,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities/add",{"_index":744,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["activities/edit",{"_index":676,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"coverage.html":{}}}],["activities/edit/:id",{"_index":743,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["activities/information",{"_index":673,"title":{},"body":{"modules/AppModule.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["activities/table",{"_index":635,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["activities_valued",{"_index":1353,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/MenuBarComponent.html":{}}}],["activitiesevaluate",{"_index":749,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["activitiesrecommendation",{"_index":2065,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["activitiesselected",{"_index":2066,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["activitiesservice",{"_index":2079,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["activity",{"_index":1,"title":{"classes/Activity.html":{}},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["activity\").setattribute",{"_index":973,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activity'},{'name",{"_index":526,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activity.address",{"_index":1217,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["activity.average}}/5",{"_index":2173,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["activity.city",{"_index":1219,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activity.component",{"_index":696,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["activity.component.html",{"_index":206,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.scss",{"_index":204,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts",{"_index":197,"title":{},"body":{"components/AddActivityComponent.html":{},"coverage.html":{}}}],["activity.component.ts:129",{"_index":291,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:147",{"_index":268,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:158",{"_index":279,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:167",{"_index":247,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:33",{"_index":302,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:37",{"_index":305,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:41",{"_index":301,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:45",{"_index":312,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:49",{"_index":222,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:87",{"_index":293,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.description",{"_index":1216,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activity.get('address",{"_index":1886,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activity.get('city",{"_index":1884,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activity.get('description",{"_index":1880,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activity.get('interest",{"_index":1885,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activity.get('latitude",{"_index":1881,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activity.get('longitude",{"_index":1882,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activity.get('name",{"_index":1879,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activity.id",{"_index":2324,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activity.interest",{"_index":1218,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activity.latitude",{"_index":2163,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["activity.longitude",{"_index":2140,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["activity.metadataimage.data",{"_index":1346,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activity.metadataimage.mimetype",{"_index":1345,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activity.name",{"_index":1215,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activity.service",{"_index":1851,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activity/add",{"_index":196,"title":{},"body":{"components/AddActivityComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["activity:10",{"_index":50,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:11",{"_index":57,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:2",{"_index":53,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:3",{"_index":58,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:4",{"_index":52,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:5",{"_index":55,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:6",{"_index":56,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:7",{"_index":59,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:8",{"_index":51,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:9",{"_index":54,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity_added",{"_index":422,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity_edited",{"_index":965,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activity_id",{"_index":2153,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["activityid",{"_index":817,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activityrate",{"_index":141,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["activityrecommended",{"_index":40,"title":{"classes/ActivityRecommended.html":{}},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{},"coverage.html":{}}}],["activityselectedtorate",{"_index":2067,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["activityservice",{"_index":61,"title":{"injectables/ActivityService.html":{}},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["activityservice:103",{"_index":1786,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityservice:26",{"_index":1850,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityservice:38",{"_index":1784,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityservice:47",{"_index":1785,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityservice:56",{"_index":1781,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityservice:65",{"_index":1782,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityservice:76",{"_index":1783,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityservice:85",{"_index":1788,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityservice:94",{"_index":1787,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activitytoadd",{"_index":1857,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityurl",{"_index":64,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["actual_component",{"_index":564,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["actualizada",{"_index":122,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["actualizo",{"_index":2243,"title":{},"body":{"components/SignUpComponent.html":{}}}],["add",{"_index":181,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["add_activity",{"_index":447,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["add_activity_error",{"_index":437,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["add_city",{"_index":1476,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["add_interest",{"_index":1541,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["addactivity",{"_index":67,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/MockActivityService.html":{},"components/TableActivitiesComponent.html":{}}}],["addactivity(formdata",{"_index":93,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["addactivitycomponent",{"_index":189,"title":{"components/AddActivityComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addcity",{"_index":792,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["addcity(city",{"_index":797,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["addinterests",{"_index":1276,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["addinterests(interest",{"_index":1282,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["address",{"_index":9,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/MockActivityService.html":{}}}],["addto(map",{"_index":356,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["adicional",{"_index":1212,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["admin",{"_index":742,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditUserAdminComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockUserService.html":{},"guards/RoleGuardService.html":{}}}],["admin'},{'name",{"_index":534,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["admin.component",{"_index":688,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["admin.component.html",{"_index":991,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.scss",{"_index":990,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts",{"_index":989,"title":{},"body":{"components/EditUserAdminComponent.html":{},"coverage.html":{}}}],["admin.component.ts:117",{"_index":1005,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:146",{"_index":1004,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:160",{"_index":1002,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:32",{"_index":1007,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:36",{"_index":1011,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:40",{"_index":1012,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:44",{"_index":1010,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:48",{"_index":1013,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:52",{"_index":1000,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:90",{"_index":1003,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin/edit",{"_index":687,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditUserAdminComponent.html":{},"coverage.html":{}}}],["admin/user/edit/:id",{"_index":746,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["admin@email.com",{"_index":2003,"title":{},"body":{"injectables/MockUserService.html":{}}}],["age_invalid",{"_index":1076,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["al",{"_index":137,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["alba",{"_index":336,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockUserService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["alba@email.com",{"_index":1904,"title":{},"body":{"injectables/MockAuthService.html":{},"injectables/MockUserService.html":{}}}],["alguna",{"_index":2089,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["algún",{"_index":886,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/SignUpComponent.html":{}}}],["align",{"_index":488,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["align:center",{"_index":466,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/SignUpComponent.html":{}}}],["almacena",{"_index":145,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["almacenada",{"_index":1611,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["almacenar",{"_index":242,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":2244,"title":{},"body":{"components/SignUpComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":2415,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2417,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2418,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":151,"title":{},"body":{"injectables/ActivityService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":2419,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":149,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":318,"title":{},"body":{"components/AddActivityComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":600,"title":{},"body":{"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":331,"title":{},"body":{"components/AddActivityComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"dependencies.html":{}}}],["antes",{"_index":1873,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["aparición",{"_index":2085,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["api",{"_index":88,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["aplicación",{"_index":239,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["app",{"_index":202,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"index.html":{}}}],["app.component",{"_index":606,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":566,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":602,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":527,"title":{"components/AppComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apple",{"_index":508,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["application/json",{"_index":167,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":580,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":592,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aprops",{"_index":957,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["archivo",{"_index":271,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["arial",{"_index":515,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["array",{"_index":306,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListUserComponent.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["array1sort.every((value",{"_index":1170,"title":{},"body":{"components/EditUserComponent.html":{}}}],["array1sort.length",{"_index":1168,"title":{},"body":{"components/EditUserComponent.html":{}}}],["array2sort.length",{"_index":1169,"title":{},"body":{"components/EditUserComponent.html":{}}}],["array2sorted[index",{"_index":1057,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["artifacts",{"_index":2489,"title":{},"body":{"index.html":{}}}],["asociada",{"_index":834,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["asociado",{"_index":2103,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["assets/images/landscape.png",{"_index":2133,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["asturias",{"_index":1845,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["atob(datauri.split(',')[1",{"_index":943,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["attribution",{"_index":353,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["autenticación",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["autenticado",{"_index":1096,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["autenticar",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockAuthService.html":{}}}],["auth.service",{"_index":1902,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["auth/auth.service",{"_index":1951,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["authguardservice",{"_index":724,"title":{"guards/AuthGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"coverage.html":{}}}],["author",{"_index":335,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["authorities",{"_index":2045,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["authority",{"_index":1713,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["authservice",{"_index":771,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MockAuthService.html":{},"injectables/MockInterestService.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["authservice:25",{"_index":1901,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["authservice:38",{"_index":1899,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["authservice:47",{"_index":1900,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["authtoken",{"_index":1619,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["authurl",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockAuthService.html":{}}}],["auto",{"_index":484,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/RecommendationComponent.html":{},"components/SignUpComponent.html":{}}}],["auto\\9",{"_index":980,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["automatically",{"_index":2480,"title":{},"body":{"index.html":{}}}],["autreq",{"_index":1244,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["aux",{"_index":409,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{}}}],["available",{"_index":2517,"title":{},"body":{"modules.html":{}}}],["average",{"_index":43,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{}}}],["awesome",{"_index":2429,"title":{},"body":{"dependencies.html":{}}}],["ayuda",{"_index":836,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["añadida",{"_index":1868,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{}}}],["añadido",{"_index":1903,"title":{},"body":{"injectables/MockAuthService.html":{},"injectables/MockInterestService.html":{}}}],["añadir",{"_index":101,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{}}}],["año",{"_index":1824,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["años",{"_index":2458,"title":{},"body":{"miscellaneous/functions.html":{}}}],["b",{"_index":867,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["b3e5fc",{"_index":1371,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["b[propname",{"_index":1070,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["b[propname].length",{"_index":1059,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["background",{"_index":1364,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/MenuBarComponent.html":{}}}],["badge",{"_index":1382,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["badge.status",{"_index":1362,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["bar",{"_index":1710,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar'},{'name",{"_index":553,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["bar.component",{"_index":621,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":1712,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.scss",{"_index":1711,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts",{"_index":1709,"title":{},"body":{"components/MenuBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:26",{"_index":1735,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:30",{"_index":1737,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:34",{"_index":1733,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:38",{"_index":1716,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:54",{"_index":1738,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:66",{"_index":1726,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:84",{"_index":1721,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:97",{"_index":1728,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar/menu",{"_index":620,"title":{},"body":{"modules/AppModule.html":{},"components/MenuBarComponent.html":{},"coverage.html":{}}}],["basada",{"_index":1685,"title":{},"body":{"components/LoginComponent.html":{}}}],["base64",{"_index":862,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["base64/urlencoded",{"_index":939,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["bearer",{"_index":1248,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["between",{"_index":1481,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["bind(this)).addto(map",{"_index":379,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["birth",{"_index":2287,"title":{},"body":{"components/SignUpComponent.html":{}}}],["birthday_required",{"_index":1075,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["black",{"_index":1707,"title":{},"body":{"components/MapComponent.html":{}}}],["blanco",{"_index":2461,"title":{},"body":{"miscellaneous/functions.html":{}}}],["blinkmacsystemfont",{"_index":510,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["block",{"_index":982,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{}}}],["bloque",{"_index":2216,"title":{},"body":{"components/SignUpComponent.html":{}}}],["boolean",{"_index":310,"title":{},"body":{"components/AddActivityComponent.html":{},"guards/AuthGuardService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{}}}],["bootstrap",{"_index":584,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/scss/bootstrap",{"_index":1752,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["border",{"_index":1086,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{}}}],["bottom",{"_index":1078,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{}}}],["botón",{"_index":281,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["box",{"_index":1396,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["bprops",{"_index":959,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["browse",{"_index":2515,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":601,"title":{},"body":{"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":611,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":610,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":599,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":2488,"title":{},"body":{"index.html":{}}}],["button",{"_index":489,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["button_add_activity_container",{"_index":487,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["button_create_recommendation",{"_index":2059,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["button_edit_activity_container",{"_index":985,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["button_edit_user_submit",{"_index":1187,"title":{},"body":{"components/EditUserComponent.html":{}}}],["button_edit_user_submit_container",{"_index":1186,"title":{},"body":{"components/EditUserComponent.html":{}}}],["button_return",{"_index":2282,"title":{},"body":{"components/SignUpComponent.html":{}}}],["button_signup",{"_index":2279,"title":{},"body":{"components/SignUpComponent.html":{}}}],["buttonmodule",{"_index":608,"title":{},"body":{"modules/AppModule.html":{}}}],["buttons",{"_index":1080,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["buttonsave",{"_index":1084,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["bytes",{"_index":950,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["bytestring",{"_index":940,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["c4c6c8",{"_index":1091,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["c63737",{"_index":1375,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["c8e6c9",{"_index":1377,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["cabecera",{"_index":163,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cabueñes",{"_index":1802,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["calendarmodule",{"_index":694,"title":{},"body":{"modules/AppModule.html":{}}}],["calle",{"_index":1797,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["cambia",{"_index":853,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["cambiar",{"_index":1729,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["cambio",{"_index":899,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["campo",{"_index":285,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"miscellaneous/functions.html":{}}}],["campos",{"_index":296,"title":{},"body":{"components/AddActivityComponent.html":{},"miscellaneous/functions.html":{}}}],["canactivate",{"_index":740,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"guards/RoleGuardService.html":{}}}],["canactivate(route",{"_index":760,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/RoleGuardService.html":{}}}],["cancel",{"_index":1412,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["canceledit",{"_index":1413,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["card",{"_index":2058,"title":{},"body":{"components/RecommendationComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["cardmodule",{"_index":665,"title":{},"body":{"modules/AppModule.html":{}}}],["carga",{"_index":835,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["cargar",{"_index":298,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["casilla",{"_index":2090,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["caso",{"_index":875,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{}}}],["catalina",{"_index":1828,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["catcherror",{"_index":1243,"title":{},"body":{"interceptors/InterceptorService.html":{},"components/ListCitiesComponent.html":{}}}],["center",{"_index":979,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["centrar",{"_index":984,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["centro",{"_index":1834,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["cerrar",{"_index":1722,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["cerro",{"_index":1826,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["change",{"_index":2482,"title":{},"body":{"index.html":{}}}],["changeimage",{"_index":820,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["changeimage(event",{"_index":851,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["changemap",{"_index":2072,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["changemap(event",{"_index":2082,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["check",{"_index":1167,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{},"index.html":{}}}],["checkboxactivityrecommendation",{"_index":2178,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["checkboxmodule",{"_index":682,"title":{},"body":{"modules/AppModule.html":{}}}],["child(2",{"_index":498,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["chillida",{"_index":1818,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["chipmodule",{"_index":703,"title":{},"body":{"modules/AppModule.html":{}}}],["ci.id",{"_index":1933,"title":{},"body":{"injectables/MockCityService.html":{}}}],["cimadevilla",{"_index":1833,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["cities",{"_index":745,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ListCitiesComponent.html":{},"components/MenuBarComponent.html":{}}}],["cities'},{'name",{"_index":543,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["cities.component",{"_index":651,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["cities.component.html",{"_index":1406,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.scss",{"_index":1405,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts",{"_index":1404,"title":{},"body":{"components/ListCitiesComponent.html":{},"coverage.html":{}}}],["cities.component.ts:111",{"_index":1427,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:116",{"_index":1428,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:120",{"_index":1423,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:124",{"_index":1426,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:133",{"_index":1431,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:153",{"_index":1424,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:17",{"_index":1437,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:18",{"_index":1438,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:19",{"_index":1442,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:20",{"_index":1440,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:21",{"_index":1441,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:22",{"_index":1439,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:23",{"_index":1422,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:33",{"_index":1430,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:44",{"_index":1434,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:48",{"_index":1429,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:56",{"_index":1432,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:80",{"_index":1436,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities/list",{"_index":650,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ListCitiesComponent.html":{},"coverage.html":{}}}],["city",{"_index":10,"title":{"classes/City.html":{}},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["city).pipe",{"_index":1472,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["city.id",{"_index":811,"title":{},"body":{"injectables/CityService.html":{},"components/ListCitiesComponent.html":{},"injectables/MockCityService.html":{}}}],["city.name",{"_index":1463,"title":{},"body":{"components/ListCitiesComponent.html":{},"injectables/MockCityService.html":{}}}],["city.service",{"_index":1925,"title":{},"body":{"injectables/MockCityService.html":{}}}],["cityservice",{"_index":217,"title":{"injectables/CityService.html":{}},"body":{"components/AddActivityComponent.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"injectables/MockCityService.html":{},"components/RecommendationMapComponent.html":{},"coverage.html":{}}}],["cityservice:26",{"_index":1923,"title":{},"body":{"injectables/MockCityService.html":{}}}],["cityservice:38",{"_index":1920,"title":{},"body":{"injectables/MockCityService.html":{}}}],["cityservice:47",{"_index":1917,"title":{},"body":{"injectables/MockCityService.html":{}}}],["cityservice:56",{"_index":1918,"title":{},"body":{"injectables/MockCityService.html":{}}}],["cityservice:66",{"_index":1919,"title":{},"body":{"injectables/MockCityService.html":{}}}],["citytoadd",{"_index":1927,"title":{},"body":{"injectables/MockCityService.html":{}}}],["citytoedit",{"_index":1878,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{}}}],["cityurl",{"_index":791,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["ciudad",{"_index":433,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{}}}],["clase",{"_index":81,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["class",{"_index":0,"title":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"classes/City.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"classes/JwtModel.html":{},"classes/Rol.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"classes/City.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"classes/JwtModel.html":{},"classes/Rol.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{},"overview.html":{}}}],["clave",{"_index":1617,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["clearservice",{"_index":2021,"title":{},"body":{"injectables/NotificationService.html":{}}}],["cli",{"_index":2471,"title":{},"body":{"index.html":{}}}],["click",{"_index":2088,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["cluster_appmodule",{"_index":587,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":590,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":588,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":589,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":591,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":2483,"title":{},"body":{"index.html":{}}}],["codificada",{"_index":861,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["col.header",{"_index":1579,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["color",{"_index":518,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["cols",{"_index":1545,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["column",{"_index":1222,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["columna",{"_index":1558,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["columnas",{"_index":1560,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["command",{"_index":2510,"title":{},"body":{"index.html":{}}}],["compara",{"_index":869,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["comparar",{"_index":878,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["component",{"_index":188,"title":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":525,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["componente",{"_index":295,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["componentes",{"_index":1208,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["components",{"_index":190,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"overview.html":{}}}],["con",{"_index":110,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/InterestService.html":{},"injectables/LocalStorageService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["config",{"_index":569,"title":{},"body":{"components/AppComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/MenuBarComponent.html":{}}}],["confirm",{"_index":2290,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["confirm(activity",{"_index":2296,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["confirmación",{"_index":1495,"title":{},"body":{"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["confirmationservice",{"_index":641,"title":{},"body":{"modules/AppModule.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["confirmdelete",{"_index":1547,"title":{},"body":{"components/ListUserComponent.html":{}}}],["confirmdelete(user",{"_index":1550,"title":{},"body":{"components/ListUserComponent.html":{}}}],["confirmdialogmodule",{"_index":639,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(\"aqui",{"_index":2321,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["console.log(council",{"_index":922,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["console.log(err",{"_index":2258,"title":{},"body":{"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["const",{"_index":162,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["consta",{"_index":1105,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["constructor",{"_index":75,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["constructor(activitiesservice",{"_index":2076,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["constructor(activityservice",{"_index":2294,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["constructor(authservice",{"_index":1638,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(cityservice",{"_index":1421,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["constructor(fb",{"_index":824,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["constructor(formbuilder",{"_index":215,"title":{},"body":{"components/AddActivityComponent.html":{},"components/SignUpComponent.html":{}}}],["constructor(httpclient",{"_index":76,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["constructor(interestservice",{"_index":1492,"title":{},"body":{"components/ListInterestComponent.html":{},"components/RecommendationComponent.html":{}}}],["constructor(localstorageservice",{"_index":1231,"title":{},"body":{"interceptors/InterceptorService.html":{},"guards/RoleGuardService.html":{}}}],["constructor(private",{"_index":175,"title":{},"body":{"injectables/ActivityService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/RecommendationComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":573,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(ref",{"_index":1200,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["constructor(router",{"_index":757,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/IsLogginInGuardService.html":{},"components/MenuBarComponent.html":{}}}],["constructor(translate",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(userservice",{"_index":1103,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{}}}],["container",{"_index":454,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{}}}],["contaiter",{"_index":1220,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["contenido",{"_index":1298,"title":{},"body":{"injectables/InterestService.html":{}}}],["content",{"_index":1082,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/MenuBarComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["contextos",{"_index":850,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["continuesecondpartform",{"_index":2212,"title":{},"body":{"components/SignUpComponent.html":{}}}],["contrario",{"_index":876,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{}}}],["control",{"_index":324,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/SignUpComponent.html":{},"dependencies.html":{}}}],["control.markgeocode(resultado",{"_index":929,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["control.options.geocoder.geocode(response2.address",{"_index":925,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["convert",{"_index":938,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["convierte",{"_index":860,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["coordenates",{"_index":1223,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["copy",{"_index":354,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["correcta",{"_index":2232,"title":{},"body":{"components/SignUpComponent.html":{}}}],["correctas",{"_index":1654,"title":{},"body":{"components/LoginComponent.html":{}}}],["correspondiente",{"_index":290,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/LoginComponent.html":{}}}],["correspondientes",{"_index":2094,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["council",{"_index":373,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["coverage",{"_index":2355,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cre",{"_index":1206,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["crea",{"_index":248,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["crear",{"_index":223,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["create_recommendation",{"_index":2054,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["credenciales",{"_index":1653,"title":{},"body":{"components/LoginComponent.html":{}}}],["cross",{"_index":840,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["cuando",{"_index":276,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["cuidado",{"_index":2168,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["current",{"_index":1746,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["custom",{"_index":456,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["cuya",{"_index":1332,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["cuyo",{"_index":2092,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["d1",{"_index":1062,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["d1.gettime",{"_index":1067,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["d2",{"_index":1065,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["d2.gettime",{"_index":1068,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["dada",{"_index":2464,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dadas",{"_index":1293,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["data",{"_index":39,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["data.filter(p",{"_index":1128,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["data.foreach",{"_index":386,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["datatable",{"_index":1585,"title":{},"body":{"components/ListUserComponent.html":{}}}],["datauri",{"_index":863,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["datauri.split(',')[0].indexof('base64",{"_index":941,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["datauri.split(',')[0].split(':')[1].split(';')[0",{"_index":948,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["datauritoblob",{"_index":821,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["datauritoblob(datauri",{"_index":858,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["dataview",{"_index":1357,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["dataviewmodule",{"_index":699,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":1268,"title":{},"body":{"classes/Interest-1.html":{},"components/ListUserComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["date('1998",{"_index":2000,"title":{},"body":{"injectables/MockUserService.html":{}}}],["date(a[propname]).todatestring",{"_index":1064,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["date(b[propname]?.todatestring",{"_index":1066,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["date(datebirthday.gettime",{"_index":1039,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["date(new",{"_index":1063,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["date(this.edituserform.get('datebirthday').value",{"_index":1036,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["date(this.edituserprofile.get('datebirthday').value",{"_index":1145,"title":{},"body":{"components/EditUserComponent.html":{}}}],["date(this.formgroup.get('datebirthday').value",{"_index":2259,"title":{},"body":{"components/SignUpComponent.html":{}}}],["date(this.user.datebirthday",{"_index":1030,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["date_birth",{"_index":1074,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListUserComponent.html":{},"components/SignUpComponent.html":{}}}],["datebirthday",{"_index":1022,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"classes/Interest-1.html":{},"components/ListUserComponent.html":{},"injectables/MockUserService.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["datebirthday.gettimezoneoffset",{"_index":1038,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["datebirthday.toisostring().split('t')[0",{"_index":1043,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["datos",{"_index":251,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["dd/mm/yyyy",{"_index":1582,"title":{},"body":{"components/ListUserComponent.html":{}}}],["de",{"_index":79,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["dealwithfiles",{"_index":211,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["dealwithfiles(event",{"_index":267,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["declarations",{"_index":583,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decode",{"_index":1616,"title":{},"body":{"injectables/LocalStorageService.html":{},"dependencies.html":{}}}],["decodedtoken",{"_index":1625,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["decodedtoken.roles",{"_index":1628,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["decodedtoken.sub",{"_index":1627,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["decodetoken",{"_index":1595,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["decodetoken(token",{"_index":1602,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["decodifica",{"_index":1604,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["decodificada",{"_index":1605,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["deep",{"_index":468,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["default",{"_index":142,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{}}}],["del",{"_index":133,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":115,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["deleteactivity",{"_index":68,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["deleteactivity(id",{"_index":113,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["deletecity",{"_index":793,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["deletecity(city",{"_index":800,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["deletefiles",{"_index":212,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["deletefiles(event",{"_index":278,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["deleteinterest",{"_index":1277,"title":{},"body":{"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockInterestService.html":{}}}],["deleteinterest(interest",{"_index":1286,"title":{},"body":{"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockInterestService.html":{}}}],["deleteuser",{"_index":1982,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["deleteuser(id",{"_index":1986,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":582,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":717,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":11,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["description_activity",{"_index":449,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["desde",{"_index":1650,"title":{},"body":{"components/LoginComponent.html":{}}}],["desea",{"_index":1501,"title":{},"body":{"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["deshabilita",{"_index":280,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["destruir",{"_index":1646,"title":{},"body":{"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["detail",{"_index":440,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["detail:message",{"_index":427,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["details",{"_index":179,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/UserService.html":{}}}],["detalle",{"_index":2028,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dev",{"_index":2477,"title":{},"body":{"index.html":{}}}],["development",{"_index":2473,"title":{},"body":{"index.html":{}}}],["devolver",{"_index":1205,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["devuelto",{"_index":2230,"title":{},"body":{"components/SignUpComponent.html":{}}}],["devuelve",{"_index":872,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["dialogmodule",{"_index":644,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogservice",{"_index":669,"title":{},"body":{"modules/AppModule.html":{},"components/TableActivitiesComponent.html":{}}}],["dicha",{"_index":1720,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["diferentes",{"_index":849,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["dintintos",{"_index":882,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/SignUpComponent.html":{}}}],["dinámicamente",{"_index":854,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["dinámicos",{"_index":1209,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["direcciones",{"_index":363,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["dirección",{"_index":359,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["direction",{"_index":1221,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["direction:column",{"_index":2061,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["directive",{"_index":524,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["directives",{"_index":563,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2487,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2492,"title":{},"body":{"index.html":{}}}],["display",{"_index":476,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["displayeditdialog",{"_index":1485,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["displayeditpanel",{"_index":1407,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["displaypanelrating",{"_index":2068,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["dist",{"_index":2491,"title":{},"body":{"index.html":{}}}],["distintas",{"_index":307,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["distintos",{"_index":299,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{},"components/SignUpComponent.html":{}}}],["distrito",{"_index":1804,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["div:nth",{"_index":497,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["diálogo",{"_index":1494,"title":{},"body":{"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["document.getelementbyid(\"image",{"_index":972,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["documentation",{"_index":2356,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":193,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["domsanitizer",{"_index":827,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["don",{"_index":1838,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["dos",{"_index":870,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{}}}],["dropdown",{"_index":309,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{}}}],["dropdownmodule",{"_index":626,"title":{},"body":{"modules/AppModule.html":{}}}],["dynamic",{"_index":2420,"title":{},"body":{"dependencies.html":{}}}],["dynamicdialogconfig",{"_index":1202,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["dynamicdialogref",{"_index":1201,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["e",{"_index":366,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/SignUpComponent.html":{}}}],["e.geocode.center.lat",{"_index":368,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["e.geocode.center.lng",{"_index":371,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["e.geocode.properties.address.city",{"_index":374,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["e.geocode.properties.address.town",{"_index":375,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["e.geocode.properties.address.village",{"_index":376,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["e2e",{"_index":2503,"title":{},"body":{"index.html":{}}}],["e3utrf1oygpbx0s5zlxdwqha7wwlonmf/9k",{"_index":1809,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["eccfff",{"_index":1368,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["edad",{"_index":2454,"title":{},"body":{"miscellaneous/functions.html":{}}}],["edit",{"_index":530,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["edit_activity_container",{"_index":975,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["edit_activity_error",{"_index":967,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["edit_profile_user",{"_index":1155,"title":{},"body":{"components/EditUserComponent.html":{}}}],["edit_title",{"_index":1071,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["edit_title_activity",{"_index":974,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["editactivities",{"_index":2299,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["editactivitiescomponent",{"_index":529,"title":{"components/EditActivitiesComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editactivitiesform",{"_index":818,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["editactivity",{"_index":69,"title":{},"body":{"injectables/ActivityService.html":{},"components/EditActivitiesComponent.html":{},"injectables/MockActivityService.html":{},"components/TableActivitiesComponent.html":{}}}],["editactivity(activity",{"_index":2297,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["editactivity(id",{"_index":118,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["editada",{"_index":1936,"title":{},"body":{"injectables/MockCityService.html":{}}}],["editado",{"_index":1964,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["editar",{"_index":890,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{}}}],["editcity",{"_index":794,"title":{},"body":{"injectables/CityService.html":{},"components/ListCitiesComponent.html":{},"injectables/MockCityService.html":{}}}],["editcity(city",{"_index":1425,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["editcity(id",{"_index":803,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["editinterest",{"_index":1278,"title":{},"body":{"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockInterestService.html":{}}}],["editinterest(id",{"_index":1288,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["editinterest(interest",{"_index":1502,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["edituser",{"_index":1548,"title":{},"body":{"components/ListUserComponent.html":{},"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["edituser(id",{"_index":1988,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["edituser(user",{"_index":1552,"title":{},"body":{"components/ListUserComponent.html":{}}}],["edituseradmin",{"_index":1555,"title":{},"body":{"components/ListUserComponent.html":{}}}],["edituseradmincomponent",{"_index":532,"title":{"components/EditUserAdminComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editusercomponent",{"_index":535,"title":{"components/EditUserComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["edituserform",{"_index":992,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["edituserprofile",{"_index":1100,"title":{},"body":{"components/EditUserComponent.html":{}}}],["eduardo",{"_index":1817,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["ejecuta",{"_index":885,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["el",{"_index":109,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":523,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["elimina",{"_index":283,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["eliminada",{"_index":1856,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{}}}],["eliminado",{"_index":288,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{}}}],["eliminar",{"_index":116,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["ellipsis",{"_index":501,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["elogio",{"_index":1810,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["elogio.jpg",{"_index":1831,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["email",{"_index":1267,"title":{},"body":{"classes/Interest-1.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockUserService.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["email_user",{"_index":2155,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["emitevent",{"_index":2250,"title":{},"body":{"components/SignUpComponent.html":{}}}],["emoji",{"_index":519,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["en",{"_index":253,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["encabezado",{"_index":158,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["encarga",{"_index":171,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/LocalStorageService.html":{},"injectables/NotificationService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["encargado",{"_index":261,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["encargar",{"_index":2106,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["encontrado",{"_index":362,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["encuentra",{"_index":1607,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["encuentre",{"_index":2465,"title":{},"body":{"miscellaneous/functions.html":{}}}],["end",{"_index":1083,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"index.html":{}}}],["endpoint",{"_index":147,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["english",{"_index":1749,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["enlaces",{"_index":1739,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["entre",{"_index":231,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"miscellaneous/functions.html":{}}}],["enviada",{"_index":111,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["enviado",{"_index":258,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["enviar",{"_index":282,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["environment",{"_index":2411,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envía",{"_index":256,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["erigida",{"_index":1823,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["err",{"_index":431,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"interceptors/InterceptorService.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["err.error.mensaje",{"_index":432,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/SignUpComponent.html":{}}}],["err.error.mensaje.includes(\"ya",{"_index":443,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["err.status",{"_index":1250,"title":{},"body":{"interceptors/InterceptorService.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["error",{"_index":505,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"injectables/MockActivityService.html":{},"components/SignUpComponent.html":{}}}],["error_activity_repeated",{"_index":446,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["error_city_council",{"_index":442,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["error_delete_message",{"_index":1162,"title":{},"body":{"components/EditUserComponent.html":{}}}],["erroraddcity",{"_index":1408,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["erroraddinterest",{"_index":1486,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["erroreditcity",{"_index":1409,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["erroreditinterest",{"_index":1487,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["errormessage",{"_index":360,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["es",{"_index":277,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationComponent.html":{},"components/SignUpComponent.html":{}}}],["escriba",{"_index":358,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["escultor",{"_index":1815,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["escultura",{"_index":1812,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["esculturas",{"_index":1373,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["ese",{"_index":969,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["españa",{"_index":1807,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["est",{"_index":1736,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["estatua",{"_index":1837,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["este",{"_index":2048,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["estén",{"_index":2460,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etiqueta",{"_index":856,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["evaluate",{"_index":1313,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate'},{'name",{"_index":541,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["evaluate.component",{"_index":698,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["evaluate.component.html",{"_index":1315,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate.component.scss",{"_index":1314,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate.component.ts",{"_index":1312,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"coverage.html":{}}}],["evaluate.component.ts:102",{"_index":1326,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate.component.ts:29",{"_index":1333,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate.component.ts:33",{"_index":1334,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate.component.ts:37",{"_index":1335,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate.component.ts:41",{"_index":1322,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate.component.ts:69",{"_index":1323,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate.component.ts:91",{"_index":1330,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate/list",{"_index":697,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ListActivitiesEvaluateComponent.html":{},"coverage.html":{}}}],["evaluates",{"_index":1356,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["event",{"_index":273,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["event.checked",{"_index":2147,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["event.files[0",{"_index":389,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["event.value",{"_index":1347,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evento",{"_index":274,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["example",{"_index":1097,"title":{},"body":{"components/EditUserComponent.html":{}}}],["execute",{"_index":2500,"title":{},"body":{"index.html":{}}}],["existe",{"_index":434,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["expectedrol",{"_index":741,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/RoleGuardService.html":{}}}],["expectedrol.indexof(this.rol",{"_index":2202,"title":{},"body":{"guards/RoleGuardService.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{}}}],["exports",{"_index":586,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":41,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{}}}],["eyjhbgcioijiuzuxmij9.eyjzdwiioijhzg1pbkblbwfpbc5jb20ilcjst0xfuyi6iljptevfqurnsu4suk9mrv9vu0vsiiwiawf0ijoxnje5nji2odq1lcjlehaioje2mtk2mza0ndv9.pl_io9pbx38yl2juzxb4uabzfix64n657neg7fhten3dguhtp_iguoze0pabmk55bnw9dftqbsbtdwjqfhhdkq",{"_index":1909,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["eyjhbgcioijiuzuxmij9.eyjzdwiioijhzg1pbkblbwfpbc5jb20ilcjst0xfuyi6iljptevfvvnfuiisimlhdci6mtyxotyynjg0nswizxhwijoxnje5njmwndq1fq.g9lo7n_qfylwn6qusijfo",{"_index":1905,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["f",{"_index":2160,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["f.length",{"_index":2169,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["fa",{"_index":2179,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["fall",{"_index":1665,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["fallos",{"_index":838,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["false",{"_index":391,"title":{},"body":{"components/AddActivityComponent.html":{},"guards/AuthGuardService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":507,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["fb",{"_index":829,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["feedaf",{"_index":1365,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["ffcdd2",{"_index":1374,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["ffd8b2",{"_index":1380,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["ficheros",{"_index":287,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["field",{"_index":1564,"title":{},"body":{"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["fieldset",{"_index":1184,"title":{},"body":{"components/EditUserComponent.html":{}}}],["fielset_edit_user",{"_index":1085,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{}}}],["filename",{"_index":37,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/EditActivitiesComponent.html":{},"injectables/MockActivityService.html":{}}}],["files",{"_index":207,"title":{},"body":{"components/AddActivityComponent.html":{},"index.html":{}}}],["fileupload",{"_index":495,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["fileuploadaddactivity",{"_index":494,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["fileuploadeditactivity",{"_index":988,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["fileuploadmodule",{"_index":646,"title":{},"body":{"modules/AppModule.html":{}}}],["filter_container",{"_index":2189,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["filterservice",{"_index":2077,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["filtros",{"_index":2080,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["flag",{"_index":2494,"title":{},"body":{"index.html":{}}}],["flex",{"_index":477,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["float",{"_index":2280,"title":{},"body":{"components/SignUpComponent.html":{}}}],["font",{"_index":506,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"dependencies.html":{}}}],["forkjoin",{"_index":900,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["forkjoin([this.activitiesservice.getrecommendedactivities(user[0].id)]).pipe",{"_index":2126,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["forkjoin([this.activityservice.getratedactivities(user[0].id)]).pipe",{"_index":1343,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["forkjoin([this.rolesservice.getroles",{"_index":1023,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["forkjoin([this.userservice.getuser(user[0].id)]).pipe",{"_index":1131,"title":{},"body":{"components/EditUserComponent.html":{}}}],["form",{"_index":983,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["form_add_activity_container",{"_index":475,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formaddactivity",{"_index":208,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formaddcity",{"_index":1410,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["formaddinterest",{"_index":1488,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["formarray",{"_index":1121,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["formbuilder",{"_index":216,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["formcontrol",{"_index":226,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["formcontrol(0",{"_index":2256,"title":{},"body":{"components/SignUpComponent.html":{}}}],["formcontrol(interest.nameinterest",{"_index":2255,"title":{},"body":{"components/SignUpComponent.html":{}}}],["formdata",{"_index":104,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/MockActivityService.html":{}}}],["formdata).subscribe",{"_index":962,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["formdata.append('address",{"_index":406,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formdata.append('city",{"_index":402,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formdata.append('description",{"_index":396,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formdata.append('image",{"_index":393,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formdata.append('interest",{"_index":404,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formdata.append('latitude",{"_index":398,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formdata.append('longitude",{"_index":400,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formdata.append('name",{"_index":394,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formdata.get('address",{"_index":1866,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["formdata.get('city",{"_index":1864,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["formdata.get('description",{"_index":1861,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["formdata.get('interest",{"_index":1865,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["formdata.get('latitude",{"_index":1862,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["formdata.get('longitude",{"_index":1863,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["formdata.get('name",{"_index":1860,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["formeditcity",{"_index":1411,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["formeditinterest",{"_index":1489,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["formgroup",{"_index":225,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["formsmodule",{"_index":614,"title":{},"body":{"modules/AppModule.html":{}}}],["formtoratingactivity",{"_index":2069,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["formulario",{"_index":254,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/functions.html":{}}}],["fortawesome/fontawesome",{"_index":2421,"title":{},"body":{"dependencies.html":{}}}],["frame",{"_index":1706,"title":{},"body":{"components/MapComponent.html":{}}}],["free",{"_index":2422,"title":{},"body":{"dependencies.html":{}}}],["fue",{"_index":1648,"title":{},"body":{"components/LoginComponent.html":{}}}],["full",{"_index":737,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["función",{"_index":2452,"title":{},"body":{"miscellaneous/functions.html":{}}}],["function",{"_index":365,"title":{},"body":{"components/AddActivityComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"coverage.html":{}}}],["function(results",{"_index":926,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["functions",{"_index":2446,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":2505,"title":{},"body":{"index.html":{}}}],["generate",{"_index":2485,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2470,"title":{},"body":{"index.html":{}}}],["geocoder",{"_index":325,"title":{},"body":{"components/AddActivityComponent.html":{},"dependencies.html":{}}}],["getactivities",{"_index":70,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["getactivity",{"_index":71,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["getactivity(id",{"_index":126,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["getcities",{"_index":795,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["getemailuser",{"_index":1596,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getimages",{"_index":1192,"title":{},"body":{"injectables/ImagesService.html":{}}}],["getimages(namephoto",{"_index":1194,"title":{},"body":{"injectables/ImagesService.html":{}}}],["getinterest",{"_index":1117,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["getinterestbyuser",{"_index":1279,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["getinterestbyuser(id",{"_index":1290,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["getinterests",{"_index":1280,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["getmessages",{"_index":1635,"title":{},"body":{"components/LoginComponent.html":{}}}],["getratedactivities",{"_index":72,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["getratedactivities(iduser",{"_index":128,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["getratedactivities(user",{"_index":1777,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["getrecommendedactivities",{"_index":73,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["getrecommendedactivities(iduser",{"_index":134,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["getroles",{"_index":1968,"title":{},"body":{"injectables/MockRolService.html":{},"injectables/RolService.html":{}}}],["getrolesuser",{"_index":1597,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getting",{"_index":2466,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":1598,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getuser",{"_index":1983,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["getuser(id",{"_index":1990,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["getuserforadmin",{"_index":1984,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["getuserforadmin(id",{"_index":1992,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["getusers",{"_index":1985,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["gidtd2a_uhhdhlvjhv6ldigga2gtw",{"_index":1908,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["gijón",{"_index":1792,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{}}}],["go",{"_index":2508,"title":{},"body":{"index.html":{}}}],["grandes",{"_index":1821,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["graph",{"_index":2516,"title":{},"body":{"modules.html":{}}}],["greenicon",{"_index":2130,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["greenicon}).addto(this.map).bindpopup(popupcontent",{"_index":2141,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["grid",{"_index":481,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["group",{"_index":1079,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["guard",{"_index":753,"title":{"guards/AuthGuardService.html":{},"guards/IsLogginInGuardService.html":{},"guards/RoleGuardService.html":{}},"body":{"coverage.html":{}}}],["guard.service",{"_index":727,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guard.service.ts",{"_index":756,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/IsLogginInGuardService.html":{},"guards/RoleGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:10",{"_index":2198,"title":{},"body":{"guards/RoleGuardService.html":{}}}],["guard.service.ts:12",{"_index":764,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/IsLogginInGuardService.html":{}}}],["guard.service.ts:14",{"_index":2199,"title":{},"body":{"guards/RoleGuardService.html":{}}}],["guard.service.ts:8",{"_index":759,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/IsLogginInGuardService.html":{}}}],["guard/auth",{"_index":726,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"coverage.html":{}}}],["guarda",{"_index":269,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["guards",{"_index":754,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/IsLogginInGuardService.html":{},"guards/RoleGuardService.html":{},"overview.html":{}}}],["guards/auth",{"_index":725,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/isloggininguard/is",{"_index":729,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/roleguard/role",{"_index":732,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guía",{"_index":1803,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["h1",{"_index":464,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationComponent.html":{},"components/SignUpComponent.html":{}}}],["ha",{"_index":315,"title":{},"body":{"components/AddActivityComponent.html":{},"components/ListInterestComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{}}}],["haber",{"_index":2167,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["hace",{"_index":2087,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["hacer",{"_index":86,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["han",{"_index":361,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["handleautherror",{"_index":1229,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["hay",{"_index":968,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/SignUpComponent.html":{}}}],["header",{"_index":1480,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["headers",{"_index":164,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":461,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["help",{"_index":2506,"title":{},"body":{"index.html":{}}}],["helvetica",{"_index":514,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["hidden",{"_index":500,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["hidedialogcity",{"_index":1414,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["hidedialogeditcity",{"_index":1415,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["hidedialogeditinterest",{"_index":1490,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["hidedialoginterest",{"_index":1491,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["horizontal",{"_index":1754,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["horizonte",{"_index":1811,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["hormigón",{"_index":1813,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["host",{"_index":1753,"title":{},"body":{"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["html",{"_index":522,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["http",{"_index":161,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":2479,"title":{},"body":{"index.html":{}}}],["http://localhost:8090/api/activity",{"_index":144,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["http://localhost:8090/api/auth",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockAuthService.html":{}}}],["http://localhost:8090/api/city",{"_index":806,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["http://localhost:8090/api/interest",{"_index":1296,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["http://localhost:8090/api/rol",{"_index":1974,"title":{},"body":{"injectables/MockRolService.html":{},"injectables/RolService.html":{}}}],["http://localhost:8090/api/user",{"_index":2007,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["http://localhost:8090/images",{"_index":1197,"title":{},"body":{"injectables/ImagesService.html":{}}}],["http_interceptors",{"_index":1240,"title":{},"body":{"interceptors/InterceptorService.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":77,"title":{},"body":{"injectables/ActivityService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":630,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1241,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["httphandler",{"_index":1237,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["httpheaders",{"_index":150,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["httpheaders({'content",{"_index":166,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptor",{"_index":1242,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["httprequest",{"_index":1235,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["httptranslateloader",{"_index":716,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httptranslateloader(http",{"_index":718,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["i.nameinterest",{"_index":387,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["i18n",{"_index":1718,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["ia",{"_index":952,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["icon",{"_index":328,"title":{},"body":{"components/AddActivityComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["iconsize",{"_index":2134,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["iconurl",{"_index":2132,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["id",{"_index":12,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"classes/Rol.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{}}}],["identifica",{"_index":1734,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["identificador",{"_index":117,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":2357,"title":{},"body":{"coverage.html":{}}}],["idioma",{"_index":1730,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["iduser",{"_index":132,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["ie8",{"_index":981,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["iglesia",{"_index":1796,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["iglesias",{"_index":1363,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockInterestService.html":{}}}],["igual",{"_index":2462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iguales",{"_index":874,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["image",{"_index":450,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["image/jpg",{"_index":1808,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["imagen",{"_index":284,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["imagesservice",{"_index":1189,"title":{"injectables/ImagesService.html":{}},"body":{"injectables/ImagesService.html":{},"coverage.html":{}}}],["imagesurl",{"_index":1191,"title":{},"body":{"injectables/ImagesService.html":{}}}],["img",{"_index":857,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["img_logo",{"_index":1688,"title":{},"body":{"components/LoginComponent.html":{}}}],["imgview",{"_index":2326,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["impide",{"_index":2227,"title":{},"body":{"components/SignUpComponent.html":{}}}],["implements",{"_index":198,"title":{},"body":{"components/AddActivityComponent.html":{},"guards/AuthGuardService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["import",{"_index":148,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":598,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["include",{"_index":455,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["incluir",{"_index":2027,"title":{},"body":{"injectables/NotificationService.html":{}}}],["incluye",{"_index":105,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":313,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{}}}],["info.authorities",{"_index":2052,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["info.nombreusuario",{"_index":2047,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["info.token",{"_index":2049,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["infointerest",{"_index":1136,"title":{},"body":{"components/EditUserComponent.html":{}}}],["infointerest.interestid",{"_index":1139,"title":{},"body":{"components/EditUserComponent.html":{}}}],["infointerest.nameinterest",{"_index":1140,"title":{},"body":{"components/EditUserComponent.html":{}}}],["infointerest.priority",{"_index":1142,"title":{},"body":{"components/EditUserComponent.html":{}}}],["infomessage",{"_index":209,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["información",{"_index":106,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["information",{"_index":538,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["informationactivities",{"_index":2307,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["informationactivitiescomponent",{"_index":537,"title":{"components/InformationActivitiesComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inherited",{"_index":49,"title":{},"body":{"classes/ActivityRecommended.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{}}}],["iniciado",{"_index":2053,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["inicializar",{"_index":294,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["iniciar",{"_index":1667,"title":{},"body":{"components/LoginComponent.html":{}}}],["inicio",{"_index":1663,"title":{},"body":{"components/LoginComponent.html":{},"components/MenuBarComponent.html":{}}}],["initmap",{"_index":1692,"title":{},"body":{"components/MapComponent.html":{}}}],["injectable",{"_index":60,"title":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/LocalStorageService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ActivityService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"injectables/LocalStorageService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":62,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/LocalStorageService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1584,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["input",{"_index":2286,"title":{},"body":{"components/SignUpComponent.html":{}}}],["input_container",{"_index":478,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["inputnumbermodule",{"_index":624,"title":{},"body":{"modules/AppModule.html":{}}}],["inputtextareamodule",{"_index":648,"title":{},"body":{"modules/AppModule.html":{}}}],["inputtextmodule",{"_index":612,"title":{},"body":{"modules/AppModule.html":{}}}],["intenta",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockAuthService.html":{}}}],["inter.id",{"_index":1960,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["intercept",{"_index":1230,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["intercept(req",{"_index":1234,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["interceptor",{"_index":1225,"title":{"interceptors/InterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptorprovider",{"_index":632,"title":{},"body":{"modules/AppModule.html":{},"interceptors/InterceptorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptors",{"_index":1227,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["interceptors/interceptor.service",{"_index":633,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptorservice",{"_index":1226,"title":{"interceptors/InterceptorService.html":{}},"body":{"interceptors/InterceptorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["intereses",{"_index":229,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockInterestService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["interest",{"_index":13,"title":{"classes/Interest.html":{},"classes/Interest-1.html":{}},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{}}}],["interest'},{'name",{"_index":545,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["interest).pipe",{"_index":1537,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component",{"_index":657,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["interest.component.html",{"_index":1484,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.scss",{"_index":1483,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts",{"_index":1482,"title":{},"body":{"components/ListInterestComponent.html":{},"coverage.html":{}}}],["interest.component.ts:101",{"_index":1510,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:105",{"_index":1509,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:129",{"_index":1505,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:134",{"_index":1496,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:144",{"_index":1498,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:175",{"_index":1503,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:183",{"_index":1508,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:204",{"_index":1497,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:208",{"_index":1504,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:24",{"_index":1517,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:28",{"_index":1511,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:32",{"_index":1515,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:36",{"_index":1513,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:40",{"_index":1512,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:44",{"_index":1516,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:48",{"_index":1493,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:79",{"_index":1507,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:93",{"_index":1506,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.id",{"_index":1302,"title":{},"body":{"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockInterestService.html":{}}}],["interest.nameinterest",{"_index":1530,"title":{},"body":{"components/ListInterestComponent.html":{},"injectables/MockInterestService.html":{}}}],["interest.service",{"_index":1952,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interest/list",{"_index":656,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ListInterestComponent.html":{},"coverage.html":{}}}],["interestarray",{"_index":2208,"title":{},"body":{"components/SignUpComponent.html":{}}}],["interestarray[i].nameinterest",{"_index":2278,"title":{},"body":{"components/SignUpComponent.html":{}}}],["interestbyuser",{"_index":1263,"title":{"classes/InterestByUser.html":{}},"body":{"classes/Interest.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"coverage.html":{}}}],["interestid",{"_index":1138,"title":{},"body":{"components/EditUserComponent.html":{},"classes/Interest.html":{},"classes/InterestByUser.html":{},"injectables/MockUserService.html":{}}}],["interestlist",{"_index":1939,"title":{},"body":{"injectables/MockInterestService.html":{},"components/RecommendationComponent.html":{}}}],["interests",{"_index":1171,"title":{},"body":{"components/EditUserComponent.html":{},"components/MenuBarComponent.html":{}}}],["interestservice",{"_index":218,"title":{"injectables/InterestService.html":{}},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockInterestService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["interestservice:24",{"_index":1950,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interestservice:36",{"_index":1948,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interestservice:45",{"_index":1944,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interestservice:54",{"_index":1945,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interestservice:63",{"_index":1947,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interestservice:73",{"_index":1946,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interesttoadd",{"_index":1954,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interesttoedit",{"_index":1962,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interesturl",{"_index":1275,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["internacionalización",{"_index":238,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["interés",{"_index":385,"title":{},"body":{"components/AddActivityComponent.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"miscellaneous/functions.html":{}}}],["introducidos",{"_index":252,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["iscontinuefail",{"_index":2209,"title":{},"body":{"components/SignUpComponent.html":{}}}],["isequivalent",{"_index":822,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["isequivalent(a",{"_index":866,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["isloggininguardservice",{"_index":728,"title":{"guards/IsLogginInGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/IsLogginInGuardService.html":{},"coverage.html":{}}}],["islogin",{"_index":1714,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["isloginfail",{"_index":1633,"title":{},"body":{"components/LoginComponent.html":{}}}],["isregisterfail",{"_index":2210,"title":{},"body":{"components/SignUpComponent.html":{}}}],["item",{"_index":1359,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["item.label",{"_index":1354,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["item.value.nameinterest",{"_index":1172,"title":{},"body":{"components/EditUserComponent.html":{}}}],["items",{"_index":1360,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["jos",{"_index":1798,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["jquery",{"_index":2431,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":871,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/InterestService.html":{}}}],["json.stringify(array2sort[index",{"_index":1166,"title":{},"body":{"components/EditUserComponent.html":{}}}],["json.stringify(value",{"_index":1165,"title":{},"body":{"components/EditUserComponent.html":{}}}],["justify",{"_index":1081,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/MenuBarComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["jwt",{"_index":1615,"title":{},"body":{"injectables/LocalStorageService.html":{},"dependencies.html":{}}}],["jwt_decode",{"_index":1614,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["jwt_decode(token",{"_index":1629,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["jwtmodel",{"_index":155,"title":{"classes/JwtModel.html":{}},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"classes/JwtModel.html":{},"injectables/MockAuthService.html":{},"coverage.html":{}}}],["karma",{"_index":2502,"title":{},"body":{"index.html":{}}}],["key",{"_index":436,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{}}}],["keydetail",{"_index":1159,"title":{},"body":{"components/EditUserComponent.html":{}}}],["keysummary",{"_index":1157,"title":{},"body":{"components/EditUserComponent.html":{}}}],["keytranslate",{"_index":441,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["l",{"_index":322,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["l.control.geocoder(opciones).on('markgeocode",{"_index":364,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["l.icon",{"_index":2131,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["l.map('map",{"_index":1698,"title":{},"body":{"components/MapComponent.html":{}}}],["l.map('mapactivity').setview([43.333333",{"_index":348,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["l.map('mapactivityedit').setview([response2.latitude",{"_index":919,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["l.map('mapactivityrecommendation",{"_index":2119,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["l.marker([activity.latitude",{"_index":2139,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["l.tilelayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":352,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["la",{"_index":80,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["label",{"_index":1034,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/SignUpComponent.html":{}}}],["laboral",{"_index":1790,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["lang",{"_index":1731,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["langchangeevent",{"_index":1122,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["language",{"_index":1747,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["las",{"_index":159,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockInterestService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["latitud",{"_index":367,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["latitude",{"_index":14,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{}}}],["le",{"_index":1723,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["leaflet",{"_index":323,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{},"dependencies.html":{}}}],["leaflet/dist/images/marker",{"_index":326,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["left",{"_index":472,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/SignUpComponent.html":{}}}],["left_container",{"_index":976,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["legacy",{"_index":752,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["legend",{"_index":521,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"overview.html":{}}}],["legend_fieldset",{"_index":1087,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["letter",{"_index":1392,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["librería",{"_index":234,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["light",{"_index":1757,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["link",{"_index":1763,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["link.active",{"_index":1761,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["link:hover",{"_index":1759,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["list",{"_index":178,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["list/user",{"_index":1303,"title":{},"body":{"injectables/InterestService.html":{}}}],["list_activities",{"_index":2325,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["list_user",{"_index":1578,"title":{},"body":{"components/ListUserComponent.html":{}}}],["lista",{"_index":124,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["listactivities",{"_index":1316,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{}}}],["listactivitiesevaluatecomponent",{"_index":539,"title":{"components/ListActivitiesEvaluateComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listactivitiesrated",{"_index":1770,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["listbox",{"_index":1008,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["listboxmodule",{"_index":711,"title":{},"body":{"modules/AppModule.html":{}}}],["listcities",{"_index":1912,"title":{},"body":{"injectables/MockCityService.html":{}}}],["listcitiescomponent",{"_index":542,"title":{"components/ListCitiesComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listinterestcomponent",{"_index":544,"title":{"components/ListInterestComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listrecommendedactivities",{"_index":1771,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["listuser",{"_index":1006,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["listusercomponent",{"_index":546,"title":{"components/ListUserComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listusers",{"_index":1980,"title":{},"body":{"injectables/MockUserService.html":{}}}],["literal",{"_index":32,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{}}}],["llamaba",{"_index":1872,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["lo",{"_index":255,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["loadactivities",{"_index":2291,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["loadcities",{"_index":1416,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["loader",{"_index":681,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["loadinterest",{"_index":213,"title":{},"body":{"components/AddActivityComponent.html":{},"components/ListInterestComponent.html":{},"components/SignUpComponent.html":{}}}],["locale_id",{"_index":603,"title":{},"body":{"modules/AppModule.html":{}}}],["localidad",{"_index":799,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["localidades",{"_index":228,"title":{},"body":{"components/AddActivityComponent.html":{},"injectables/CityService.html":{},"injectables/MockCityService.html":{},"components/RecommendationMapComponent.html":{}}}],["localstorage",{"_index":1108,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"miscellaneous/variables.html":{}}}],["localstorage.getitem(token_key",{"_index":1622,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":758,"title":{"injectables/LocalStorageService.html":{}},"body":{"guards/AuthGuardService.html":{},"components/EditUserComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{},"coverage.html":{}}}],["log_out",{"_index":1751,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["loggin",{"_index":730,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/IsLogginInGuardService.html":{},"coverage.html":{}}}],["login",{"_index":735,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MockAuthService.html":{},"components/SignUpComponent.html":{}}}],["login'},{'name",{"_index":548,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["login(user",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockAuthService.html":{}}}],["login.component.html",{"_index":1632,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1631,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":607,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":547,"title":{"components/LoginComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1634,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":1599,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/MenuBarComponent.html":{}}}],["longitud",{"_index":370,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["longitude",{"_index":15,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{}}}],["los",{"_index":243,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["luis",{"_index":1799,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["lvarez",{"_index":1800,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["map",{"_index":347,"title":{},"body":{"components/AddActivityComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["map'},{'name",{"_index":550,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["map(data",{"_index":1452,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["map.component",{"_index":708,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["map.component.html",{"_index":1691,"title":{},"body":{"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["map.component.scss",{"_index":1690,"title":{},"body":{"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["map.component.ts",{"_index":2064,"title":{},"body":{"components/RecommendationMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:101",{"_index":2093,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:162",{"_index":2083,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:194",{"_index":2096,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:206",{"_index":2104,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:233",{"_index":2102,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:252",{"_index":2100,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:31",{"_index":2109,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:35",{"_index":2110,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:39",{"_index":2115,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:43",{"_index":2116,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:47",{"_index":2113,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:51",{"_index":2114,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:55",{"_index":2112,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:59",{"_index":2078,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map/map.component",{"_index":634,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["map/recommendation",{"_index":707,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RecommendationMapComponent.html":{},"coverage.html":{}}}],["map_container",{"_index":479,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["map_recommendation",{"_index":2177,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["mapa",{"_index":297,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["mapactivity",{"_index":490,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["mapactivityedit",{"_index":986,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["mapactivityrecommendation",{"_index":2185,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["mapcomponent",{"_index":549,"title":{"components/MapComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["marcador",{"_index":881,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["marcadores",{"_index":2086,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["margaride",{"_index":1801,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["margin",{"_index":471,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["marker",{"_index":2138,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["markerlist",{"_index":2070,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["marqués",{"_index":1844,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["match",{"_index":1583,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["matching",{"_index":45,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["maux",{"_index":412,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["maux.detail",{"_index":415,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["maux.summary",{"_index":413,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["max",{"_index":978,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{}}}],["maxwidth",{"_index":2142,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["maxzoom",{"_index":1700,"title":{},"body":{"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["mayor",{"_index":2456,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mensaje",{"_index":265,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["mensajes",{"_index":244,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["menu",{"_index":552,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["menubarcomponent",{"_index":551,"title":{"components/MenuBarComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menubarmodule",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["mergemap",{"_index":1119,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["mergemap(message",{"_index":1473,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["message",{"_index":411,"title":{},"body":{"components/AddActivityComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["message_error",{"_index":1094,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["message_error_age",{"_index":1182,"title":{},"body":{"components/EditUserComponent.html":{}}}],["message_error_sign_container",{"_index":2285,"title":{},"body":{"components/SignUpComponent.html":{}}}],["message_error_username",{"_index":1183,"title":{},"body":{"components/EditUserComponent.html":{}}}],["message_file_required",{"_index":451,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["message_info_map",{"_index":452,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["message_rate_activity",{"_index":2174,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["message_valuation_container",{"_index":2288,"title":{},"body":{"components/SignUpComponent.html":{}}}],["message_valuation_one",{"_index":2276,"title":{},"body":{"components/SignUpComponent.html":{}}}],["message_valuation_two",{"_index":2277,"title":{},"body":{"components/SignUpComponent.html":{}}}],["messagemodule",{"_index":628,"title":{},"body":{"modules/AppModule.html":{}}}],["messagerateactivity",{"_index":2186,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["messages",{"_index":470,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["messageservice",{"_index":221,"title":{},"body":{"components/AddActivityComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["messagesmodule",{"_index":684,"title":{},"body":{"modules/AppModule.html":{}}}],["metadata",{"_index":200,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["metadataimage",{"_index":16,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/MockActivityService.html":{}}}],["methods",{"_index":65,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["mime",{"_index":946,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["mimestring",{"_index":947,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["mimetype",{"_index":38,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/MockActivityService.html":{}}}],["min",{"_index":460,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["minpasslength",{"_index":2237,"title":{},"body":{"components/SignUpComponent.html":{}}}],["miscellaneous",{"_index":2445,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["misma",{"_index":92,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["mock.ts",{"_index":1769,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"coverage.html":{}}}],["mock.ts:10",{"_index":1836,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockRolService.html":{}}}],["mock.ts:106",{"_index":1775,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:11",{"_index":1949,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["mock.ts:110",{"_index":1773,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:117",{"_index":1772,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:140",{"_index":1778,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:144",{"_index":1779,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:148",{"_index":1774,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:16",{"_index":1898,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["mock.ts:175",{"_index":1776,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:180",{"_index":1780,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:20",{"_index":1916,"title":{},"body":{"injectables/MockCityService.html":{}}}],["mock.ts:21",{"_index":1969,"title":{},"body":{"injectables/MockRolService.html":{}}}],["mock.ts:22",{"_index":1943,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["mock.ts:24",{"_index":1913,"title":{},"body":{"injectables/MockCityService.html":{}}}],["mock.ts:26",{"_index":1940,"title":{},"body":{"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{}}}],["mock.ts:35",{"_index":1914,"title":{},"body":{"injectables/MockCityService.html":{}}}],["mock.ts:37",{"_index":1941,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["mock.ts:42",{"_index":1915,"title":{},"body":{"injectables/MockCityService.html":{}}}],["mock.ts:44",{"_index":1942,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["mock.ts:46",{"_index":1846,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:47",{"_index":1994,"title":{},"body":{"injectables/MockUserService.html":{}}}],["mock.ts:51",{"_index":1987,"title":{},"body":{"injectables/MockUserService.html":{}}}],["mock.ts:58",{"_index":1991,"title":{},"body":{"injectables/MockUserService.html":{}}}],["mock.ts:62",{"_index":1989,"title":{},"body":{"injectables/MockUserService.html":{}}}],["mock.ts:67",{"_index":1849,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:72",{"_index":1993,"title":{},"body":{"injectables/MockUserService.html":{}}}],["mock.ts:9",{"_index":1922,"title":{},"body":{"injectables/MockCityService.html":{},"injectables/MockUserService.html":{}}}],["mockactivityservice",{"_index":1766,"title":{"injectables/MockActivityService.html":{}},"body":{"injectables/MockActivityService.html":{},"coverage.html":{}}}],["mockauthservice",{"_index":1896,"title":{"injectables/MockAuthService.html":{}},"body":{"injectables/MockAuthService.html":{},"coverage.html":{}}}],["mockcityservice",{"_index":1910,"title":{"injectables/MockCityService.html":{}},"body":{"injectables/MockCityService.html":{},"coverage.html":{}}}],["mockinterestservice",{"_index":1937,"title":{"injectables/MockInterestService.html":{}},"body":{"injectables/MockInterestService.html":{},"coverage.html":{}}}],["mockrolservice",{"_index":1965,"title":{"injectables/MockRolService.html":{}},"body":{"injectables/MockRolService.html":{},"coverage.html":{}}}],["mockuserservice",{"_index":1978,"title":{"injectables/MockUserService.html":{}},"body":{"injectables/MockUserService.html":{},"coverage.html":{}}}],["models/activity",{"_index":157,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{}}}],["models/city",{"_index":807,"title":{},"body":{"injectables/CityService.html":{},"components/ListCitiesComponent.html":{}}}],["models/interest",{"_index":1297,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{},"components/RecommendationComponent.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["models/jwt_model",{"_index":156,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/MockAuthService.html":{}}}],["models/rol",{"_index":1014,"title":{},"body":{"components/EditUserAdminComponent.html":{},"injectables/MockRolService.html":{},"injectables/RolService.html":{}}}],["models/user",{"_index":153,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditUserAdminComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockAuthService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/UserService.html":{}}}],["modifica",{"_index":2084,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["modificada",{"_index":1891,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["modificado",{"_index":2019,"title":{},"body":{"injectables/MockUserService.html":{}}}],["modificar",{"_index":121,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/UserService.html":{}}}],["module",{"_index":579,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":581,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":2507,"title":{},"body":{"index.html":{}}}],["mostradas",{"_index":2030,"title":{},"body":{"injectables/NotificationService.html":{}}}],["mostrados",{"_index":246,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["mostrar",{"_index":264,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["muestra",{"_index":303,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["muestran",{"_index":2111,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["muestre",{"_index":1052,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["multi",{"_index":1259,"title":{},"body":{"interceptors/InterceptorService.html":{},"miscellaneous/variables.html":{}}}],["multiselect",{"_index":2187,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["multiselectmodule",{"_index":709,"title":{},"body":{"modules/AppModule.html":{}}}],["museos",{"_index":1367,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockInterestService.html":{}}}],["método",{"_index":95,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["métodos",{"_index":1106,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["métódo",{"_index":1643,"title":{},"body":{"components/LoginComponent.html":{}}}],["name",{"_index":17,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name_activity",{"_index":448,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["name_city",{"_index":1477,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["name_city_repetead",{"_index":1479,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["name_city_required",{"_index":1478,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["name_interest",{"_index":1542,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["name_interest_repetead",{"_index":1544,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["name_interest_required",{"_index":1543,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["name_required",{"_index":1073,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["nameactivity",{"_index":420,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["namecity",{"_index":1454,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["nameinterest",{"_index":345,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"components/ListInterestComponent.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["namephoto",{"_index":1196,"title":{},"body":{"injectables/ImagesService.html":{}}}],["nameuser",{"_index":1048,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["nav",{"_index":1758,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["navbar",{"_index":1756,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["navegación",{"_index":230,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["navegador",{"_index":1109,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["navigate",{"_index":2478,"title":{},"body":{"index.html":{}}}],["necesito",{"_index":2247,"title":{},"body":{"components/SignUpComponent.html":{}}}],["new",{"_index":165,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/MockUserService.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newitem",{"_index":1137,"title":{},"body":{"components/EditUserComponent.html":{}}}],["next",{"_index":1236,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["next.handle(autreq",{"_index":1255,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["next.handle(autreq).pipe",{"_index":1249,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["ng",{"_index":467,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":604,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":1636,"title":{},"body":{"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["ngoninit",{"_index":214,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["ngx",{"_index":235,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/NotificationService.html":{},"components/TableActivitiesComponent.html":{},"dependencies.html":{}}}],["nofiles",{"_index":210,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["nombre",{"_index":444,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationComponent.html":{}}}],["nombreusuario",{"_index":2044,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["note",{"_index":2165,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["notificaciones",{"_index":1641,"title":{},"body":{"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SignUpComponent.html":{}}}],["notificación",{"_index":1644,"title":{},"body":{"components/LoginComponent.html":{},"injectables/NotificationService.html":{}}}],["notification",{"_index":1639,"title":{},"body":{"components/LoginComponent.html":{}}}],["notificationservice",{"_index":593,"title":{"injectables/NotificationService.html":{}},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nowrap",{"_index":504,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["nueva",{"_index":102,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/CityService.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/NotificationService.html":{}}}],["nuevas",{"_index":2107,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["nuevo",{"_index":1284,"title":{},"body":{"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/MockInterestService.html":{}}}],["null",{"_index":300,"title":{},"body":{"components/AddActivityComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/LocalStorageService.html":{}}}],["number",{"_index":27,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"classes/City.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationComponent.html":{},"classes/Rol.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["numberrecommendations",{"_index":2036,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["o",{"_index":316,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["object",{"_index":2004,"title":{},"body":{"injectables/MockUserService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(a",{"_index":958,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["object.keys(b",{"_index":960,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["objeto",{"_index":83,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["objetos",{"_index":224,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["obra",{"_index":1820,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["observable",{"_index":108,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["observechanges",{"_index":823,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["observer",{"_index":1871,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["obtener",{"_index":90,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/RolService.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["obtiene",{"_index":292,"title":{},"body":{"components/AddActivityComponent.html":{},"components/ListInterestComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["of(activity",{"_index":1893,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["of(err",{"_index":1253,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["of(this.interestlist",{"_index":1953,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["of(this.listactivities",{"_index":1852,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["of(this.listactivitiesrated",{"_index":1869,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["of(this.listcities",{"_index":1926,"title":{},"body":{"injectables/MockCityService.html":{}}}],["of(this.listrecommendedactivities",{"_index":1870,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["of(this.listusers",{"_index":2010,"title":{},"body":{"injectables/MockUserService.html":{}}}],["of(this.roles",{"_index":1977,"title":{},"body":{"injectables/MockRolService.html":{}}}],["of(this.user",{"_index":2014,"title":{},"body":{"injectables/MockUserService.html":{}}}],["offset",{"_index":1037,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["oneditsubmit",{"_index":1417,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["oninit",{"_index":199,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["onsortchange",{"_index":1320,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["onsortchange(event",{"_index":1325,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["onsubmit",{"_index":1418,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["opciones",{"_index":308,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{}}}],["opción",{"_index":1328,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["opennew",{"_index":2292,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["openpanel",{"_index":1419,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["openpanel($event",{"_index":1433,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["openpaneltorating",{"_index":2073,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["openpaneltorating(activity",{"_index":2095,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["opensecondform",{"_index":2211,"title":{},"body":{"components/SignUpComponent.html":{}}}],["openstreetmap",{"_index":355,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["optional",{"_index":18,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["orden",{"_index":1336,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["ordena",{"_index":1327,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["ordenar",{"_index":1324,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["orderlistmodule",{"_index":654,"title":{},"body":{"modules/AppModule.html":{}}}],["out",{"_index":596,"title":{},"body":{"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":499,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["overview",{"_index":2509,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["oviedo",{"_index":1921,"title":{},"body":{"injectables/MockCityService.html":{}}}],["p",{"_index":469,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["p.email",{"_index":1129,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["p.id",{"_index":1854,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{}}}],["package",{"_index":2414,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":485,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["page",{"_index":2512,"title":{},"body":{"index.html":{}}}],["panel",{"_index":457,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["para",{"_index":100,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":174,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":82,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parque",{"_index":1832,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["parques",{"_index":1379,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["parte",{"_index":2226,"title":{},"body":{"components/SignUpComponent.html":{}}}],["partir",{"_index":250,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["pasar",{"_index":1207,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["password",{"_index":1269,"title":{},"body":{"classes/Interest-1.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{},"miscellaneous/functions.html":{}}}],["passwordconfirm",{"_index":1270,"title":{},"body":{"classes/Interest-1.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["passwordmodule",{"_index":618,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":733,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathimage",{"_index":19,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/MockActivityService.html":{}}}],["pathmatch",{"_index":736,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pelayo",{"_index":1839,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["pelayo.jpg",{"_index":1842,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["permite",{"_index":85,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["personal_info",{"_index":1072,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["personalizados",{"_index":2081,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["peticiones",{"_index":87,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["petición",{"_index":98,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["photoimg",{"_index":2136,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["photourl",{"_index":1321,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["photourl(activity",{"_index":1329,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["placeholder",{"_index":357,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["playas",{"_index":1370,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockUserService.html":{}}}],["plaza",{"_index":1843,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["podría",{"_index":2241,"title":{},"body":{"components/SignUpComponent.html":{}}}],["popperjs/core",{"_index":2426,"title":{},"body":{"dependencies.html":{}}}],["popupcontent",{"_index":2137,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["por",{"_index":112,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["posibles",{"_index":1338,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["position",{"_index":1703,"title":{},"body":{"components/MapComponent.html":{}}}],["post",{"_index":99,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{}}}],["postrateactivity",{"_index":74,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["postrateactivity(activityrate",{"_index":138,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["preferencias",{"_index":1686,"title":{},"body":{"components/LoginComponent.html":{}}}],["prevenir",{"_index":837,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["preview",{"_index":971,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["primeflex",{"_index":2436,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":2438,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":241,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{},"dependencies.html":{}}}],["primeng/api",{"_index":321,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["primeng/button",{"_index":609,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/calendar",{"_index":695,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/card",{"_index":666,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/checkbox",{"_index":683,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/chip",{"_index":704,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/confirmdialog",{"_index":640,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/dataview",{"_index":700,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/dialog",{"_index":645,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/dropdown",{"_index":627,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/dynamicdialog",{"_index":670,"title":{},"body":{"modules/AppModule.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["primeng/fileupload",{"_index":647,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/inputnumber",{"_index":625,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/inputtext",{"_index":613,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/inputtextarea",{"_index":649,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/listbox",{"_index":712,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/menubar",{"_index":623,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/message",{"_index":629,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/messages",{"_index":685,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/multiselect",{"_index":710,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/orderlist",{"_index":655,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/password",{"_index":619,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/radiobutton",{"_index":693,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/rating",{"_index":702,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/scrollpanel",{"_index":691,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/steps",{"_index":668,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/table",{"_index":638,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/tabmenu",{"_index":664,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/tabview",{"_index":662,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/tag",{"_index":706,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/toast",{"_index":675,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/toolbar",{"_index":643,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/tooltip",{"_index":672,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/virtualscroller",{"_index":653,"title":{},"body":{"modules/AppModule.html":{}}}],["primengconfig",{"_index":570,"title":{},"body":{"components/AppComponent.html":{},"components/MenuBarComponent.html":{}}}],["primer",{"_index":877,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["primera",{"_index":2225,"title":{},"body":{"components/SignUpComponent.html":{}}}],["priority",{"_index":1141,"title":{},"body":{"components/EditUserComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/MockUserService.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["private",{"_index":341,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["privilegios",{"_index":2051,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["processmessagetranslation",{"_index":1637,"title":{},"body":{"components/LoginComponent.html":{}}}],["processmessagetranslation(messages",{"_index":1657,"title":{},"body":{"components/LoginComponent.html":{}}}],["prod",{"_index":2493,"title":{},"body":{"index.html":{}}}],["produce",{"_index":275,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["producido",{"_index":1514,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["production",{"_index":2495,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":1181,"title":{},"body":{"components/EditUserComponent.html":{}}}],["profile/edit",{"_index":747,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project",{"_index":2469,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{}}}],["propname",{"_index":1061,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["propocionado",{"_index":240,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["proporciona",{"_index":830,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/MenuBarComponent.html":{}}}],["proporcionada",{"_index":1719,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["proporcionado",{"_index":233,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["proporciones",{"_index":1822,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["protractor",{"_index":2504,"title":{},"body":{"index.html":{}}}],["provide",{"_index":714,"title":{},"body":{"modules/AppModule.html":{},"interceptors/InterceptorService.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":168,"title":{},"body":{"injectables/ActivityService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"injectables/LocalStorageService.html":{},"injectables/NotificationService.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":585,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["proyectoturismofront",{"_index":2468,"title":{},"body":{"index.html":{}}}],["prueba",{"_index":2006,"title":{},"body":{"injectables/MockUserService.html":{}}}],["public",{"_index":66,"title":{},"body":{"injectables/ActivityService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"injectables/LocalStorageService.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["pueda",{"_index":2098,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["puede",{"_index":2166,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["puntuaciones",{"_index":1292,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["puntuación",{"_index":2463,"title":{},"body":{"miscellaneous/functions.html":{}}}],["put",{"_index":120,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["página",{"_index":1725,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["páginas",{"_index":1740,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["que",{"_index":84,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["question_container",{"_index":2062,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["question_number_recommendation",{"_index":2055,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["question_recommendations_container",{"_index":2060,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["question_type_activities_recommendation",{"_index":2056,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["quiere",{"_index":802,"title":{},"body":{"injectables/CityService.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["radiobuttonmodule",{"_index":692,"title":{},"body":{"modules/AppModule.html":{}}}],["radius",{"_index":1383,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/MenuBarComponent.html":{}}}],["rate",{"_index":185,"title":{},"body":{"injectables/ActivityService.html":{},"components/RecommendationMapComponent.html":{}}}],["rateactivity",{"_index":2152,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["ratedactivities",{"_index":187,"title":{},"body":{"injectables/ActivityService.html":{}}}],["rating",{"_index":2118,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["rating_down",{"_index":1341,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["rating_up",{"_index":1342,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["ratingmodule",{"_index":701,"title":{},"body":{"modules/AppModule.html":{}}}],["reactiveformsmodule",{"_index":615,"title":{},"body":{"modules/AppModule.html":{}}}],["realiza",{"_index":96,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["realizada",{"_index":1814,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["realizar",{"_index":172,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["recomendaciones",{"_index":2108,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["recomendada",{"_index":2105,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["recomendadas",{"_index":136,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{}}}],["recommedation",{"_index":186,"title":{},"body":{"injectables/ActivityService.html":{}}}],["recommendation",{"_index":557,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["recommendation'},{'name",{"_index":555,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["recommendation.component.html",{"_index":2035,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["recommendation.component.scss",{"_index":2034,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["recommendation/recommendation.component",{"_index":631,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["recommendationcomponent",{"_index":554,"title":{"components/RecommendationComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recommendationmap",{"_index":748,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["recommendationmapcomponent",{"_index":556,"title":{"components/RecommendationMapComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["redirectto",{"_index":734,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirige",{"_index":1554,"title":{},"body":{"components/ListUserComponent.html":{},"components/MenuBarComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["redirigido",{"_index":1649,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirigir",{"_index":262,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["ref",{"_index":1204,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["reference",{"_index":2511,"title":{},"body":{"index.html":{}}}],["registra",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockAuthService.html":{}}}],["registrados",{"_index":1562,"title":{},"body":{"components/ListUserComponent.html":{},"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["registrar",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockAuthService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["registro",{"_index":2229,"title":{},"body":{"components/SignUpComponent.html":{}}}],["regresar",{"_index":2221,"title":{},"body":{"components/SignUpComponent.html":{}}}],["relacionadas",{"_index":173,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["relativelinkresolution",{"_index":751,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reload",{"_index":2481,"title":{},"body":{"index.html":{}}}],["removecity",{"_index":1420,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["removecity(city",{"_index":1435,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["removemarkerfrommap",{"_index":2074,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["removemarkerfrommap(activity",{"_index":2101,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["repeat_password",{"_index":2275,"title":{},"body":{"components/SignUpComponent.html":{}}}],["repeatpassword",{"_index":2240,"title":{},"body":{"components/SignUpComponent.html":{},"miscellaneous/functions.html":{}}}],["representan",{"_index":1557,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["req",{"_index":1239,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["req.clone",{"_index":1246,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["req.headers.set('authorization",{"_index":1247,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["reset",{"_index":595,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolve",{"_index":738,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/IsLogginInGuardService.html":{}}}],["respft5vvaflghktofmvphx20nl7b1",{"_index":1906,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["response.filter(user",{"_index":1568,"title":{},"body":{"components/ListUserComponent.html":{}}}],["response1",{"_index":1133,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["response1.foreach",{"_index":909,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["response2",{"_index":908,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["response2.address",{"_index":918,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["response2.city",{"_index":916,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["response2.description",{"_index":913,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["response2.interest",{"_index":917,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["response2.latitude",{"_index":914,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["response2.longitude",{"_index":915,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["response2.name",{"_index":912,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["respuestas",{"_index":160,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["restuser.email",{"_index":1573,"title":{},"body":{"components/ListUserComponent.html":{}}}],["result",{"_index":44,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resultado",{"_index":927,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["resultados",{"_index":91,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["results",{"_index":46,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results[0",{"_index":928,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["results[1",{"_index":1027,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["return",{"_index":176,"title":{},"body":{"injectables/ActivityService.html":{},"modules/AppModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["returnfirstpartform",{"_index":2213,"title":{},"body":{"components/SignUpComponent.html":{}}}],["returns",{"_index":107,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rgb(255",{"_index":2181,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["rgba(0",{"_index":1399,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["rgba(0,0,0",{"_index":1764,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["right",{"_index":474,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["right_container",{"_index":977,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["roboto",{"_index":513,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["rol",{"_index":1009,"title":{"classes/Rol.html":{}},"body":{"components/EditUserAdminComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockRolService.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"coverage.html":{}}}],["rol.service",{"_index":1976,"title":{},"body":{"injectables/MockRolService.html":{}}}],["role",{"_index":1565,"title":{},"body":{"components/ListUserComponent.html":{}}}],["role_admin",{"_index":1972,"title":{},"body":{"injectables/MockRolService.html":{},"injectables/MockUserService.html":{}}}],["role_user",{"_index":1973,"title":{},"body":{"injectables/MockRolService.html":{},"injectables/MockUserService.html":{}}}],["roleguardservice",{"_index":731,"title":{"guards/RoleGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/RoleGuardService.html":{},"coverage.html":{}}}],["rolelist",{"_index":993,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["roles",{"_index":994,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"classes/Interest-1.html":{},"guards/IsLogginInGuardService.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["roles.includes(\"role_admin",{"_index":1307,"title":{},"body":{"guards/IsLogginInGuardService.html":{},"guards/RoleGuardService.html":{}}}],["rolesservice",{"_index":998,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["rolname",{"_index":1971,"title":{},"body":{"injectables/MockRolService.html":{},"classes/Rol.html":{}}}],["rolservice",{"_index":999,"title":{"injectables/RolService.html":{}},"body":{"components/EditUserAdminComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockRolService.html":{},"injectables/RolService.html":{},"coverage.html":{}}}],["rolservice:25",{"_index":1975,"title":{},"body":{"injectables/MockRolService.html":{}}}],["rolservice:37",{"_index":1970,"title":{},"body":{"injectables/MockRolService.html":{}}}],["rolurl",{"_index":1967,"title":{},"body":{"injectables/MockRolService.html":{},"injectables/RolService.html":{}}}],["root",{"_index":169,"title":{},"body":{"injectables/ActivityService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"injectables/LocalStorageService.html":{},"injectables/NotificationService.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":528,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["route",{"_index":765,"title":{},"body":{"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"guards/RoleGuardService.html":{}}}],["route.data.expectedrol",{"_index":2200,"title":{},"body":{"guards/RoleGuardService.html":{}}}],["router",{"_index":219,"title":{},"body":{"components/AddActivityComponent.html":{},"guards/AuthGuardService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["routermodule",{"_index":723,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":750,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":763,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/RoleGuardService.html":{}}}],["routes",{"_index":722,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":605,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":721,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":496,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["run",{"_index":2475,"title":{},"body":{"index.html":{}}}],["running",{"_index":2496,"title":{},"body":{"index.html":{}}}],["rural",{"_index":1805,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["ruta",{"_index":833,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["rxjs",{"_index":154,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1120,"title":{},"body":{"components/EditUserComponent.html":{},"interceptors/InterceptorService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["s",{"_index":2246,"title":{},"body":{"components/SignUpComponent.html":{}}}],["sanea",{"_index":1331,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["saneada",{"_index":895,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{}}}],["saneando",{"_index":844,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["sanear",{"_index":883,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["sanitizer",{"_index":826,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["sans",{"_index":516,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["santa",{"_index":1827,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["scaffolding",{"_index":2484,"title":{},"body":{"index.html":{}}}],["score",{"_index":42,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{}}}],["scripting",{"_index":842,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["scrollpanelmodule",{"_index":690,"title":{},"body":{"modules/AppModule.html":{}}}],["se",{"_index":170,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["sea",{"_index":2455,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sean",{"_index":846,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{},"miscellaneous/functions.html":{}}}],["second",{"_index":2283,"title":{},"body":{"components/SignUpComponent.html":{}}}],["seemoreinfo",{"_index":2293,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["seemoreinfo(activity",{"_index":2305,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["segoe",{"_index":511,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["segundo",{"_index":879,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["seguridad",{"_index":839,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["seguros",{"_index":847,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["según",{"_index":1655,"title":{},"body":{"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["selecciona",{"_index":384,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["seleccionada",{"_index":889,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{}}}],["seleccionado",{"_index":272,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["selección",{"_index":286,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["selecteditem.label",{"_index":1355,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["selectitem",{"_index":304,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{}}}],["selector",{"_index":201,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["sendform",{"_index":996,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["sendratingactivity",{"_index":2075,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["separate",{"_index":945,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["ser",{"_index":260,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["serena",{"_index":337,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["serif",{"_index":517,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["serve",{"_index":2476,"title":{},"body":{"index.html":{}}}],["server",{"_index":2474,"title":{},"body":{"index.html":{}}}],["service",{"_index":1768,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"coverage.html":{}}}],["services/activity/activity.service",{"_index":330,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["services/auth/auth.service",{"_index":1669,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["services/city/city.service",{"_index":319,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["services/interest/interest.service",{"_index":320,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["services/local",{"_index":766,"title":{},"body":{"guards/AuthGuardService.html":{},"components/EditUserComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{}}}],["services/message/notification.service",{"_index":686,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["services/rol/rol.service",{"_index":1016,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/ListUserComponent.html":{}}}],["services/user/user.service",{"_index":1015,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["servicio",{"_index":227,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["serán",{"_index":245,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/TableActivitiesComponent.html":{}}}],["sesión",{"_index":1664,"title":{},"body":{"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{}}}],["settimeout",{"_index":428,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["settoken",{"_index":1600,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["settoken(token",{"_index":1612,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["severity",{"_index":423,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/NotificationService.html":{}}}],["severity:'error",{"_index":438,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["severity:'success",{"_index":1050,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["shadow",{"_index":1397,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["shadow.png",{"_index":327,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["si",{"_index":314,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["sido",{"_index":1855,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{}}}],["sign",{"_index":559,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["sign_up",{"_index":1687,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["sign_up_btns",{"_index":2281,"title":{},"body":{"components/SignUpComponent.html":{}}}],["sign_up_successful_message_summary",{"_index":2267,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signup",{"_index":739,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MockAuthService.html":{},"components/SignUpComponent.html":{}}}],["signup(user",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockAuthService.html":{}}}],["signupcomponent",{"_index":558,"title":{"components/SignUpComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sistema",{"_index":1499,"title":{},"body":{"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockUserService.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["site",{"_index":841,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["situada",{"_index":1791,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["size",{"_index":1092,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["size:1.5em",{"_index":1185,"title":{},"body":{"components/EditUserComponent.html":{}}}],["sobrar",{"_index":2242,"title":{},"body":{"components/SignUpComponent.html":{}}}],["sobre",{"_index":832,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["solid",{"_index":1089,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/MapComponent.html":{}}}],["son",{"_index":873,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["sortfield",{"_index":1317,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["sortoptions",{"_index":1318,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["sortorder",{"_index":1319,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"index.html":{}}}],["space",{"_index":503,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["spacing",{"_index":1393,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["spanish",{"_index":1748,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["src",{"_index":855,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["src/.../activity.service.ts",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":2447,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.service.ts",{"_index":2522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../city.service.ts",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../images.service.ts",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interceptor.service.ts",{"_index":2531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interest.service.ts",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":2532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rol.service.ts",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":2523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validatorgreaterthan.directive.ts",{"_index":2448,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../validatornonwhitespace.directive.ts",{"_index":2449,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../validatorpasswordsame.directive.ts",{"_index":2450,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../validatorprioritynumber.directive.ts",{"_index":2451,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/add",{"_index":195,"title":{},"body":{"components/AddActivityComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":720,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":565,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":572,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":597,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/edit",{"_index":813,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth",{"_index":755,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/guards/isloggininguard/is",{"_index":1305,"title":{},"body":{"guards/IsLogginInGuardService.html":{},"coverage.html":{}}}],["src/app/guards/roleguard/role",{"_index":2197,"title":{},"body":{"guards/RoleGuardService.html":{},"coverage.html":{}}}],["src/app/information",{"_index":1199,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"coverage.html":{}}}],["src/app/interceptors/interceptor.service.ts",{"_index":1228,"title":{},"body":{"interceptors/InterceptorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interceptors/interceptor.service.ts:12",{"_index":1232,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["src/app/interceptors/interceptor.service.ts:19",{"_index":1238,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["src/app/interceptors/interceptor.service.ts:42",{"_index":1233,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["src/app/list",{"_index":1311,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":1630,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:110",{"_index":1642,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:119",{"_index":1652,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:143",{"_index":1645,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:29",{"_index":1666,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:33",{"_index":1662,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":1668,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":1640,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:80",{"_index":1647,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:97",{"_index":1658,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/map/map.component.ts",{"_index":1689,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/map/map.component.ts:11",{"_index":1693,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map.component.ts:15",{"_index":1695,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map.component.ts:19",{"_index":1694,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/menu",{"_index":1708,"title":{},"body":{"components/MenuBarComponent.html":{},"coverage.html":{}}}],["src/app/models/activity.ts",{"_index":6,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"coverage.html":{}}}],["src/app/models/activity.ts:10",{"_index":24,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:11",{"_index":33,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:19",{"_index":48,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["src/app/models/activity.ts:2",{"_index":28,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:20",{"_index":47,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["src/app/models/activity.ts:3",{"_index":34,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:4",{"_index":26,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:5",{"_index":30,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:6",{"_index":31,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:7",{"_index":35,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:8",{"_index":25,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:9",{"_index":29,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/city",{"_index":1924,"title":{},"body":{"injectables/MockCityService.html":{}}}],["src/app/models/city.ts",{"_index":787,"title":{},"body":{"classes/City.html":{},"coverage.html":{}}}],["src/app/models/city.ts:2",{"_index":788,"title":{},"body":{"classes/City.html":{}}}],["src/app/models/city.ts:3",{"_index":789,"title":{},"body":{"classes/City.html":{}}}],["src/app/models/interest.ts",{"_index":1260,"title":{},"body":{"classes/Interest.html":{},"classes/InterestByUser.html":{},"coverage.html":{}}}],["src/app/models/interest.ts:2",{"_index":1261,"title":{},"body":{"classes/Interest.html":{}}}],["src/app/models/interest.ts:3",{"_index":1262,"title":{},"body":{"classes/Interest.html":{}}}],["src/app/models/interest.ts:7",{"_index":1271,"title":{},"body":{"classes/InterestByUser.html":{}}}],["src/app/models/interest.ts:8",{"_index":1272,"title":{},"body":{"classes/InterestByUser.html":{}}}],["src/app/models/interest.ts:9",{"_index":1273,"title":{},"body":{"classes/InterestByUser.html":{}}}],["src/app/models/jwt_model.ts",{"_index":1309,"title":{},"body":{"classes/JwtModel.html":{},"coverage.html":{}}}],["src/app/models/jwt_model.ts:2",{"_index":1310,"title":{},"body":{"classes/JwtModel.html":{}}}],["src/app/models/rol.ts",{"_index":2190,"title":{},"body":{"classes/Rol.html":{},"coverage.html":{}}}],["src/app/models/rol.ts:2",{"_index":2191,"title":{},"body":{"classes/Rol.html":{}}}],["src/app/models/rol.ts:3",{"_index":2192,"title":{},"body":{"classes/Rol.html":{}}}],["src/app/models/user.ts",{"_index":1264,"title":{},"body":{"classes/Interest-1.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{},"coverage.html":{}}}],["src/app/models/user.ts:10",{"_index":2335,"title":{},"body":{"classes/UserLogin.html":{}}}],["src/app/models/user.ts:11",{"_index":2336,"title":{},"body":{"classes/UserLogin.html":{}}}],["src/app/models/user.ts:15",{"_index":2354,"title":{},"body":{"classes/UserSignUp.html":{}}}],["src/app/models/user.ts:16",{"_index":2349,"title":{},"body":{"classes/UserSignUp.html":{}}}],["src/app/models/user.ts:17",{"_index":2348,"title":{},"body":{"classes/UserSignUp.html":{}}}],["src/app/models/user.ts:18",{"_index":2351,"title":{},"body":{"classes/UserSignUp.html":{}}}],["src/app/models/user.ts:19",{"_index":2352,"title":{},"body":{"classes/UserSignUp.html":{}}}],["src/app/models/user.ts:2",{"_index":2332,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:20",{"_index":2353,"title":{},"body":{"classes/UserSignUp.html":{}}}],["src/app/models/user.ts:21",{"_index":2350,"title":{},"body":{"classes/UserSignUp.html":{}}}],["src/app/models/user.ts:25",{"_index":1265,"title":{},"body":{"classes/Interest-1.html":{}}}],["src/app/models/user.ts:26",{"_index":1266,"title":{},"body":{"classes/Interest-1.html":{}}}],["src/app/models/user.ts:3",{"_index":2334,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:4",{"_index":2331,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:5",{"_index":2330,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:6",{"_index":2333,"title":{},"body":{"classes/User.html":{}}}],["src/app/recommendation",{"_index":2063,"title":{},"body":{"components/RecommendationMapComponent.html":{},"coverage.html":{}}}],["src/app/recommendation/recommendation.component.ts",{"_index":2033,"title":{},"body":{"components/RecommendationComponent.html":{},"coverage.html":{}}}],["src/app/recommendation/recommendation.component.ts:13",{"_index":2040,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["src/app/recommendation/recommendation.component.ts:14",{"_index":2041,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["src/app/recommendation/recommendation.component.ts:15",{"_index":2042,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["src/app/recommendation/recommendation.component.ts:16",{"_index":2038,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["src/app/recommendation/recommendation.component.ts:20",{"_index":2039,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["src/app/services/activity/activity",{"_index":1767,"title":{},"body":{"injectables/MockActivityService.html":{},"coverage.html":{}}}],["src/app/services/activity/activity.service.ts",{"_index":63,"title":{},"body":{"injectables/ActivityService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/activity/activity.service.ts:103",{"_index":129,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/activity/activity.service.ts:26",{"_index":78,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/activity/activity.service.ts:38",{"_index":123,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/activity/activity.service.ts:47",{"_index":127,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/activity/activity.service.ts:56",{"_index":94,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/activity/activity.service.ts:65",{"_index":114,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/activity/activity.service.ts:76",{"_index":119,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/activity/activity.service.ts:85",{"_index":139,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/activity/activity.service.ts:94",{"_index":135,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/auth/auth",{"_index":1897,"title":{},"body":{"injectables/MockAuthService.html":{},"coverage.html":{}}}],["src/app/services/auth/auth.service.ts",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth/auth.service.ts:25",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:38",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:47",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/city/city",{"_index":1911,"title":{},"body":{"injectables/MockCityService.html":{},"coverage.html":{}}}],["src/app/services/city/city.service.ts",{"_index":790,"title":{},"body":{"injectables/CityService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/city/city.service.ts:26",{"_index":796,"title":{},"body":{"injectables/CityService.html":{}}}],["src/app/services/city/city.service.ts:38",{"_index":805,"title":{},"body":{"injectables/CityService.html":{}}}],["src/app/services/city/city.service.ts:47",{"_index":798,"title":{},"body":{"injectables/CityService.html":{}}}],["src/app/services/city/city.service.ts:56",{"_index":801,"title":{},"body":{"injectables/CityService.html":{}}}],["src/app/services/city/city.service.ts:66",{"_index":804,"title":{},"body":{"injectables/CityService.html":{}}}],["src/app/services/images/images.service.ts",{"_index":1190,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/images/images.service.ts:13",{"_index":1193,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/app/services/images/images.service.ts:17",{"_index":1195,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/app/services/interest/interest",{"_index":1938,"title":{},"body":{"injectables/MockInterestService.html":{},"coverage.html":{}}}],["src/app/services/interest/interest.service.ts",{"_index":1274,"title":{},"body":{"injectables/InterestService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/interest/interest.service.ts:24",{"_index":1281,"title":{},"body":{"injectables/InterestService.html":{}}}],["src/app/services/interest/interest.service.ts:36",{"_index":1294,"title":{},"body":{"injectables/InterestService.html":{}}}],["src/app/services/interest/interest.service.ts:45",{"_index":1283,"title":{},"body":{"injectables/InterestService.html":{}}}],["src/app/services/interest/interest.service.ts:54",{"_index":1287,"title":{},"body":{"injectables/InterestService.html":{}}}],["src/app/services/interest/interest.service.ts:63",{"_index":1291,"title":{},"body":{"injectables/InterestService.html":{}}}],["src/app/services/interest/interest.service.ts:73",{"_index":1289,"title":{},"body":{"injectables/InterestService.html":{}}}],["src/app/services/local",{"_index":1593,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/message/notification.service.ts",{"_index":2020,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/services/message/notification.service.ts:18",{"_index":2022,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/message/notification.service.ts:27",{"_index":2026,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/message/notification.service.ts:36",{"_index":2023,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/rol/rol",{"_index":1966,"title":{},"body":{"injectables/MockRolService.html":{},"coverage.html":{}}}],["src/app/services/rol/rol.service.ts",{"_index":2193,"title":{},"body":{"injectables/RolService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/rol/rol.service.ts:25",{"_index":2194,"title":{},"body":{"injectables/RolService.html":{}}}],["src/app/services/rol/rol.service.ts:37",{"_index":2195,"title":{},"body":{"injectables/RolService.html":{}}}],["src/app/services/user/user",{"_index":1979,"title":{},"body":{"injectables/MockUserService.html":{},"coverage.html":{}}}],["src/app/services/user/user.service.ts",{"_index":2337,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/user/user.service.ts:25",{"_index":2338,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:37",{"_index":2343,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:46",{"_index":2342,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:55",{"_index":2341,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:65",{"_index":2340,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:74",{"_index":2339,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/sign",{"_index":2203,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["src/app/table",{"_index":2289,"title":{},"body":{"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["src/app/validators/validatorgreaterthan.directive.ts",{"_index":2406,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/validators/validatornonwhitespace.directive.ts",{"_index":2407,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/validators/validatorpasswordsame.directive.ts",{"_index":2408,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/validators/validatorprioritynumber.directive.ts",{"_index":2409,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/assets/sass/utility/_mixins.scss",{"_index":453,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":2410,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2412,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["star",{"_index":2180,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["started",{"_index":2467,"title":{"index.html":{}},"body":{}}],["state",{"_index":762,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/RoleGuardService.html":{}}}],["statements",{"_index":2358,"title":{},"body":{"coverage.html":{}}}],["stepsmodule",{"_index":667,"title":{},"body":{"modules/AppModule.html":{}}}],["storage.service",{"_index":768,"title":{},"body":{"guards/AuthGuardService.html":{},"components/EditUserComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{}}}],["storage.service.ts",{"_index":1594,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:17",{"_index":1601,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:25",{"_index":1613,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:34",{"_index":1609,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:41",{"_index":1610,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:49",{"_index":1606,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:59",{"_index":1608,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:70",{"_index":1603,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/local",{"_index":767,"title":{},"body":{"guards/AuthGuardService.html":{},"components/EditUserComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":2490,"title":{},"body":{"index.html":{}}}],["string",{"_index":22,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"injectables/ImagesService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":192,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["styleurls",{"_index":203,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["su",{"_index":1656,"title":{},"body":{"components/LoginComponent.html":{}}}],["subject",{"_index":2344,"title":{},"body":{"injectables/UserService.html":{}}}],["submessage_rate_activity",{"_index":2175,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["subscribe",{"_index":1132,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["subscribe(([response1",{"_index":907,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["success",{"_index":424,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/NotificationService.html":{}}}],["success(detail",{"_index":2025,"title":{},"body":{"injectables/NotificationService.html":{}}}],["summary",{"_index":425,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/NotificationService.html":{},"components/TableActivitiesComponent.html":{}}}],["support",{"_index":2513,"title":{},"body":{"modules.html":{}}}],["suárez",{"_index":338,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["svg",{"_index":2514,"title":{},"body":{"modules.html":{}}}],["switchlang",{"_index":1715,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["switchlang(lang",{"_index":1727,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["symbol",{"_index":520,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["system",{"_index":509,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["tabla",{"_index":1559,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["table",{"_index":562,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["table_recommendation",{"_index":2176,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["tableactivities",{"_index":263,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["tableactivitiescomponent",{"_index":561,"title":{"components/TableActivitiesComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablemodule",{"_index":637,"title":{},"body":{"modules/AppModule.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2413,"title":{},"body":{"coverage.html":{}}}],["tabmenumodule",{"_index":663,"title":{},"body":{"modules/AppModule.html":{}}}],["tabpanel",{"_index":660,"title":{},"body":{"modules/AppModule.html":{}}}],["tabviewmodule",{"_index":661,"title":{},"body":{"modules/AppModule.html":{}}}],["tagmodule",{"_index":705,"title":{},"body":{"modules/AppModule.html":{}}}],["también",{"_index":259,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["tbody",{"_index":1586,"title":{},"body":{"components/ListUserComponent.html":{}}}],["td",{"_index":1588,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["teatros",{"_index":1376,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["template",{"_index":191,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["templateurl",{"_index":205,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["tendr",{"_index":1337,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["tener",{"_index":1717,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["test",{"_index":2499,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2498,"title":{},"body":{"index.html":{}}}],["text",{"_index":465,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["textos",{"_index":1660,"title":{},"body":{"components/LoginComponent.html":{}}}],["th",{"_index":1590,"title":{},"body":{"components/ListUserComponent.html":{}}}],["thead",{"_index":1589,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":902,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["this.activities",{"_index":2311,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.activitiesrecommendation",{"_index":2127,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.activitiesrecommendation.foreach(activity",{"_index":2128,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.activitiesselected.push(activity.name",{"_index":2129,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.activitiesservice.getrecommendedactivities(this.userlogged.id).pipe",{"_index":2159,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.activitiesservice.postrateactivity(rateactivity).pipe",{"_index":2157,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.activity",{"_index":910,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{}}}],["this.activity.metadataimage.data",{"_index":931,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{}}}],["this.activity.metadataimage.mimetype",{"_index":930,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{}}}],["this.activity.pathimage",{"_index":936,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.activityid",{"_index":901,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.activityselectedtorate",{"_index":2150,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.activityselectedtorate.id",{"_index":2154,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.activityservice.addactivity(formdata).subscribe",{"_index":418,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.activityservice.deleteactivity(activity.id).pipe",{"_index":2313,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.activityservice.editactivity(this.activityid",{"_index":961,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.activityservice.getactivities().pipe",{"_index":2314,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.activityservice.getactivities().subscribe",{"_index":2310,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.activityservice.getactivity(this.activityid",{"_index":906,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.authority",{"_index":1743,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.authservice.login(usuario).subscribe(data",{"_index":1679,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.signup(user).subscribe",{"_index":2264,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.cities",{"_index":1448,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.cityservice.addcity(city).pipe",{"_index":1450,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.cityservice.deletecity(city).pipe",{"_index":1461,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.cityservice.editcity(this.formeditcity.get('id').value",{"_index":1471,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.cityservice.getcities().pipe",{"_index":1451,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.cityservice.getcities().subscribe",{"_index":1447,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.cols",{"_index":1563,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["this.config.data",{"_index":1213,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["this.config.data.activity",{"_index":1214,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["this.config.settranslation(res",{"_index":578,"title":{},"body":{"components/AppComponent.html":{},"components/MenuBarComponent.html":{}}}],["this.confirmationservice.confirm",{"_index":1458,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["this.datauritoblob(url",{"_index":935,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.decodetoken(token",{"_index":1626,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.dialogservice.open(informationactivitiescomponent",{"_index":2318,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.display",{"_index":1446,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["this.displayeditdialog",{"_index":1533,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.displayeditpanel",{"_index":1468,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.displaypanelrating",{"_index":2151,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.editactivitiesform",{"_index":903,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.editactivitiesform.controls['address'].setvalue(e.geocode.name",{"_index":924,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.editactivitiesform.controls['city'].setvalue(council",{"_index":923,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.editactivitiesform.controls['latitude'].setvalue(latitud",{"_index":920,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.editactivitiesform.controls['longitude'].setvalue(longitud",{"_index":921,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.editactivitiesform.get('name').value",{"_index":964,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.editactivitiesform.patchvalue",{"_index":911,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.edituserform",{"_index":1020,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.edituserform.controls['roles'].setvalue(this.user.roles",{"_index":1031,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.edituserform.get(\"roles\").value",{"_index":1044,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.edituserform.get(\"username\").value",{"_index":1042,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.edituserform.get('username').value",{"_index":1049,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.edituserform.patchvalue",{"_index":1028,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.edituserform.valuechanges.subscribe((values",{"_index":1055,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.edituserprofile",{"_index":1125,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.edituserprofile.get(\"username\").value",{"_index":1146,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.edituserprofile.get('interest",{"_index":1144,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.edituserprofile.patchvalue",{"_index":1134,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.edituserprofile.valuechanges.subscribe((values",{"_index":1163,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.email",{"_index":1741,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.erroraddcity",{"_index":1457,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.erroraddinterest",{"_index":1526,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.erroreditcity",{"_index":1467,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.erroreditinterest",{"_index":1540,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.fb.array",{"_index":1126,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.fb.group",{"_index":904,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["this.file",{"_index":934,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.files",{"_index":388,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity",{"_index":342,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.controls['address'].setvalue(e.geocode.name",{"_index":378,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.controls['city'].setvalue(council",{"_index":377,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.controls['latitude'].setvalue(latitud",{"_index":369,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.controls['longitude'].setvalue(longitud",{"_index":372,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.get('address').value",{"_index":407,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.get('city').value",{"_index":403,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.get('description').value",{"_index":397,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.get('latitude').value",{"_index":399,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.get('longitude').value",{"_index":401,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.get('name').value",{"_index":395,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.get('nameinterest').value",{"_index":405,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.valid",{"_index":392,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddcity",{"_index":1443,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.formaddcity.get('name').value",{"_index":1449,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.formaddcity.reset",{"_index":1455,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.formaddinterest",{"_index":1518,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.formaddinterest.get('name').value",{"_index":1520,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.formaddinterest.reset",{"_index":1524,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.formbuilder.group",{"_index":343,"title":{},"body":{"components/AddActivityComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["this.formeditcity",{"_index":1444,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.formeditcity.get('name').value",{"_index":1470,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.formeditcity.patchvalue",{"_index":1469,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.formeditinterest",{"_index":1519,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.formeditinterest.get('name').value",{"_index":1535,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.formeditinterest.patchvalue",{"_index":1534,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.formgroup",{"_index":2238,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('datebirthday').valid",{"_index":2270,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('email').valid",{"_index":2269,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('email').value",{"_index":2261,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('interest",{"_index":2251,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('name').valid",{"_index":2268,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('name').value",{"_index":2260,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('password').valid",{"_index":2271,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('password').value",{"_index":2262,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('repeatpassword').valid",{"_index":2272,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('repeatpassword').value",{"_index":2263,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.setvalue(e",{"_index":2249,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.valuechanges.subscribe(e",{"_index":2248,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formtoratingactivity",{"_index":2117,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.formtoratingactivity.get('rating').value",{"_index":2156,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.formtoratingactivity.patchvalue",{"_index":2149,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.getmessages",{"_index":1671,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.gettoken",{"_index":1624,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.handleautherror",{"_index":1252,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["this.httpclient.delete(this.activityurl",{"_index":182,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.httpclient.delete(this.cityurl",{"_index":810,"title":{},"body":{"injectables/CityService.html":{}}}],["this.httpclient.delete(this.interesturl",{"_index":1301,"title":{},"body":{"injectables/InterestService.html":{}}}],["this.httpclient.delete(this.userurl",{"_index":2347,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(this.activityurl",{"_index":177,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.httpclient.get(this.cityurl",{"_index":808,"title":{},"body":{"injectables/CityService.html":{}}}],["this.httpclient.get(this.imagesurl",{"_index":1198,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.httpclient.get(this.interesturl",{"_index":1299,"title":{},"body":{"injectables/InterestService.html":{}}}],["this.httpclient.get(this.rolurl",{"_index":2196,"title":{},"body":{"injectables/RolService.html":{}}}],["this.httpclient.get(this.userurl",{"_index":2345,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.post(this.activityurl",{"_index":180,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.httpclient.post(this.authurl",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(this.cityurl",{"_index":809,"title":{},"body":{"injectables/CityService.html":{}}}],["this.httpclient.post(this.interesturl",{"_index":1300,"title":{},"body":{"injectables/InterestService.html":{}}}],["this.httpclient.put(this.activityurl",{"_index":183,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.httpclient.put(this.cityurl",{"_index":812,"title":{},"body":{"injectables/CityService.html":{}}}],["this.httpclient.put(this.interesturl",{"_index":1304,"title":{},"body":{"injectables/InterestService.html":{}}}],["this.httpclient.put(this.userurl",{"_index":2346,"title":{},"body":{"injectables/UserService.html":{}}}],["this.image",{"_index":932,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{}}}],["this.info",{"_index":2043,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["this.infomessage",{"_index":410,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.infomessage.push(maux",{"_index":417,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.initmap",{"_index":1696,"title":{},"body":{"components/MapComponent.html":{}}}],["this.interest",{"_index":382,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["this.interest.push(control",{"_index":2257,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.interest.push(newitem",{"_index":1143,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.interest.push({label",{"_index":383,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["this.interest.value",{"_index":1147,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["this.interestarray",{"_index":2253,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.interestarray.foreach(interest",{"_index":2254,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.interestlist",{"_index":1957,"title":{},"body":{"injectables/MockInterestService.html":{},"components/RecommendationComponent.html":{}}}],["this.interestlist.filter(p",{"_index":1958,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["this.interestlist.find(inter",{"_index":1959,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["this.interestlist.indexof(updateitem",{"_index":1961,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["this.interestlist.push(interesttoadd",{"_index":1956,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["this.interestlist[index",{"_index":1963,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["this.interestlist[this.interestlist.length",{"_index":1955,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["this.interestservice.addinterests(interest).pipe",{"_index":1521,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.interestservice.deleteinterest(interest).pipe",{"_index":1528,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.interestservice.editinterest(this.formeditinterest.get('id').value",{"_index":1536,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.interestservice.getinterests",{"_index":905,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.interestservice.getinterests().pipe",{"_index":1522,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.interestservice.getinterests().subscribe",{"_index":381,"title":{},"body":{"components/AddActivityComponent.html":{},"components/ListInterestComponent.html":{},"components/RecommendationComponent.html":{}}}],["this.interestservice.getinterests().subscribe(data",{"_index":2252,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.iscontinuefail",{"_index":2274,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.isequivalent(this.activity",{"_index":954,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.isequivalent(this.user",{"_index":1056,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["this.islogin",{"_index":1742,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.isloginfail",{"_index":1681,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isregisterfail",{"_index":2265,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.listactivities",{"_index":1344,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{}}}],["this.listactivities.filter(p",{"_index":1853,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["this.listactivities.find(acti",{"_index":1875,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["this.listactivities.find(p",{"_index":1892,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["this.listactivities.indexof(updateitem",{"_index":1877,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["this.listactivities.push(activitytoadd",{"_index":1867,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["this.listactivities[index",{"_index":1890,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["this.listactivities[this.listactivities.length",{"_index":1858,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["this.listcities",{"_index":1930,"title":{},"body":{"injectables/MockCityService.html":{}}}],["this.listcities.filter(p",{"_index":1931,"title":{},"body":{"injectables/MockCityService.html":{}}}],["this.listcities.find(ci",{"_index":1932,"title":{},"body":{"injectables/MockCityService.html":{}}}],["this.listcities.indexof(updateitem",{"_index":1934,"title":{},"body":{"injectables/MockCityService.html":{}}}],["this.listcities.push(citytoadd",{"_index":1929,"title":{},"body":{"injectables/MockCityService.html":{}}}],["this.listcities[index",{"_index":1935,"title":{},"body":{"injectables/MockCityService.html":{}}}],["this.listcities[this.listcities.length",{"_index":1928,"title":{},"body":{"injectables/MockCityService.html":{}}}],["this.listrecommendedactivities.push(activityrate",{"_index":1894,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["this.listusers",{"_index":2011,"title":{},"body":{"injectables/MockUserService.html":{}}}],["this.listusers.filter(us",{"_index":2012,"title":{},"body":{"injectables/MockUserService.html":{}}}],["this.loadactivities",{"_index":2309,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.loadcities",{"_index":1445,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.loadinterest",{"_index":380,"title":{},"body":{"components/AddActivityComponent.html":{},"components/ListInterestComponent.html":{},"components/SignUpComponent.html":{}}}],["this.localstorageservice.getemailuser",{"_index":1130,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["this.localstorageservice.getrolesuser",{"_index":1306,"title":{},"body":{"guards/IsLogginInGuardService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"guards/RoleGuardService.html":{}}}],["this.localstorageservice.gettoken",{"_index":769,"title":{},"body":{"guards/AuthGuardService.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"guards/RoleGuardService.html":{}}}],["this.localstorageservice.logout",{"_index":1256,"title":{},"body":{"interceptors/InterceptorService.html":{},"components/MenuBarComponent.html":{}}}],["this.localstorageservice.settoken(data.token",{"_index":1680,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform",{"_index":1672,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('email').value",{"_index":1677,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password').value",{"_index":1678,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.map",{"_index":1697,"title":{},"body":{"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["this.map.invalidatesize",{"_index":2145,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.map.removelayer(f[0",{"_index":2172,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.markerlist.filter((act",{"_index":2161,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.markerlist.indexof(f[0",{"_index":2170,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.markerlist.push(marker",{"_index":2144,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.markerlist.splice(index",{"_index":2171,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.message",{"_index":2032,"title":{},"body":{"injectables/NotificationService.html":{},"components/SignUpComponent.html":{}}}],["this.message.push",{"_index":2031,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.messageservice.add({key",{"_index":421,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["this.nofiles",{"_index":390,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.notification.message",{"_index":1676,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.notificationservice.success(\"sign_up_successful_message_detail",{"_index":2266,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.observechanges",{"_index":937,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["this.opensecondform",{"_index":2273,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.processmessagetranslation(this.getmessages",{"_index":1670,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.ref",{"_index":2317,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.ref.close",{"_index":2322,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.ref.onclose.subscribe((activity",{"_index":2320,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.removemarkerfrommap(activity",{"_index":2148,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.removemarkerfrommap(this.activityselectedtorate",{"_index":2158,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.rol",{"_index":2201,"title":{},"body":{"guards/RoleGuardService.html":{}}}],["this.rolelist",{"_index":1032,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.roles",{"_index":1025,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{}}}],["this.roles.includes(\"role_admin",{"_index":1682,"title":{},"body":{"components/LoginComponent.html":{},"components/MenuBarComponent.html":{}}}],["this.roles.map((v",{"_index":1033,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.router.navigate(['/activities",{"_index":429,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["this.router.navigate(['/recommendationmap",{"_index":1308,"title":{},"body":{"guards/IsLogginInGuardService.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['/user",{"_index":1053,"title":{},"body":{"components/EditUserAdminComponent.html":{},"guards/IsLogginInGuardService.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['activities/add",{"_index":2316,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.router.navigate(['login",{"_index":770,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{}}}],["this.router.navigatebyurl('/login",{"_index":1744,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.router.navigatebyurl('activities/edit",{"_index":2323,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.router.navigatebyurl('admin/user/edit",{"_index":1576,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.router.navigatebyurl('login",{"_index":1257,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["this.sanitizer.bypasssecuritytrusturl(url",{"_index":933,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["this.sortfield",{"_index":1350,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["this.sortoptions",{"_index":1340,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["this.sortorder",{"_index":1349,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["this.translate.get('primeng').subscribe(res",{"_index":577,"title":{},"body":{"components/AppComponent.html":{},"components/MenuBarComponent.html":{}}}],["this.translate.use(lang",{"_index":1745,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.translateservice.instant(\"error",{"_index":414,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["this.translateservice.instant(\"sign_up_successful_message_detail",{"_index":1675,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.translateservice.instant(\"sign_up_successful_message_summary",{"_index":1674,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.translateservice.instant('activity_add",{"_index":426,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.translateservice.instant('activity_add_message",{"_index":419,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.translateservice.instant('activity_delete_message",{"_index":2315,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.translateservice.instant('activity_edit",{"_index":966,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.translateservice.instant('activity_edit_message",{"_index":963,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.translateservice.instant('city_add",{"_index":1456,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.translateservice.instant('city_add_message",{"_index":1453,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.translateservice.instant('city_delete",{"_index":1464,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.translateservice.instant('city_delete_message",{"_index":1462,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.translateservice.instant('city_edit",{"_index":1475,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.translateservice.instant('city_edit_message",{"_index":1474,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.translateservice.instant('city_has_activities",{"_index":1466,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.translateservice.instant('error",{"_index":439,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["this.translateservice.instant('error_activity_repeated",{"_index":445,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["this.translateservice.instant('error_city_council",{"_index":435,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["this.translateservice.instant('error_delete_message",{"_index":1054,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["this.translateservice.instant('info_dialog_title",{"_index":2319,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.translateservice.instant('interest_add",{"_index":1525,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.translateservice.instant('interest_add_message",{"_index":1523,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.translateservice.instant('interest_delete",{"_index":1531,"title":{},"body":{"components/ListInterestComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["this.translateservice.instant('interest_delete_message",{"_index":1529,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.translateservice.instant('interest_edit",{"_index":1539,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.translateservice.instant('interest_edit_message",{"_index":1538,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.translateservice.instant('interest_has_activities",{"_index":1532,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.translateservice.instant('message_delete_activity",{"_index":2312,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.translateservice.instant('message_delete_city",{"_index":1459,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.translateservice.instant('message_delete_interest",{"_index":1527,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.translateservice.instant('message_delete_user",{"_index":1570,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.translateservice.instant('user_delete",{"_index":1575,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.translateservice.instant('user_delete_message",{"_index":1574,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.translateservice.instant('user_edit",{"_index":1051,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.translateservice.instant('user_edit_message",{"_index":1047,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.translateservice.instant('user_profile_edit",{"_index":1156,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.translateservice.instant('user_profile_edit_message",{"_index":1154,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.translateservice.instant(maux.keydetail",{"_index":1151,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.translateservice.instant(maux.keysummary",{"_index":1150,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.translateservice.instant(message.keytranslate",{"_index":416,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["this.translateservice.onlangchange.subscribe((event",{"_index":1149,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.translateservice.onlangchange.subscribe(event",{"_index":408,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.user",{"_index":1026,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["this.user.datebirthday",{"_index":2015,"title":{},"body":{"injectables/MockUserService.html":{}}}],["this.user.interest",{"_index":2016,"title":{},"body":{"injectables/MockUserService.html":{}}}],["this.user.interest.foreach",{"_index":1135,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.user.roles",{"_index":1148,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/MockUserService.html":{}}}],["this.user.username",{"_index":1029,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockUserService.html":{}}}],["this.userid",{"_index":1019,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.userlogged",{"_index":2124,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.users",{"_index":1567,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.users.filter(restuser",{"_index":1572,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.userservice.deleteuser(user.id).pipe",{"_index":1571,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.userservice.edituser(this.user.id",{"_index":1152,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.userservice.edituser(this.userid",{"_index":1045,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.userservice.getuser(this.user.id).pipe",{"_index":1161,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.userservice.getuserforadmin(this.userid)]).subscribe(results",{"_index":1024,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.userservice.getusers().pipe",{"_index":1127,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["this.userservice.getusers().subscribe(response",{"_index":1566,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.valueunchanged",{"_index":956,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["throw",{"_index":1254,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["tiene",{"_index":898,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{}}}],["tiles",{"_index":351,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["tiles.addto(this.map",{"_index":1702,"title":{},"body":{"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["tipo",{"_index":1285,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["tipos",{"_index":1295,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/RolService.html":{}}}],["toastmodule",{"_index":674,"title":{},"body":{"modules/AppModule.html":{}}}],["token",{"_index":1245,"title":{},"body":{"interceptors/InterceptorService.html":{},"classes/JwtModel.html":{},"injectables/LocalStorageService.html":{},"injectables/MockAuthService.html":{},"components/RecommendationComponent.html":{},"miscellaneous/variables.html":{}}}],["token_key",{"_index":1618,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toolbar",{"_index":2328,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["toolbarmodule",{"_index":642,"title":{},"body":{"modules/AppModule.html":{}}}],["tooltipmodule",{"_index":671,"title":{},"body":{"modules/AppModule.html":{}}}],["top",{"_index":486,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/RecommendationComponent.html":{},"components/SignUpComponent.html":{}}}],["tr",{"_index":1587,"title":{},"body":{"components/ListUserComponent.html":{}}}],["traduce",{"_index":1659,"title":{},"body":{"components/LoginComponent.html":{}}}],["traducir",{"_index":1661,"title":{},"body":{"components/LoginComponent.html":{}}}],["transform",{"_index":1387,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["translate",{"_index":236,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["translate.addlangs(['en",{"_index":574,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.setdefaultlang('es",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use('es",{"_index":576,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":332,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/NotificationService.html":{},"components/TableActivitiesComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":680,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":679,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":719,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":677,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":678,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule.forroot",{"_index":713,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":220,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/NotificationService.html":{},"components/TableActivitiesComponent.html":{}}}],["trata",{"_index":1819,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["través",{"_index":1500,"title":{},"body":{"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["tree",{"_index":194,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["true",{"_index":311,"title":{},"body":{"components/AddActivityComponent.html":{},"guards/AuthGuardService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"interceptors/InterceptorService.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2442,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":2046,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["turismo",{"_index":1684,"title":{},"body":{"components/LoginComponent.html":{}}}],["tus",{"_index":2050,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":951,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["typeselected",{"_index":2037,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["ui",{"_index":512,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["uint8array(bytestring.length",{"_index":953,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["un",{"_index":249,"title":{},"body":{"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockAuthService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":97,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["unescape(datauri.split(',')[1",{"_index":944,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["unit",{"_index":2497,"title":{},"body":{"index.html":{}}}],["universidad",{"_index":1789,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["universidad.jpg",{"_index":1795,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["up",{"_index":2205,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up'},{'name",{"_index":560,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["up.component",{"_index":617,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["up.component.html",{"_index":2207,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.scss",{"_index":2206,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts",{"_index":2204,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:102",{"_index":2234,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:109",{"_index":2217,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:129",{"_index":2219,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:157",{"_index":2215,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:171",{"_index":2220,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:29",{"_index":2222,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:33",{"_index":2223,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:37",{"_index":2228,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:41",{"_index":2231,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:45",{"_index":2224,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:49",{"_index":2214,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:81",{"_index":2218,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up/sign",{"_index":616,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["update",{"_index":184,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/UserService.html":{}}}],["updateitem",{"_index":1874,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{}}}],["updateitem.metadataimage.data",{"_index":1889,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["updateitem.metadataimage.filename",{"_index":1887,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["updateitem.metadataimage.mimetype",{"_index":1888,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["updateitem.pathimage",{"_index":1883,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["updateuserprofile",{"_index":1101,"title":{},"body":{"components/EditUserComponent.html":{}}}],["uppercase",{"_index":1388,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["url",{"_index":146,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["url.createobjecturl(event.files[0",{"_index":970,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["us.id",{"_index":2013,"title":{},"body":{"injectables/MockUserService.html":{}}}],["usar",{"_index":848,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["use",{"_index":2486,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":1258,"title":{},"body":{"interceptors/InterceptorService.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":715,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":533,"title":{"classes/User.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"classes/Interest-1.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockUserService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{}}}],["user'},{'name",{"_index":536,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["user).pipe",{"_index":1153,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user).subscribe",{"_index":1046,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["user.component",{"_index":659,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["user.component.html",{"_index":1099,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListUserComponent.html":{}}}],["user.component.scss",{"_index":1098,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListUserComponent.html":{}}}],["user.component.ts",{"_index":1095,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:104",{"_index":1118,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:112",{"_index":1113,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:119",{"_index":1553,"title":{},"body":{"components/ListUserComponent.html":{}}}],["user.component.ts:159",{"_index":1112,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:173",{"_index":1110,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:29",{"_index":1561,"title":{},"body":{"components/ListUserComponent.html":{}}}],["user.component.ts:30",{"_index":1114,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:33",{"_index":1549,"title":{},"body":{"components/ListUserComponent.html":{}}}],["user.component.ts:34",{"_index":1115,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:38",{"_index":1116,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:42",{"_index":1104,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:70",{"_index":1556,"title":{},"body":{"components/ListUserComponent.html":{}}}],["user.component.ts:71",{"_index":1111,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:88",{"_index":1551,"title":{},"body":{"components/ListUserComponent.html":{}}}],["user.datebirthday",{"_index":1581,"title":{},"body":{"components/ListUserComponent.html":{},"injectables/MockUserService.html":{}}}],["user.email",{"_index":1569,"title":{},"body":{"components/ListUserComponent.html":{},"injectables/MockAuthService.html":{}}}],["user.id",{"_index":1577,"title":{},"body":{"components/ListUserComponent.html":{}}}],["user.interest",{"_index":2017,"title":{},"body":{"injectables/MockUserService.html":{}}}],["user.roles",{"_index":2018,"title":{},"body":{"injectables/MockUserService.html":{}}}],["user.service",{"_index":2009,"title":{},"body":{"injectables/MockUserService.html":{}}}],["user.username",{"_index":1580,"title":{},"body":{"components/ListUserComponent.html":{},"injectables/MockUserService.html":{}}}],["user/edit",{"_index":689,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["user/list",{"_index":658,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ListUserComponent.html":{},"coverage.html":{}}}],["user[0",{"_index":2125,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["user_profile_edit",{"_index":1158,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user_profile_edit_message",{"_index":1160,"title":{},"body":{"components/EditUserComponent.html":{}}}],["userid",{"_index":995,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["userlogged",{"_index":2071,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["userlogin",{"_index":152,"title":{"classes/UserLogin.html":{}},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"classes/Interest-1.html":{},"injectables/MockAuthService.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{},"coverage.html":{}}}],["username",{"_index":1021,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"classes/Interest-1.html":{},"components/ListUserComponent.html":{},"injectables/MockUserService.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["users",{"_index":1546,"title":{},"body":{"components/ListUserComponent.html":{},"components/MenuBarComponent.html":{}}}],["userservice",{"_index":997,"title":{"injectables/UserService.html":{}},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservice:25",{"_index":2008,"title":{},"body":{"injectables/MockUserService.html":{}}}],["userservice:37",{"_index":1999,"title":{},"body":{"injectables/MockUserService.html":{}}}],["userservice:46",{"_index":1998,"title":{},"body":{"injectables/MockUserService.html":{}}}],["userservice:55",{"_index":1997,"title":{},"body":{"injectables/MockUserService.html":{}}}],["userservice:65",{"_index":1996,"title":{},"body":{"injectables/MockUserService.html":{}}}],["userservice:74",{"_index":1995,"title":{},"body":{"injectables/MockUserService.html":{}}}],["usersignup",{"_index":780,"title":{"classes/UserSignUp.html":{}},"body":{"injectables/AuthService.html":{},"classes/Interest-1.html":{},"injectables/MockAuthService.html":{},"injectables/MockInterestService.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{},"coverage.html":{}}}],["userurl",{"_index":1981,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["usuario",{"_index":131,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["usuarios",{"_index":1001,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/UserService.html":{}}}],["utiliza",{"_index":237,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["utilizando",{"_index":289,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["utilizar",{"_index":1732,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["v.rolname",{"_index":1035,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["vacía",{"_index":2024,"title":{},"body":{"injectables/NotificationService.html":{}}}],["valida",{"_index":2453,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validadoragegreaterthan",{"_index":1017,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validadornonwhitespace",{"_index":333,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validadorpasswordsame",{"_index":2235,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validadorprioritynumberofinterest",{"_index":1123,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validatorfn",{"_index":2459,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":317,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.email",{"_index":1673,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.minlength(minpasslength",{"_index":2239,"title":{},"body":{"components/SignUpComponent.html":{}}}],["validators.required",{"_index":344,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["validators/validatorgreaterthan.directive",{"_index":1018,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["validators/validatornonwhitespace.directive",{"_index":334,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["validators/validatorpasswordsame.directive",{"_index":2236,"title":{},"body":{"components/SignUpComponent.html":{}}}],["validators/validatorprioritynumber.directive",{"_index":1124,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["valor",{"_index":887,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["valoración",{"_index":140,"title":{},"body":{"injectables/ActivityService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{}}}],["valorada",{"_index":1895,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["valoradas",{"_index":130,"title":{},"body":{"injectables/ActivityService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{}}}],["valorar",{"_index":2099,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["valores",{"_index":845,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["value",{"_index":143,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.indexof",{"_index":1348,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["value.length",{"_index":1352,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["value.substring(1",{"_index":1351,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["values",{"_index":955,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["valueunchanged",{"_index":819,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["var",{"_index":346,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["variable",{"_index":270,"title":{},"body":{"components/AddActivityComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2521,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasco",{"_index":1816,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["verificación",{"_index":2091,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["version",{"_index":339,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"index.html":{}}}],["vertical",{"_index":1755,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["vez",{"_index":257,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["via",{"_index":2501,"title":{},"body":{"index.html":{}}}],["virtualscrollermodule",{"_index":652,"title":{},"body":{"modules/AppModule.html":{}}}],["vistas",{"_index":232,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["visualiza",{"_index":2233,"title":{},"body":{"components/SignUpComponent.html":{}}}],["visualizar",{"_index":1339,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/SignUpComponent.html":{}}}],["void",{"_index":266,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["vuelta",{"_index":1724,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["weight",{"_index":1389,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["welcome",{"_index":1683,"title":{},"body":{"components/LoginComponent.html":{}}}],["white",{"_index":502,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["width",{"_index":458,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["window.localstorage.clear",{"_index":1623,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["window.localstorage.removeitem(token_key",{"_index":1620,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["window.localstorage.setitem(token_key",{"_index":1621,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["word",{"_index":1591,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["wrap",{"_index":2327,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["wrap:break",{"_index":1592,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["write",{"_index":949,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["xito",{"_index":1651,"title":{},"body":{"components/LoginComponent.html":{}}}],["xss",{"_index":843,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["y",{"_index":89,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":2029,"title":{},"body":{"injectables/NotificationService.html":{}}}],["yourperfile",{"_index":1750,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["zone.js",{"_index":2443,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":594,"title":{},"body":{"modules/AppModule.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{},"overview.html":{}}}],["zoomsnap",{"_index":2122,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Activity.html":{"url":"classes/Activity.html","title":"class - Activity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Activity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/activity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                interest\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                metadataImage\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                pathImage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metadataImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pathImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Activity {\n  id: number;\n  name: string;\n  description: string;\n  latitude: number;\n  longitude: number;\n  pathImage?: string;\n  city: string;\n  interest: string;\n  address: string;\n  metadataImage: {\n    filename: string;\n    mimeType: string;\n    data: string;\n  };\n}\n\nexport class ActivityRecommended extends Activity{\n  score: number;\n  average: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivityRecommended.html":{"url":"classes/ActivityRecommended.html","title":"class - ActivityRecommended","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivityRecommended\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/activity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Activity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                average\n                            \n                            \n                                score\n                            \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                interest\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                metadataImage\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                pathImage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            average\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:2\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metadataImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pathImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Activity {\n  id: number;\n  name: string;\n  description: string;\n  latitude: number;\n  longitude: number;\n  pathImage?: string;\n  city: string;\n  interest: string;\n  address: string;\n  metadataImage: {\n    filename: string;\n    mimeType: string;\n    data: string;\n  };\n}\n\nexport class ActivityRecommended extends Activity{\n  score: number;\n  average: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActivityService.html":{"url":"injectables/ActivityService.html","title":"injectable - ActivityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ActivityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/activity/activity.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activityUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addActivity\n                            \n                            \n                                    Public\n                                deleteActivity\n                            \n                            \n                                    Public\n                                editActivity\n                            \n                            \n                                    Public\n                                getActivities\n                            \n                            \n                                    Public\n                                getActivity\n                            \n                            \n                                    Public\n                                getRatedActivities\n                            \n                            \n                                    Public\n                                getRecommendedActivities\n                            \n                            \n                                    Public\n                                postRateActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/activity/activity.service.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor de la clase ActivityService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                objeto que permite hacer peticiones a la API y obtener resultados de la misma\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addActivity(formData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity.service.ts:56\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para añadir una nueva actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    formData\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto FormData que incluye la información de la nueva actividad.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteActivity(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity.service.ts:65\n                \n            \n\n\n            \n                \n                    Método que realiza una petición DELETE para eliminar una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador de la actividad\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editActivity(id, activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity.service.ts:76\n                \n            \n\n\n            \n                \n                    Método que realiza una petición PUT para modificar la información de una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador de la actividad\n\n                                    \n                                \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto actividad con la información actualizada.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getActivities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActivities()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity.service.ts:38\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de actividades.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActivity(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity.service.ts:47\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador de la actividad\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRatedActivities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRatedActivities(idUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity.service.ts:103\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de actividades valoradas por el usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idUser\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRecommendedActivities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecommendedActivities(idUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity.service.ts:94\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de actividades recomendadas al usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idUser\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postRateActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postRateActivity(activityRate)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity.service.ts:85\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para añadir una nueva valoración a una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activityRate\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto con la valoración del usuario a una actividad\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API \n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activityUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/activity'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/activity/activity.service.ts:26\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {UserLogin} from '../../models/user';\nimport {Observable} from 'rxjs';\nimport {JwtModel} from '../../models/jwt_model';\nimport {Activity, ActivityRecommended} from '../../models/activity';\n\n/**\n * Encabezado para las peticiones y respuestas HTTP\n */\nconst cabecera = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clase ActivityService\n * \n * Clase que se encarga de realizar peticiones a la API relacionadas con las actividades.\n */\nexport class ActivityService {\n\n  /**\n   * Almacena la url del endpoint\n   */\n  activityUrl = 'http://localhost:8090/api/activity';\n\n  /**\n   * Constructor de la clase ActivityService\n   * @param httpClient objeto que permite hacer peticiones a la API y obtener resultados de la misma\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Método que realiza una petición GET para obtener la lista de actividades.\n   * @returns el observable con la información enviada por la API\n   */\n  public getActivities(): Observable {\n    return this.httpClient.get(this.activityUrl + '/list', cabecera);\n  }\n  \n  /**\n   * Método que realiza una petición GET para obtener una actividad.\n   * @param id identificador de la actividad\n   * @returns el observable con la información enviada por la API\n   */\n  public getActivity(id): Observable {\n    return this.httpClient.get(this.activityUrl + '/details/' + id, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición POST para añadir una nueva actividad.\n   * @param formData objeto FormData que incluye la información de la nueva actividad.\n   * @returns el observable con la información enviada por la API\n   */\n  public addActivity(formData): Observable {\n    return this.httpClient.post(this.activityUrl + '/add', formData);\n  }\n\n  /**\n   * Método que realiza una petición DELETE para eliminar una actividad.\n   * @param id identificador de la actividad\n   * @returns el observable con la información enviada por la API \n   */\n  public deleteActivity(id): Observable {\n    return this.httpClient.delete(this.activityUrl + '/delete/' + id, cabecera);\n  }\n\n\n  /**\n   * Método que realiza una petición PUT para modificar la información de una actividad.\n   * @param id identificador de la actividad\n   * @param activity objeto actividad con la información actualizada.\n   * @returns el observable con la información enviada por la API \n   */\n  public editActivity(id, activity): Observable {\n    return this.httpClient.put(this.activityUrl + '/update/' + id, activity);\n  }\n\n  /**\n   * Método que realiza una petición POST para añadir una nueva valoración a una actividad.\n   * @param activityRate objeto con la valoración del usuario a una actividad\n   * @returns el observable con la información enviada por la API \n   */\n  public postRateActivity(activityRate): Observable{\n    return this.httpClient.post(this.activityUrl + '/rate', activityRate);\n  }\n\n  /**\n   * Método que realiza una petición GET para obtener la lista de actividades recomendadas al usuario.\n   * @param idUser identificador del usuario\n   * @returns el observable con la información enviada por la API\n   */\n  public getRecommendedActivities(idUser): Observable {\n    return this.httpClient.get(this.activityUrl + '/recommedation/' + idUser, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición GET para obtener la lista de actividades valoradas por el usuario.\n   * @param idUser identificador del usuario\n   * @returns el observable con la información enviada por la API\n   */\n  public getRatedActivities(idUser): Observable {\n    return this.httpClient.get(this.activityUrl + '/ratedActivities/' + idUser, cabecera);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddActivityComponent.html":{"url":"components/AddActivityComponent.html","title":"component - AddActivityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddActivityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-activity/add-activity.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-activity\n            \n\n            \n                styleUrls\n                ./add-activity.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-activity.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                files\n                            \n                            \n                                formAddActivity\n                            \n                            \n                                infoMessage\n                            \n                            \n                                interest\n                            \n                            \n                                noFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActivity\n                            \n                            \n                                dealWithFiles\n                            \n                            \n                                deleteFiles\n                            \n                            \n                                loadInterest\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, cityService: CityService, interestService: InterestService, activityService: ActivityService, router: Router, translateService: TranslateService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-activity/add-activity.component.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor de la clase AddActivityComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Clase que permite crear objetos de la clase FormGroup y FormControl.\n\n                                                        \n                                                \n                                                \n                                                        cityService\n                                                  \n                                                        \n                                                                        CityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de localidades\n\n                                                        \n                                                \n                                                \n                                                        interestService\n                                                  \n                                                        \n                                                                        InterestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de intereses\n\n                                                        \n                                                \n                                                \n                                                        activityService\n                                                  \n                                                        \n                                                                        ActivityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de actividades\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite la navegación entre vistas\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addActivity\n                        \n                        \n                    \n                \n            \n            \n                \naddActivity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-activity/add-activity.component.ts:167\n                \n            \n\n\n            \n                \n                    Método que crea un objeto FormData a partir de los datos introducidos en el formulario y se lo envía a la API.\nUna vez enviado, también será el encargado de redirigir al usuario al component TableActivities y de mostrar un mensaje al usuario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dealWithFiles\n                        \n                        \n                    \n                \n            \n            \n                \ndealWithFiles(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-activity/add-activity.component.ts:147\n                \n            \n\n\n            \n                \n                    Método que guarda en una variable el archivo seleccionado.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Evento que se produce cuando un archivo es seleccionado.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteFiles\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteFiles(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-activity/add-activity.component.ts:158\n                \n            \n\n\n            \n                \n                    Método que deshabilita el botón enviar cuando el usuario elimina el archivo imagen del campo de selección de ficheros.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Evento que se produce cuando un archivo es eliminado utilizando el botón correspondiente.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadInterest\n                        \n                        \n                    \n                \n            \n            \n                \nloadInterest()\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-activity/add-activity.component.ts:129\n                \n            \n\n\n            \n                \n                    Método que obtiene los intereses de la API y los almacena.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-activity/add-activity.component.ts:87\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n  \n      Inicializará el formulario con los campos.\n      Creará el mapa.\n      Cargará los distintos intereses.\n  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            files\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-activity/add-activity.component.ts:41\n                            \n                        \n\n                \n                    \n                        Almacena el archivo imagen seleccionado por el usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formAddActivity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-activity/add-activity.component.ts:33\n                            \n                        \n\n                \n                    \n                        Formulario para añadir una actividad.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            infoMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-activity/add-activity.component.ts:49\n                            \n                        \n\n                \n                    \n                        Almacena el mensaje que se muestra al usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SelectItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-activity/add-activity.component.ts:37\n                            \n                        \n\n                \n                    \n                        Array de objetos SelectItem para almacenar las distintas opciones del componente dropdown de intereses.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noFiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-activity/add-activity.component.ts:45\n                            \n                        \n\n                \n                    \n                        Indica si el usuario ha seleccionado una imagen o la ha eliminado.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {CityService} from '../services/city/city.service';\nimport {InterestService} from '../services/interest/interest.service';\nimport {MessageService, SelectItem} from 'primeng/api';\nimport * as L from 'leaflet';\nimport 'leaflet-control-geocoder';\nimport 'leaflet/dist/images/marker-shadow.png';\nimport 'leaflet/dist/images/marker-icon-2x.png';\nimport {ActivityService} from '../services/activity/activity.service';\nimport {Router} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\nimport {validadorNonwhiteSpace} from '../validators/validatorNonWhiteSpace.directive';\n\n@Component({\n  selector: 'app-add-activity',\n  templateUrl: './add-activity.component.html',\n  styleUrls: ['./add-activity.component.scss']\n})\n/**\n * Clase AddActivityComponent.\n *\n * Clase que permite añadir una nueva actividad.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class AddActivityComponent implements OnInit {\n\n  /**\n   * Formulario para añadir una actividad.\n   */\n  formAddActivity: FormGroup;\n  /**\n   * Array de objetos SelectItem para almacenar las distintas opciones del componente dropdown de intereses.\n   */\n  interest: SelectItem[];\n  /**\n   * Almacena el archivo imagen seleccionado por el usuario.\n   */\n  files = null;\n  /**\n   * Indica si el usuario ha seleccionado una imagen o la ha eliminado.\n   */\n  noFiles: boolean = true;\n  /**\n   * Almacena el mensaje que se muestra al usuario.\n   */\n  infoMessage = [];\n\n  /**\n   * Constructor de la clase AddActivityComponent\n   *\n   * @param formBuilder\n   * Clase que permite crear objetos de la clase FormGroup y FormControl.\n   * @param cityService\n   * Servicio de localidades\n   * @param interestService\n   * Servicio de intereses\n   * @param activityService\n   * Servicio de actividades\n   * @param router\n   * Servicio que permite la navegación entre vistas\n   * @param translateService\n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   * @param messageService\n   * Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private cityService: CityService,\n    private interestService: InterestService,\n    private activityService: ActivityService,\n    private router: Router,\n    private translateService: TranslateService,\n    private messageService: MessageService,\n  ) { }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   *  \n   *      Inicializará el formulario con los campos.\n   *      Creará el mapa.\n   *      Cargará los distintos intereses.\n   *  \n   */\n  ngOnInit(): void {\n    this.formAddActivity = this.formBuilder.group({\n      name: ['', [Validators.required, validadorNonwhiteSpace()]],\n      description: ['', [Validators.required, validadorNonwhiteSpace()]],\n      latitude: ['', [Validators.required]],\n      longitude: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      nameInterest: ['', [Validators.required]],\n      address: ['', Validators.required]\n    });\n\n    var map = L.map('mapActivity').setView([43.333333, -6], 8);\n\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; OpenStreetMap'\n    }).addTo(map);\n\n    var opciones = {\n      placeholder: 'Escriba la dirección...',\n      errorMessage: 'No se han encontrado direcciones'\n    };\n\n    var control = L.Control.geocoder(opciones).on('markgeocode', function (e) {\n\n      var latitud = e.geocode.center.lat;\n      this.formAddActivity.controls['latitude'].setValue(latitud);\n\n      var longitud = e.geocode.center.lng;\n      this.formAddActivity.controls['longitude'].setValue(longitud);\n\n      var council = e.geocode.properties.address.city || e.geocode.properties.address.town || e.geocode.properties.address.village;\n      this.formAddActivity.controls['city'].setValue(council);\n\n      this.formAddActivity.controls['address'].setValue(e.geocode.name);\n    }.bind(this)).addTo(map);\n\n    this.loadInterest();\n  }\n\n  /**\n   * Método que obtiene los intereses de la API y los almacena.\n   */\n  loadInterest(){\n    this.interestService.getInterests().subscribe(\n      data => {\n        this.interest = [];\n        this.interest.push({label: 'Selecciona interés', value: null});\n        data.forEach( i => {\n          this.interest.push({label: i.nameInterest, value: i.nameInterest});\n        });\n      }\n    );\n  }\n\n  /**\n   * Método que guarda en una variable el archivo seleccionado.\n   *\n   * @param event\n   * Evento que se produce cuando un archivo es seleccionado.\n   */\n  dealWithFiles(event){\n    this.files = event.files[0];\n    this.noFiles = false;\n  }\n\n  /**\n   * Método que deshabilita el botón enviar cuando el usuario elimina el archivo imagen del campo de selección de ficheros.\n   *\n   * @param event\n   * Evento que se produce cuando un archivo es eliminado utilizando el botón correspondiente.\n   */\n  deleteFiles(event){\n    this.files = null;\n    this.noFiles = true;\n  }\n\n  /**\n   * Método que crea un objeto FormData a partir de los datos introducidos en el formulario y se lo envía a la API.\n   * Una vez enviado, también será el encargado de redirigir al usuario al component TableActivities y de mostrar un mensaje al usuario.\n   */\n  addActivity(){\n    if (this.files !== null && this.formAddActivity.valid){\n      const formData = new FormData();\n      formData.append('image', this.files);\n      formData.append('name', this.formAddActivity.get('name').value);\n      formData.append('description', this.formAddActivity.get('description').value);\n      formData.append('latitude', this.formAddActivity.get('latitude').value);\n      formData.append('longitude', this.formAddActivity.get('longitude').value);\n      formData.append('city', this.formAddActivity.get('city').value);\n      formData.append('interest', this.formAddActivity.get('nameInterest').value);\n      formData.append('address', this.formAddActivity.get('address').value);\n\n      this.translateService.onLangChange.subscribe(event => {\n        var aux = this.infoMessage;\n        this.infoMessage = [];\n        for (let message of aux){\n          var mAux = message;\n          mAux.summary = this.translateService.instant(\"error\");\n          mAux.detail = this.translateService.instant(message.keyTranslate);\n          this.infoMessage.push(mAux);\n        }\n      });\n\n      this.activityService.addActivity(formData).subscribe(\n        data => {\n\n          var message = this.translateService.instant('activity_add_message',{ 'nameActivity': this.formAddActivity.get('name').value });\n          this.messageService.add({key: 'activity_added', severity: 'success', summary: this.translateService.instant('activity_add'), detail:message});\n\n          setTimeout(() => {\n            this.router.navigate(['/activities']);\n          }, 1500);\n        },\n        err => {\n          if (err.error.mensaje === \"La ciudad no existe\"){\n            var message = this.translateService.instant('error_city_council');\n            this.infoMessage = [\n              { key: 'add_activity_error', severity:'error', summary: this.translateService.instant('error'), detail: message, keyTranslate: 'error_city_council'}\n            ];\n          }\n          else if (err.error.mensaje.includes(\"Ya existe una actividad con el nombre\")){\n            var message = this.translateService.instant('error_activity_repeated');\n            this.infoMessage = [\n              { key: 'add_activity_error', severity:'error', summary: this.translateService.instant('error'), detail: message, keyTranslate: 'error_activity_repeated'}\n            ];\n          }\n        }\n      );\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n  {{ 'add_activity' | translate }}\n  \n  \n    \n      \n        \n          \n            {{ 'name_activity' | translate }}*:\n            \n          \n          \n            {{ 'description_activity' | translate }}*:\n            \n          \n          \n            {{ 'interest' | translate }}*:\n            \n            \n          \n          \n            {{ 'image' | translate }}*:\n            \n            \n            {{ 'message_file_required' | translate }}\n          \n        \n      \n      \n        {{ 'message_info_map' | translate }}*:\n        \n      \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./add-activity.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.add-activity-container {\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n\n  h1{\n    text-align:center;\n  }\n\n  ::ng-deep .p-messages{\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n}\n\n.form_add_activity_container{\n  display: flex;\n}\n\n.input_container, .map_container{\n  width: 50%;\n}\n\n.grid-container{\n  width: 40vw;\n  min-width: 375px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 5px;\n}\n\n.button_add_activity_container{\n  text-align: right;\n\n  ::ng-deep .p-button{\n    margin: 5px;\n  }\n}\n\n#mapActivity{\n  width: 45vw;\n  height: 40vw;\n  min-height: 400px;\n  min-width: 390px;\n}\n\n.fileUploadAddActivity {\n  ::ng-deep .p-fileupload-row{\n    div:nth-child(2) {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n  }\n}\n\n.message-error{\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'add_activity\\' | translate }}                                            {{ \\'name_activity\\' | translate }}*:                                            {{ \\'description_activity\\' | translate }}*:                                            {{ \\'interest\\' | translate }}*:                                                        {{ \\'image\\' | translate }}*:                                    {{ \\'message_file_required\\' | translate }}                                      {{ \\'message_info_map\\' | translate }}*:                                  '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddActivityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, config: PrimeNGConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    PrimeNGConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {PrimeNGConfig} from 'primeng/api';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(public translate: TranslateService, private config: PrimeNGConfig){\n    translate.addLangs(['en', 'es']);\n    translate.setDefaultLang('es');\n    translate.use('es');\n    this.translate.get('primeng').subscribe(res => this.config.setTranslation(res));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddActivityComponent\n\nAddActivityComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddActivityComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditActivitiesComponent\n\nEditActivitiesComponent\n\nAppModule -->\n\nEditActivitiesComponent->AppModule\n\n\n\n\n\nEditUserAdminComponent\n\nEditUserAdminComponent\n\nAppModule -->\n\nEditUserAdminComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nInformationActivitiesComponent\n\nInformationActivitiesComponent\n\nAppModule -->\n\nInformationActivitiesComponent->AppModule\n\n\n\n\n\nListActivitiesEvaluateComponent\n\nListActivitiesEvaluateComponent\n\nAppModule -->\n\nListActivitiesEvaluateComponent->AppModule\n\n\n\n\n\nListCitiesComponent\n\nListCitiesComponent\n\nAppModule -->\n\nListCitiesComponent->AppModule\n\n\n\n\n\nListInterestComponent\n\nListInterestComponent\n\nAppModule -->\n\nListInterestComponent->AppModule\n\n\n\n\n\nListUserComponent\n\nListUserComponent\n\nAppModule -->\n\nListUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nMenuBarComponent\n\nMenuBarComponent\n\nAppModule -->\n\nMenuBarComponent->AppModule\n\n\n\n\n\nRecommendationComponent\n\nRecommendationComponent\n\nAppModule -->\n\nRecommendationComponent->AppModule\n\n\n\n\n\nRecommendationMapComponent\n\nRecommendationMapComponent\n\nAppModule -->\n\nRecommendationMapComponent->AppModule\n\n\n\n\n\nSignUpComponent\n\nSignUpComponent\n\nAppModule -->\n\nSignUpComponent->AppModule\n\n\n\n\n\nTableActivitiesComponent\n\nTableActivitiesComponent\n\nAppModule -->\n\nTableActivitiesComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nAppModule -->\n\nNotificationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddActivityComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            EditActivitiesComponent\n                        \n                        \n                            EditUserAdminComponent\n                        \n                        \n                            EditUserComponent\n                        \n                        \n                            InformationActivitiesComponent\n                        \n                        \n                            ListActivitiesEvaluateComponent\n                        \n                        \n                            ListCitiesComponent\n                        \n                        \n                            ListInterestComponent\n                        \n                        \n                            ListUserComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MapComponent\n                        \n                        \n                            MenuBarComponent\n                        \n                        \n                            RecommendationComponent\n                        \n                        \n                            RecommendationMapComponent\n                        \n                        \n                            SignUpComponent\n                        \n                        \n                            TableActivitiesComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport {APP_INITIALIZER, LOCALE_ID, NgModule} from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport {ButtonModule} from 'primeng/button';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport {PasswordModule} from 'primeng/password';\nimport { MenuBarComponent } from './menu-bar/menu-bar.component';\nimport {MenubarModule} from 'primeng/menubar';\nimport {InputNumberModule} from 'primeng/inputnumber';\n\nimport {DropdownModule} from 'primeng/dropdown';\nimport {MessageModule} from 'primeng/message';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { RecommendationComponent } from './recommendation/recommendation.component';\nimport {interceptorProvider} from './interceptors/interceptor.service';\nimport { MapComponent } from './map/map.component';\nimport { TableActivitiesComponent } from './table-activities/table-activities.component';\nimport {TableModule} from 'primeng/table';\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\nimport {ConfirmationService, Message, MessageService} from 'primeng/api';\nimport {ToolbarModule} from 'primeng/toolbar';\nimport {DialogModule} from 'primeng/dialog';\nimport {FileUploadModule} from 'primeng/fileupload';\nimport {InputTextareaModule} from 'primeng/inputtextarea';\nimport { ListCitiesComponent } from './list-cities/list-cities.component';\nimport {VirtualScrollerModule} from 'primeng/virtualscroller';\nimport {OrderListModule} from 'primeng/orderlist';\nimport { ListInterestComponent } from './list-interest/list-interest.component';\nimport { ListUserComponent } from './list-user/list-user.component';\nimport {TabPanel, TabViewModule} from 'primeng/tabview';\nimport {TabMenuModule} from 'primeng/tabmenu';\nimport {CardModule} from 'primeng/card';\nimport {StepsModule} from 'primeng/steps';\nimport {DialogService} from 'primeng/dynamicdialog';\nimport {TooltipModule} from 'primeng/tooltip';\nimport { InformationActivitiesComponent } from './information-activities/information-activities.component';\nimport {ToastModule} from 'primeng/toast';\nimport { EditActivitiesComponent } from './edit-activities/edit-activities.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport {CheckboxModule} from 'primeng/checkbox';\nimport {MessagesModule} from 'primeng/messages';\nimport {NotificationService} from './services/message/notification.service';\nimport { EditUserAdminComponent } from './edit-user-admin/edit-user-admin.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport {ScrollPanelModule} from 'primeng/scrollpanel';\nimport {RadioButtonModule} from 'primeng/radiobutton';\nimport {CalendarModule} from 'primeng/calendar';\nimport {AddActivityComponent} from './add-activity/add-activity.component';\nimport { ListActivitiesEvaluateComponent } from './list-activities-evaluate/list-activities-evaluate.component';\nimport {DataViewModule} from 'primeng/dataview';\nimport {RatingModule} from 'primeng/rating';\nimport {ChipModule} from 'primeng/chip';\nimport {TagModule} from 'primeng/tag';\nimport {RecommendationMapComponent} from './recommendation-map/recommendation-map.component';\nimport {MultiSelectModule} from 'primeng/multiselect';\nimport {ListboxModule} from 'primeng/listbox';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignUpComponent,\n    MenuBarComponent,\n    RecommendationComponent,\n    MapComponent,\n    TableActivitiesComponent,\n    ListCitiesComponent,\n    ListInterestComponent,\n    ListUserComponent,\n    InformationActivitiesComponent,\n    EditActivitiesComponent,\n    EditUserAdminComponent,\n    EditUserComponent,\n    AddActivityComponent,\n    ListActivitiesEvaluateComponent,\n    RecommendationMapComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ButtonModule,\n    InputTextModule,\n    ReactiveFormsModule,\n    PasswordModule,\n    MenubarModule,\n    InputNumberModule,\n    DropdownModule,\n    MessageModule,\n    TableModule,\n    ConfirmDialogModule,\n    ToolbarModule,\n    DialogModule,\n    FileUploadModule,\n    InputTextareaModule,\n    FormsModule,\n    VirtualScrollerModule,\n    OrderListModule,\n    TabViewModule,\n    TabMenuModule,\n    CardModule,\n    StepsModule,\n    TooltipModule,\n    ToastModule,\n    CheckboxModule,\n    MessagesModule,\n    ScrollPanelModule,\n    RadioButtonModule,\n    CalendarModule,\n    DataViewModule,\n    RatingModule,\n    TagModule,\n    MultiSelectModule,\n    ListboxModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpTranslateLoader,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  providers: [\n    interceptorProvider,\n    ConfirmationService,\n    DialogService,\n    MessageService,\n    NotificationService\n  ],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n\nexport function httpTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {SignUpComponent} from './sign-up/sign-up.component';\nimport {RecommendationComponent} from './recommendation/recommendation.component';\nimport {AuthGuardService} from './guards/auth-guard/auth-guard.service';\nimport {IsLogginInGuardService} from './guards/isLogginInGuard/is-loggin-in-guard.service';\nimport {MapComponent} from './map/map.component';\nimport {TableActivitiesComponent} from './table-activities/table-activities.component';\nimport {ListCitiesComponent} from './list-cities/list-cities.component';\nimport {ListInterestComponent} from './list-interest/list-interest.component';\nimport {ListUserComponent} from './list-user/list-user.component';\nimport {EditUserComponent} from './edit-user/edit-user.component';\nimport {RoleGuardService} from './guards/RoleGuard/role-guard.service';\nimport {EditActivitiesComponent} from './edit-activities/edit-activities.component';\nimport {EditUserAdminComponent} from './edit-user-admin/edit-user-admin.component';\nimport {AddActivityComponent} from './add-activity/add-activity.component';\nimport { ListActivitiesEvaluateComponent } from './list-activities-evaluate/list-activities-evaluate.component';\nimport {RecommendationMapComponent} from './recommendation-map/recommendation-map.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'login', pathMatch: 'full'},\n  {path: 'login', component: LoginComponent, resolve: [IsLogginInGuardService]},\n  {path: 'signup', component: SignUpComponent},\n  {path: 'recommendation', component: RecommendationComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: ['user', 'admin']\n  }},\n  {path: 'map', component: MapComponent},\n  {path: 'activities', component: TableActivitiesComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: 'admin'\n  }},\n  {path: 'activities/edit/:id', component: EditActivitiesComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: 'admin'\n  }},\n  {path: 'activities/add', component: AddActivityComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: 'admin'\n    }},\n  {path: 'cities', component: ListCitiesComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: 'admin'\n    }},\n  {path: 'interest', component: ListInterestComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: 'admin'\n  }},\n  {path: 'user', component: ListUserComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: 'admin'\n  }},\n  {path: 'admin/user/edit/:id', component: EditUserAdminComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: 'admin'\n  }},\n  {path: 'profile/edit', component: EditUserComponent, canActivate: [AuthGuardService]},\n  {path: 'recommendationMap', component: RecommendationMapComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: ['user', 'admin']\n    }\n  },\n  {\n    path: 'activitiesEvaluate', component: ListActivitiesEvaluateComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: ['user', 'admin']\n    }\n  },\n  {path: '**', redirectTo: 'login', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth-guard/auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth-guard/auth-guard.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/auth-guard/auth-guard.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {LocalStorageService} from '../../services/local-storage/local-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(private router: Router, private localStorageService: LocalStorageService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.localStorageService.getToken()){\n      return true;\n    }\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor de la clase AuthService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                objeto que permite hacer peticiones a la API y obtener resultados de la misma\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: UserLogin)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:38\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para autenticar al usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto usuario que incluye la información del usuario que se intenta autenticar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(user: UserSignUp)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:47\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para registrar a un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserSignUp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto usuario que incluye la información del usuario que se registra\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/auth'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {UserLogin, UserSignUp} from '../../models/user';\nimport {JwtModel} from '../../models/jwt_model';\n\n/**\n * Encabezado para las peticiones y respuestas HTTP\n */\nconst cabecera = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clase AuthService\n * \n * Clase que se encarga de realizar peticiones a la API relacionadas con la autenticación.\n */\nexport class AuthService {\n\n  /**\n   * Almacena la url del endpoint\n   */\n  authURL = 'http://localhost:8090/api/auth';\n\n  /**\n   * Constructor de la clase AuthService\n   * @param httpClient objeto que permite hacer peticiones a la API y obtener resultados de la misma\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Método que realiza una petición POST para autenticar al usuario.\n   * @param user objeto usuario que incluye la información del usuario que se intenta autenticar\n   * @returns el observable con la información enviada por la API\n   */\n  public login(user: UserLogin): Observable {\n    return this.httpClient.post(this.authURL + '/login', user, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición POST para registrar a un usuario.\n   * @param user objeto usuario que incluye la información del usuario que se registra\n   * @returns el observable con la información enviada por la API\n   */\n  public signUp(user: UserSignUp): Observable {\n    return this.httpClient.post(this.authURL + '/signup', user, cabecera);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/City.html":{"url":"classes/City.html","title":"class - City","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  City\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/city.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/city.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/city.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class City {\n  id: number;\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CityService.html":{"url":"injectables/CityService.html","title":"injectable - CityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/city/city.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cityURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addCity\n                            \n                            \n                                    Public\n                                deleteCity\n                            \n                            \n                                    Public\n                                editCity\n                            \n                            \n                                    Public\n                                getCities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/city/city.service.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor de la clase CityService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                objeto que permite hacer peticiones a la API y obtener resultados de la misma\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCity(city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/city/city.service.ts:47\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para añadir una nueva localidad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto interés que incluye la información de la nueva localidad\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCity(city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/city/city.service.ts:56\n                \n            \n\n\n            \n                \n                    Método que realiza una petición DELETE para eliminar una localidad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto localidad que se quiere eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editCity(id, city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/city/city.service.ts:66\n                \n            \n\n\n            \n                \n                    Método que realiza una petición PUT para modificar la información de una localidad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador de la localidad\n\n                                    \n                                \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto localidad con la información actualizada. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCities()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/city/city.service.ts:38\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de localidades.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cityURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/city'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/city/city.service.ts:26\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {UserLogin} from '../../models/user';\nimport {Observable} from 'rxjs';\nimport {JwtModel} from '../../models/jwt_model';\nimport {City} from '../../models/city';\n\n/**\n * Encabezado para las peticiones y respuestas HTTP\n */\nconst cabecera = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clase CityService\n * \n * Clase que se encarga de realizar peticiones a la API relacionadas con las localidades.\n */\nexport class CityService {\n\n  /**\n   * Almacena la url del endpoint\n   */\n  cityURL = 'http://localhost:8090/api/city';\n\n  /**\n   * Constructor de la clase CityService\n   * @param httpClient objeto que permite hacer peticiones a la API y obtener resultados de la misma\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Método que realiza una petición GET para obtener la lista de localidades.\n   * @returns el observable con la información enviada por la API\n   */\n  public getCities(): Observable {\n    return this.httpClient.get(this.cityURL + '/list', cabecera);\n  }\n\n  /**\n   * Método que realiza una petición POST para añadir una nueva localidad.\n   * @param city  objeto interés que incluye la información de la nueva localidad\n   * @returns el observable con la información enviada por la API\n   */\n  public addCity(city): Observable {\n    return this.httpClient.post(this.cityURL + '/add', city, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición DELETE para eliminar una localidad.\n   * @param city objeto localidad que se quiere eliminar\n   * @returns el observable con la información enviada por la API\n   */\n  public deleteCity(city): Observable {\n    return this.httpClient.delete(this.cityURL + '/delete/' + city.id, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición PUT para modificar la información de una localidad.\n   * @param id identificador de la localidad\n   * @param city objeto localidad con la información actualizada. \n   * @returns el observable con la información enviada por la API\n   */\n  public editCity(id, city): Observable {\n    return this.httpClient.put(this.cityURL + '/update/' + id, city, cabecera);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditActivitiesComponent.html":{"url":"components/EditActivitiesComponent.html","title":"component - EditActivitiesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditActivitiesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-activities/edit-activities.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-activities\n            \n\n            \n                styleUrls\n                ./edit-activities.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-activities.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activity\n                            \n                            \n                                activityId\n                            \n                            \n                                editActivitiesForm\n                            \n                            \n                                file\n                            \n                            \n                                image\n                            \n                            \n                                infoMessage\n                            \n                            \n                                interest\n                            \n                            \n                                valueUnchanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeImage\n                            \n                            \n                                dataURItoBlob\n                            \n                            \n                                deleteFiles\n                            \n                            \n                                editActivity\n                            \n                            \n                                isEquivalent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                observeChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, interestService: InterestService, activityService: ActivityService, activatedRoute: ActivatedRoute, router: Router, sanitizer: DomSanitizer, translateService: TranslateService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-activities/edit-activities.component.ts:60\n                            \n                        \n\n                \n                    \n                            Constructor de la clase EditActivitiesComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Clase que permite crear objetos de la clase FormGroup y FormControl.\n\n                                                        \n                                                \n                                                \n                                                        interestService\n                                                  \n                                                        \n                                                                        InterestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de intereses\n\n                                                        \n                                                \n                                                \n                                                        activityService\n                                                  \n                                                        \n                                                                        ActivityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de actividades\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Proporciona acceso a la información sobre una ruta asociada a un componente que se carga.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite la navegación entre vistas\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeImage\n                        \n                        \n                    \n                \n            \n            \n                \nchangeImage(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-activities/edit-activities.component.ts:306\n                \n            \n\n\n            \n                \n                    Método que cambia dinámicamente el src de una etiqueta img en el DOM\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Evento que se produce cuando un archivo es seleccionado.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dataURItoBlob\n                        \n                        \n                    \n                \n            \n            \n                \ndataURItoBlob(dataURI: any, fileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-activities/edit-activities.component.ts:186\n                \n            \n\n\n            \n                \n                    Método que convierte la información codificada en base64 en un objeto File.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dataURI\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Url con la información codificada en base64\n\n                                    \n                                \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nombre del archivo\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     File\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteFiles\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteFiles(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-activities/edit-activities.component.ts:320\n                \n            \n\n\n            \n                \n                    Método que deshabilita el botón enviar cuando el usuario elimina el archivo imagen del campo de selección de ficheros.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Evento que se produce cuando un archivo es eliminado utilizando el botón correspondiente.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editActivity\n                        \n                        \n                    \n                \n            \n            \n                \neditActivity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-activities/edit-activities.component.ts:240\n                \n            \n\n\n            \n                \n                    Método que crea un objeto FormData a partir de los datos del formulario y se lo envía a la API.\nUna vez enviado, también será el encargado de redirigir al usuario al componente TableActivities y de mostrar un mensaje al usuario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEquivalent\n                        \n                        \n                    \n                \n            \n            \n                \nisEquivalent(a, b)\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-activities/edit-activities.component.ts:223\n                \n            \n\n\n            \n                \n                    Método que compara dos objetos JSON. Devuelve true si son iguales y false en caso contrario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Primer objeto a comparar.\n\n                                    \n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Segundo objeto a comparar.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-activities/edit-activities.component.ts:103\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n  \n      El id de la actividad.\n      Inicializará el formulario con los datos de la actividad.\n      Creará el mapa con el correspondiente marcador.\n      Cargará los dintintos intereses y la información de la actividad.\n      Saneará la URL de la imagen asociada a la actividad.\n  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            observeChanges\n                        \n                        \n                    \n                \n            \n            \n                \nobserveChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-activities/edit-activities.component.ts:210\n                \n            \n\n\n            \n                \n                    Método que se ejecuta cuando algún valor del formulario cambia.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activity\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-activities/edit-activities.component.ts:44\n                            \n                        \n\n                \n                    \n                        Almacena la actividad seleccionada para editar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activityId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-activities/edit-activities.component.ts:40\n                            \n                        \n\n                \n                    \n                        Almacena el id de la actividad seleccionada para editar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editActivitiesForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-activities/edit-activities.component.ts:32\n                            \n                        \n\n                \n                    \n                        Formulario para editar la información de una actividad.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            file\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-activities/edit-activities.component.ts:48\n                            \n                        \n\n                \n                    \n                        Almacena el archivo imagen.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-activities/edit-activities.component.ts:52\n                            \n                        \n\n                \n                    \n                        Almacena la url de la imagen saneada.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            infoMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-activities/edit-activities.component.ts:60\n                            \n                        \n\n                \n                    \n                        Almacena el mensaje que se muestra al usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SelectItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-activities/edit-activities.component.ts:36\n                            \n                        \n\n                \n                    \n                        Array de objetos SelectItem para almacenar las distintas opciones del componente dropdown de intereses.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueUnchanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-activities/edit-activities.component.ts:56\n                            \n                        \n\n                \n                    \n                        Indica si el formulario tiene algún cambio o no.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MessageService, SelectItem} from 'primeng/api';\nimport {forkJoin} from 'rxjs';\nimport {CityService} from '../services/city/city.service';\nimport {InterestService} from '../services/interest/interest.service';\nimport {ActivityService} from '../services/activity/activity.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport * as L from 'leaflet';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {TranslateService} from '@ngx-translate/core';\nimport {validadorNonwhiteSpace} from '../validators/validatorNonWhiteSpace.directive';\n\n@Component({\n  selector: 'app-edit-activities',\n  templateUrl: './edit-activities.component.html',\n  styleUrls: ['./edit-activities.component.scss']\n})\n/**\n * Clase EditActivitiesComponent\n *\n * Clase que permite editar la información de una actividad.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class EditActivitiesComponent implements OnInit {\n\n  /**\n   * Formulario para editar la información de una actividad.\n   */\n  editActivitiesForm: FormGroup;\n  /**\n   * Array de objetos SelectItem para almacenar las distintas opciones del componente dropdown de intereses.\n   */\n  interest: SelectItem[];\n  /**\n   * Almacena el id de la actividad seleccionada para editar.\n   */\n  activityId;\n  /**\n   * Almacena la actividad seleccionada para editar.\n   */\n  activity;\n  /**\n   * Almacena el archivo imagen.\n   */\n  file;\n  /**\n   * Almacena la url de la imagen saneada.\n   */\n  image;\n  /**\n   * Indica si el formulario tiene algún cambio o no.\n   */\n  valueUnchanged: boolean = true;\n  /**\n   * Almacena el mensaje que se muestra al usuario.\n   */\n  infoMessage = [];\n\n  /**\n   * Constructor de la clase EditActivitiesComponent\n   *\n   * @param fb\n   * Clase que permite crear objetos de la clase FormGroup y FormControl.\n   * @param interestService\n   * Servicio de intereses\n   * @param activityService\n   * Servicio de actividades\n   * @param activatedRoute\n   * Proporciona acceso a la información sobre una ruta asociada a un componente que se carga.\n   * @param router\n   * Servicio que permite la navegación entre vistas\n   * @param sanitizer\n   * Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n   * @param translateService\n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   * @param messageService\n   * Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n   */\n  constructor(\n    private fb: FormBuilder,\n    private interestService: InterestService,\n    private activityService: ActivityService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private sanitizer: DomSanitizer,\n    private translateService: TranslateService,\n    private messageService: MessageService\n  ) { }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   *  \n   *      El id de la actividad.\n   *      Inicializará el formulario con los datos de la actividad.\n   *      Creará el mapa con el correspondiente marcador.\n   *      Cargará los dintintos intereses y la información de la actividad.\n   *      Saneará la URL de la imagen asociada a la actividad.\n   *  \n   */\n  ngOnInit(): void {\n    this.activityId = this.activatedRoute.snapshot.paramMap.get('id');\n\n    this.editActivitiesForm = this.fb.group({\n      name: ['', [Validators.required, validadorNonwhiteSpace()]],\n      description: ['', [Validators.required, validadorNonwhiteSpace()]],\n      latitude: ['', Validators.required],\n      longitude: ['', Validators.required],\n      city: ['', Validators.required],\n      interest: ['', Validators.required],\n      address: ['', Validators.required]\n    });\n\n    forkJoin([\n      this.interestService.getInterests(),\n      this.activityService.getActivity(this.activityId)\n    ]).subscribe(([response1, response2]) => {\n      this.interest = [];\n      response1.forEach( i => {\n        this.interest.push({label: i.nameInterest, value: i.nameInterest});\n      });\n      this.activity = response2;\n      this.editActivitiesForm.patchValue(\n        {\n          name: response2.name,\n          description: response2.description,\n          latitude: response2.latitude,\n          longitude: response2.longitude,\n          city: response2.city,\n          interest: response2.interest,\n          address: response2.address\n        }\n      );\n\n      var map = L.map('mapActivityEdit').setView([response2.latitude, response2.longitude], 8);\n\n      const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap'\n      }).addTo(map);\n\n      var opciones = {\n        placeholder: \"Escriba la dirección...\",\n        errorMessage: \"No se han encontrado direcciones\",\n      };\n\n      var control = L.Control.geocoder(opciones).on('markgeocode', function (e) {\n\n        var latitud = e.geocode.center.lat;\n        this.editActivitiesForm.controls['latitude'].setValue(latitud);\n\n        var longitud = e.geocode.center.lng;\n        this.editActivitiesForm.controls['longitude'].setValue(longitud);\n\n        var council = e.geocode.properties.address.city || e.geocode.properties.address.town || e.geocode.properties.address.village;\n        console.log(council);\n        this.editActivitiesForm.controls['city'].setValue(council);\n\n        this.editActivitiesForm.controls['address'].setValue(e.geocode.name);\n      }.bind(this)).addTo(map);\n\n      control.options.geocoder.geocode(response2.address, function(results) {\n          var resultado = results[0];\n          if (resultado)\n            control.markGeocode(resultado);\n        }\n      );\n\n      var url = 'data:' + this.activity.metadataImage.mimeType + ';base64,' + this.activity.metadataImage.data;\n      this.image = this.sanitizer.bypassSecurityTrustUrl(url);\n\n      this.file = this.dataURItoBlob(url, this.activity.pathImage);\n\n      this.observeChanges();\n    });\n  }\n\n  /**\n   * Método que convierte la información codificada en base64 en un objeto File.\n   * @param dataURI\n   * Url con la información codificada en base64\n   * @param fileName\n   * Nombre del archivo\n   */\n  dataURItoBlob(dataURI: any, fileName: string): File{\n\n    // convert base64/URLEncoded data component to a file\n    var byteString;\n    if (dataURI.split(',')[0].indexOf('base64') >= 0)\n      byteString = atob(dataURI.split(',')[1]);\n    else\n      byteString = unescape(dataURI.split(',')[1]);\n\n    // separate out the mime component\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n    // write the bytes of the string to a typed array\n    var ia = new Uint8Array(byteString.length);\n    for (var i = 0; i  {\n      this.isEquivalent(this.activity, values);\n    });\n  }\n\n  /**\n   * Método que compara dos objetos JSON. Devuelve true si son iguales y false en caso contrario.\n   * @param a\n   * Primer objeto a comparar.\n   * @param b\n   * Segundo objeto a comparar.\n   */\n  isEquivalent(a, b) {\n    this.valueUnchanged = true;\n    var aProps = Object.keys(a);\n    var bProps = Object.keys(b);\n    for (var i = 0; i  {\n      var aux = this.infoMessage;\n      this.infoMessage = [];\n      for (let message of aux){\n        var mAux = message;\n        mAux.summary = this.translateService.instant(\"error\");\n        mAux.detail = this.translateService.instant(message.keyTranslate);\n        this.infoMessage.push(mAux);\n      }\n    });\n\n    this.activityService.editActivity(this.activityId, formData).subscribe(\n      data => {\n\n        var message = this.translateService.instant('activity_edit_message',{ 'nameActivity': this.editActivitiesForm.get('name').value });\n        this.messageService.add({key: 'activity_edited', severity: 'success', summary: this.translateService.instant('activity_edit'), detail: message});\n\n        setTimeout(() => {\n          this.router.navigate(['/activities']);\n        }, 1500);\n      },\n      err => {\n        if (err.error.mensaje === \"La ciudad no existe\"){\n          var message = this.translateService.instant('error_city_council');\n          this.infoMessage = [\n            {\n              key: 'edit_activity_error',\n              severity: 'error',\n              summary: this.translateService.instant('error'),\n              detail: message,\n              keyTranslate: 'error_city_council'\n            }\n          ];\n        }\n        else if (err.error.mensaje.includes(\"Ya hay una actividad con ese nombre\")) {\n          var message = this.translateService.instant('error_activity_repeated');\n          this.infoMessage = [\n            {\n              key: 'edit_activity_error',\n              severity: 'error',\n              summary: this.translateService.instant('error'),\n              detail: message,\n              keyTranslate: 'error_activity_repeated'\n            }\n          ];\n        }\n      }\n    );\n  }\n\n  /**\n   * Método que cambia dinámicamente el src de una etiqueta img en el DOM\n   * @param event\n   * Evento que se produce cuando un archivo es seleccionado.\n   */\n  changeImage(event){\n    if (event.files[0]){\n      var src = URL.createObjectURL(event.files[0]);\n      var preview = document.getElementById(\"image-edit-activity\").setAttribute( 'src', src);\n      this.file = event.files[0];\n      this.valueUnchanged = false;\n    }\n  }\n\n  /**\n   * Método que deshabilita el botón enviar cuando el usuario elimina el archivo imagen del campo de selección de ficheros.\n   * @param event\n   * Evento que se produce cuando un archivo es eliminado utilizando el botón correspondiente.\n   */\n  deleteFiles(event){\n    this.valueUnchanged = true;\n    var url = 'data:' + this.activity.metadataImage.mimeType + ';base64,' + this.activity.metadataImage.data;\n    this.image = this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n}\n\n    \n\n    \n        \n\n\n  {{ 'edit_title_activity' | translate }}\n  \n  \n    \n      \n        \n          \n            {{ 'name_activity' | translate }}*:\n            \n          \n          \n            {{ 'description_activity' | translate }}*:\n            \n          \n          \n            {{ 'interest' | translate }}*:\n            \n            \n          \n          \n            \n              \n            \n            \n            \n          \n        \n      \n      \n        {{ 'message_info_map' | translate }}:*\n        \n      \n    \n    \n      \n    \n  \n\n\n\n\n\n    \n\n    \n                \n                    ./edit-activities.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.edit-activities-panel {\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n\n  h1{\n    text-align:center;\n  }\n\n  ::ng-deep .p-messages{\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n}\n\n.edit_activity_container{\n  display: flex;\n}\n\n.left_container, .right_container{\n  width: 50%;\n}\n\n#image-edit-activity{\n  max-width: 300px;\n  height: auto;\n  text-align: center;\n  width: auto\\9; /* ie8 */\n\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 50%;\n}\n\n.form-edit-activity-container {\n  width: 40vw;\n  min-width: 375px;\n  /*Para centrar*/\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.button_edit_activity_container{\n  text-align: right;\n\n  ::ng-deep .p-button{\n    margin: 5px;\n  }\n}\n\n#mapActivityEdit{\n  width: 45vw;\n  height: 40vw;\n  min-height: 480px;\n  min-width: 390px;\n}\n\n\n.fileUploadEditActivity {\n  ::ng-deep .p-fileupload-row{\n    div:nth-child(2) {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n  }\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'edit_title_activity\\' | translate }}                                            {{ \\'name_activity\\' | translate }}*:                                            {{ \\'description_activity\\' | translate }}*:                                            {{ \\'interest\\' | translate }}*:                                                                                                                                                {{ \\'message_info_map\\' | translate }}:*                                  '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditActivitiesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserAdminComponent.html":{"url":"components/EditUserAdminComponent.html","title":"component - EditUserAdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserAdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-user-admin/edit-user-admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user-admin\n            \n\n            \n                styleUrls\n                ./edit-user-admin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-user-admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editUserForm\n                            \n                            \n                                roleList\n                            \n                            \n                                roles\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                            \n                                valueUnchanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEquivalent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                observeChanges\n                            \n                            \n                                sendForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, userService: UserService, activatedRoute: ActivatedRoute, rolesService: RolService, messageService: MessageService, translateService: TranslateService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-user-admin/edit-user-admin.component.ts:52\n                            \n                        \n\n                \n                    \n                            Constructor de la clase EditUserAdminComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Clase que permite crear objetos de la clase FormGroup y FormControl.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de usuarios\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Proporciona acceso a la información sobre una ruta asociada a un componente que se carga.\n\n                                                        \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de roles\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite la navegación entre vistas\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEquivalent\n                        \n                        \n                    \n                \n            \n            \n                \nisEquivalent(a, b)\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:160\n                \n            \n\n\n            \n                \n                    Método que compara dos objetos JSON. Devuelve true si son iguales y false en caso contrario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Primer objeto a comparar.\n\n                                    \n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Segundo objeto a comparar.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:90\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n\n      El id del usuario.\n      Inicializará el formulario con los datos del usuario.\n      Cargará los dintintos roles y la información del usuario.\n  \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            observeChanges\n                        \n                        \n                    \n                \n            \n            \n                \nobserveChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:146\n                \n            \n\n\n            \n                \n                    Método que se ejecuta cuando algún valor del formulario cambia.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendForm\n                        \n                        \n                    \n                \n            \n            \n                \nsendForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:117\n                \n            \n\n\n            \n                \n                    Método que crea un objeto usuario y se lo envía a la API.\nUna vez enviado, también será el encargado de redirigir al usuario al componente ListUser y de mostrar un mensaje al usuario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editUserForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:32\n                            \n                        \n\n                \n                    \n                        Formulario para editar la información de un usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SelectItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:52\n                            \n                        \n\n                \n                    \n                        Array de objetos SelectItem para almacenar las distintas opciones del componente listbox de roles.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Rol[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:44\n                            \n                        \n\n                \n                    \n                        Array de objetos Rol para almacenar los distintos roles.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:36\n                            \n                        \n\n                \n                    \n                        Almacena el usuario seleccionado para editar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:40\n                            \n                        \n\n                \n                    \n                        Almacena el id del usuario seleccionado para editar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueUnchanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:48\n                            \n                        \n\n                \n                    \n                        Indica si el formulario tiene algún cambio o no.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MessageService, SelectItem} from 'primeng/api';\nimport {User} from '../models/user';\nimport {Rol} from '../models/rol';\nimport {UserService} from '../services/user/user.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {RolService} from '../services/rol/rol.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {forkJoin} from 'rxjs';\nimport {validadorAgeGreaterThan} from '../validators/validatorGreaterThan.directive';\nimport {validadorNonwhiteSpace} from '../validators/validatorNonWhiteSpace.directive';\n\n@Component({\n  selector: 'app-edit-user-admin',\n  templateUrl: './edit-user-admin.component.html',\n  styleUrls: ['./edit-user-admin.component.scss']\n})\n/**\n * Clase EditUserAdminComponent\n *\n * Clase que permite editar la información de un usuario.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class EditUserAdminComponent implements OnInit {\n\n  /**\n   * Formulario para editar la información de un usuario.\n   */\n  editUserForm: FormGroup;\n  /**\n   * Almacena el usuario seleccionado para editar.\n   */\n  user: User;\n  /**\n   * Almacena el id del usuario seleccionado para editar.\n   */\n  userId;\n  /**\n   * Array de objetos Rol para almacenar los distintos roles.\n   */\n  roles: Rol[];\n  /**\n   * Indica si el formulario tiene algún cambio o no.\n   */\n  valueUnchanged: boolean = true;\n  /**\n   * Array de objetos SelectItem para almacenar las distintas opciones del componente listbox de roles.\n   */\n  roleList: SelectItem[];\n\n  /**\n   * Constructor de la clase EditUserAdminComponent\n   *\n   * @param fb\n   * Clase que permite crear objetos de la clase FormGroup y FormControl.\n   * @param userService\n   * Servicio de usuarios\n   * @param activatedRoute\n   * Proporciona acceso a la información sobre una ruta asociada a un componente que se carga.\n   * @param rolesService\n   * Servicio de roles\n   * @param messageService\n   * Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n   * @param translateService\n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   * @param router\n   * Servicio que permite la navegación entre vistas\n   */\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private activatedRoute: ActivatedRoute,\n    private rolesService: RolService,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private router: Router\n  ) {}\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   * \n   *      El id del usuario.\n   *      Inicializará el formulario con los datos del usuario.\n   *      Cargará los dintintos roles y la información del usuario.\n   *  \n   */\n  ngOnInit(): void {\n    this.userId = this.activatedRoute.snapshot.paramMap.get('id');\n    this.editUserForm = this.fb.group({\n      userName: ['', [Validators.required, validadorNonwhiteSpace()]],\n      dateBirthday: ['', [Validators.required, validadorAgeGreaterThan()]],\n      roles: ['', Validators.required]\n    });\n\n    forkJoin([this.rolesService.getRoles(), this.userService.getUserForAdmin(this.userId)]).subscribe(results => {\n      this.roles = results[0];\n      this.user = results[1];\n      this.editUserForm.patchValue({\n        userName: this.user.userName,\n        dateBirthday: new Date(this.user.dateBirthday)\n      });\n      this.editUserForm.controls['roles'].setValue(this.user.roles);\n\n      this.roleList = this.roles.map((v) => {return {label: v.rolName, value: v.rolName}})\n\n      this.observeChanges();\n    });\n  }\n\n  /**\n   * Método que crea un objeto usuario y se lo envía a la API.\n   * Una vez enviado, también será el encargado de redirigir al usuario al componente ListUser y de mostrar un mensaje al usuario.\n   */\n  sendForm(){\n    var dateBirthday = new Date(this.editUserForm.get('dateBirthday').value);\n    const offset = dateBirthday.getTimezoneOffset()\n    dateBirthday = new Date(dateBirthday.getTime() - (offset * 60 * 1000))\n\n    var user = {\n      userName: this.editUserForm.get(\"userName\").value,\n      dateBirthday: dateBirthday.toISOString().split('T')[0],\n      roles: this.editUserForm.get(\"roles\").value\n    };\n    this.userService.editUser(this.userId, user).subscribe(\n      data => {\n        var message = this.translateService.instant('user_edit_message',{ 'nameUser': this.editUserForm.get('userName').value });\n        this.messageService.add({key: 'edit-user', severity:'success', summary: this.translateService.instant('user_edit'), detail: message});\n        // Para que se muestre el mensaje\n        setTimeout(() => {\n          this.router.navigate(['/user']);\n        }, 1500);\n      },\n      err => {\n        var message = this.translateService.instant('error_delete_message');\n        this.messageService.add({key: 'edit-user', severity:'error', summary: this.translateService.instant('error'), detail: message});\n      }\n    );\n  }\n\n  /**\n   * Método que se ejecuta cuando algún valor del formulario cambia.\n   */\n  observeChanges() {\n    this.editUserForm.valueChanges.subscribe((values) => {\n      this.isEquivalent(this.user, values);\n    });\n  }\n\n  /**\n   * Método que compara dos objetos JSON. Devuelve true si son iguales y false en caso contrario.\n   *\n   * @param a\n   * Primer objeto a comparar.\n   * @param b\n   * Segundo objeto a comparar.\n   */\n  isEquivalent(a, b) {\n    this.valueUnchanged = true;\n    var aProps = Object.keys(a);\n    var bProps = Object.keys(b);\n    for (var i = 0; i  value === array2Sorted[index]);\n        return a[propName].length === b[propName].length && a[propName].slice().sort().every((value, index) => value === array2Sorted[index]);\n      }\n      else if (propName === \"dateBirthday\"){\n        var d1 = new Date(new Date(a[propName]).toDateString());\n        var d2 = new Date(b[propName]?.toDateString());\n        if (d1.getTime() !== d2.getTime()){\n          this.valueUnchanged = false;\n          return false;\n        }\n      }\n      else{\n        if (a[propName] !== b[propName]) {\n          this.valueUnchanged = false;\n          return false;\n        }\n      }\n    }\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n  {{ 'edit_title' | translate }}\n  \n    \n      \n        {{ 'personal_info' | translate }}\n      \n      \n        {{ 'username' | translate }}*:\n        \n          \n          {{ 'name_required' | translate }}\n        \n      \n      \n        {{ 'date_birth' | translate }}*:\n        \n          \n          {{ 'birthday_required' | translate }}\n          {{ 'age_invalid' | translate }}\n        \n      \n    \n    \n      \n        {{ 'roles' | translate }}\n      \n      \n      \n    \n    \n      \n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./edit-user-admin.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.edit-panel {\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n\n  h1{\n    text-align:center;\n  }\n}\n\n.form-user-container{\n  width: 55%;\n  padding-bottom: 5px;\n  /*Para centrar*/\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 5px;\n}\n\n.group-buttons-edit-user{\n  display: flex;\n  justify-content: flex-end;\n\n  .buttonSave{\n    margin: 5px;\n  }\n}\n\n.fielset_edit_user{\n  border: 0;\n\n  .legend_fieldset{\n    border-bottom: 1px solid;\n    margin-bottom: 16px;\n    border-color: #c4c6c8;\n  }\n\n  legend {\n    font-size: 1.5em;\n  }\n}\n\n.message_error{\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  margin-left: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'edit_title\\' | translate }}                    {{ \\'personal_info\\' | translate }}                    {{ \\'username\\' | translate }}*:                            {{ \\'name_required\\' | translate }}                            {{ \\'date_birth\\' | translate }}*:                            {{ \\'birthday_required\\' | translate }}          {{ \\'age_invalid\\' | translate }}                                    {{ \\'roles\\' | translate }}                                      '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserAdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserComponent.html":{"url":"components/EditUserComponent.html","title":"component - EditUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-user/edit-user.component.ts\n\n\n    \n        Description\n    \n    \n        Clase EditUserComponent\nClase que permite editar la información del usuario autenticado.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user\n            \n\n            \n                styleUrls\n                ./edit-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editUserProfile\n                            \n                            \n                                infoMessage\n                            \n                            \n                                user\n                            \n                            \n                                valueUnchanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEquivalent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                observeChanges\n                            \n                            \n                                updateUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    interest\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, localStorageService: LocalStorageService, fb: FormBuilder, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-user/edit-user.component.ts:42\n                            \n                        \n\n                \n                    \n                            Constructor de la clase EditUserComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de usuarios\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Clase que permite crear objetos de la clase FormGroup y FormControl.\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEquivalent\n                        \n                        \n                    \n                \n            \n            \n                \nisEquivalent(a, b)\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-user/edit-user.component.ts:173\n                \n            \n\n\n            \n                \n                    Método que compara dos objetos JSON. Devuelve true si son iguales y false en caso contrario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Primer objeto a comparar.\n\n                                    \n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Segundo objeto a comparar.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-user/edit-user.component.ts:71\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n\n      Inicializará el formulario con los datos del usuario.\n      Cargará la información del usuario autenticado\n  \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            observeChanges\n                        \n                        \n                    \n                \n            \n            \n                \nobserveChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-user/edit-user.component.ts:159\n                \n            \n\n\n            \n                \n                    Método que se ejecuta cuando algún valor del formulario cambia.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-user/edit-user.component.ts:112\n                \n            \n\n\n            \n                \n                    Método que crea un objeto usuario y se lo envía a la API.\nUna vez enviado, también será el encargado de mostrar un mensaje al usuario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editUserProfile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:30\n                            \n                        \n\n                \n                    \n                        Formulario para editar la información del usuario autenticado.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            infoMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:42\n                            \n                        \n\n                \n                    \n                        Almacena el mensaje que se muestra al usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:34\n                            \n                        \n\n                \n                    \n                        Almacena el usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueUnchanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:38\n                            \n                        \n\n                \n                    \n                        Indica si el formulario tiene algún cambio o no.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        interest\n                    \n                \n\n                \n                    \n                        getinterest()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-user/edit-user.component.ts:104\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../services/user/user.service';\nimport {map, mergeMap} from 'rxjs/operators';\nimport {forkJoin} from 'rxjs';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\nimport {validadorAgeGreaterThan} from '../validators/validatorGreaterThan.directive';\nimport {validadorPriorityNumberOfInterest} from '../validators/validatorPriorityNumber.directive';\nimport {LocalStorageService} from '../services/local-storage/local-storage.service';\nimport {validadorNonwhiteSpace} from '../validators/validatorNonWhiteSpace.directive';\n\n/**\n * Clase EditUserComponent\n *\n * Clase que permite editar la información del usuario autenticado.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n\n  /**\n   * Formulario para editar la información del usuario autenticado.\n   */\n  editUserProfile: FormGroup;\n  /**\n   * Almacena el usuario.\n   */\n  user;\n  /**\n   * Indica si el formulario tiene algún cambio o no.\n   */\n  valueUnchanged: boolean = true;\n  /**\n   * Almacena el mensaje que se muestra al usuario.\n   */\n  infoMessage = [];\n\n  /**\n   * Constructor de la clase EditUserComponent\n   *\n   * @param userService\n   * Servicio de usuarios\n   * @param localStorageService\n   * Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n   * @param fb\n   * Clase que permite crear objetos de la clase FormGroup y FormControl.\n   * @param translateService\n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   */\n  constructor(\n    private userService: UserService,\n    private localStorageService: LocalStorageService,\n    private fb: FormBuilder,\n    private translateService: TranslateService\n  ) { }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   *\n   * \n   *      Inicializará el formulario con los datos del usuario.\n   *      Cargará la información del usuario autenticado\n   *  \n   */\n  ngOnInit(): void {\n    this.editUserProfile = this.fb.group({\n      dateBirthday: ['', [Validators.required, validadorAgeGreaterThan()]],\n      interest: this.fb.array([]),\n      userName: ['', [Validators.required, validadorNonwhiteSpace()]]\n    });\n    this.userService.getUsers().pipe(\n      map (data => data.filter(p => p.email === this.localStorageService.getEmailUser())),\n      mergeMap ( user => {\n        return forkJoin([this.userService.getUser(user[0].id)]).pipe();\n      })\n    ).subscribe(\n      ([response1]) => {\n        this.user = response1;\n        this.editUserProfile.patchValue({\n          userName: this.user.userName,\n          dateBirthday: new Date(this.user.dateBirthday)\n        });\n        this.user.interest.forEach(\n          infoInterest => {\n            var newItem = this.fb.group({\n              interestID: [infoInterest.interestID, Validators.required],\n              nameInterest: [infoInterest.nameInterest, Validators.required],\n              priority: [infoInterest.priority, [Validators.required, validadorPriorityNumberOfInterest()]]\n            });\n            this.interest.push(newItem);\n          }\n        )\n        this.observeChanges();\n      }\n    );\n  }\n\n  get interest(): FormArray {\n    return this.editUserProfile.get('interest') as FormArray;\n  }\n\n  /**\n   * Método que crea un objeto usuario y se lo envía a la API.\n   * Una vez enviado, también será el encargado de mostrar un mensaje al usuario.\n   */\n  updateUserProfile(){\n    var dateBirthday = new Date(this.editUserProfile.get('dateBirthday').value);\n    const offset = dateBirthday.getTimezoneOffset()\n    dateBirthday = new Date(dateBirthday.getTime() - (offset * 60 * 1000))\n    var user = {\n      dateBirthday: dateBirthday.toISOString().split('T')[0],\n      userName: this.editUserProfile.get(\"userName\").value,\n      interest: this.interest.value,\n      roles: this.user.roles\n    };\n    this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n      var aux = this.infoMessage;\n      this.infoMessage = [];\n      for (let message of aux){\n        var mAux = message;\n        mAux.summary = this.translateService.instant(mAux.keySummary);\n        mAux.detail = this.translateService.instant(mAux.keyDetail);\n        this.infoMessage.push(mAux);\n      }\n    });\n    this.userService.editUser(this.user.id, user).pipe(\n      map( data => {\n        this.valueUnchanged = true;\n        var message = this.translateService.instant('user_profile_edit_message');\n        this.infoMessage = [\n          {key: 'edit_profile_user', severity:'success', summary: this.translateService.instant('user_profile_edit'), detail: message, keySummary: 'user_profile_edit' , keyDetail: 'user_profile_edit_message'}\n          ];\n      }),\n      mergeMap( () => {\n        return this.userService.getUser(this.user.id).pipe();\n      })\n    ).subscribe(\n      data => {\n        this.user = data;\n      },\n      (err) => {\n        var message = this.translateService.instant('error_delete_message');\n        this.infoMessage = [\n          { key: 'edit_profile_user', severity:'error', summary: this.translateService.instant('error'), detail: message, keySummary: 'error' , keyDetail: 'error_delete_message'}\n        ];\n      }\n    );\n  }\n\n  /**\n   * Método que se ejecuta cuando algún valor del formulario cambia.\n   */\n  observeChanges() {\n    this.editUserProfile.valueChanges.subscribe((values) => {\n      this.isEquivalent(this.user, values);\n    });\n  }\n\n  /**\n   * Método que compara dos objetos JSON. Devuelve true si son iguales y false en caso contrario.\n   *\n   * @param a\n   * Primer objeto a comparar.\n   * @param b\n   * Segundo objeto a comparar.\n   */\n  isEquivalent(a, b) {\n    this.valueUnchanged = true;\n    var aProps = Object.keys(a);\n    var bProps = Object.keys(b);\n    for (var i = 0; i  (a.interestID  (a.interestID  JSON.stringify(value) === JSON.stringify(array2Sort[index]));\n        if (check === false){\n          this.valueUnchanged = check;\n          return array1Sort.length === array2Sort.length && array1Sort.every((value, index) => JSON.stringify(value) === JSON.stringify(array2Sort[index]));\n        }\n      }\n      else if (propName === \"dateBirthday\"){\n        var d1 = new Date(new Date(a[propName]).toDateString());\n        var d2 = new Date(b[propName]?.toDateString());\n        if (d1.getTime() !== d2.getTime()){\n          this.valueUnchanged = false;\n          return false;\n        }\n      }\n      else{\n        if (a[propName] !== b[propName]) {\n          this.valueUnchanged = false;\n          return false;\n        }\n      }\n    }\n  }\n\n\n}\n\n    \n\n    \n        \n\n  {{ 'edit_title' | translate }}\n  \n  \n    \n      \n        {{ 'personal_info' | translate }}\n      \n      \n        {{'username' | translate}}*:\n        \n          \n          \n        \n      \n      \n        {{ 'date_birth' | translate }}*:\n        \n          \n          \n          \n        \n      \n    \n\n    \n      \n        {{ 'interests' | translate }}\n      \n      \n        \n          {{item.value.nameInterest}}\n            :\n          \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            -->\n\n            \n            \n              0\n            \n\n            \n            \n              1\n            \n\n            \n            \n              2\n            \n\n            \n            \n              3\n            \n\n            \n            \n              4\n            \n\n            \n            \n              5\n            \n\n            \n            \n              6\n            \n\n            \n            \n              7\n            \n\n            \n            \n              8\n            \n\n            \n            \n              9\n            \n\n            \n            \n              10\n            \n\n          \n        \n      \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./edit-user.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.edit-profile-user-panel{\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n\n  h1 {\n    text-align: center;\n  }\n\n  ::ng-deep .p-messages{\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n}\n\n.message_error_age, .message_error_username{\n  margin-left: 5px;\n}\n\n.fieldset{\n  border: 0;\n}\n\n.legend-container{\n  border-bottom: 1px solid;\n  margin-bottom: 16px;\n  border-color: #c4c6c8;\n}\n\nlegend {\n  font-size:1.5em;\n}\n\n.button_edit_user_submit_container{\n  display: flex;\n  justify-content: flex-end;\n\n  .button_edit_user_submit{\n    padding: 5px;\n  }\n}\n\n.form-edit-profile-container{\n  .form-check-label{\n    margin: 10px;\n  }\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'edit_title\\' | translate }}                      {{ \\'personal_info\\' | translate }}                    {{\\'username\\' | translate}}*:                                                        {{ \\'date_birth\\' | translate }}*:                                                                          {{ \\'interests\\' | translate }}                              {{item.value.nameInterest}}            :                                                                                                                                              -->                                      0                                                  1                                                  2                                                  3                                                  4                                                  5                                                  6                                                  7                                                  8                                                  9                                                  10                                                        '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagesService.html":{"url":"injectables/ImagesService.html","title":"injectable - ImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/images/images.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imagesURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/images/images.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImages\n                        \n                        \n                    \n                \n            \n            \n                \ngetImages(namePhoto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/images/images.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namePhoto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imagesURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/images'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/images/images.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Activity} from '../../models/activity';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nconst cabecera = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImagesService {\n\n  imagesURL = 'http://localhost:8090/images';\n\n  constructor(private httpClient: HttpClient) { }\n\n  getImages(namePhoto){\n    return this.httpClient.get(this.imagesURL + '/' + namePhoto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationActivitiesComponent.html":{"url":"components/InformationActivitiesComponent.html","title":"component - InformationActivitiesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InformationActivitiesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information-activities/information-activities.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-information-activities\n            \n\n            \n                styleUrls\n                ./information-activities.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information-activities.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activity\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                image\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: DynamicDialogRef, config: DynamicDialogConfig, activityService: ActivityService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/information-activities/information-activities.component.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor de la clase InformationActivitiesComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                    DynamicDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite devolver un valor al componente que lo creó.\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    DynamicDialogConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite pasar información a los componentes dinámicos.\n\n                                                        \n                                                \n                                                \n                                                        activityService\n                                                  \n                                                        \n                                                                        ActivityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de actividades.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information-activities/information-activities.component.ts:52\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n\n      La actividad\n      Saneará la URL de la imagen asociada a la actividad.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Activity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information-activities/information-activities.component.ts:25\n                            \n                        \n\n                \n                    \n                        Almacena la actividad seleccionada.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DynamicDialogConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information-activities/information-activities.component.ts:43\n                            \n                        \n\n                \n                    \n                        Servicio propocionado por la librería PrimeNG que permite pasar información a los componentes dinámicos.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/information-activities/information-activities.component.ts:29\n                            \n                        \n\n                \n                    \n                        Almacena la url de la imagen saneada.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {DynamicDialogConfig, DynamicDialogRef} from 'primeng/dynamicdialog';\nimport {Activity} from '../models/activity';\nimport {ActivityService} from '../services/activity/activity.service';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-information-activities',\n  templateUrl: './information-activities.component.html',\n  styleUrls: ['./information-activities.component.scss']\n})\n/**\n * Clase InformationActivitiesComponent\n *\n * Clase que muestra información adicional de una actividad.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class InformationActivitiesComponent implements OnInit {\n\n  /**\n   * Almacena la actividad seleccionada.\n   */\n  activity: Activity;\n  /**\n   * Almacena la url de la imagen saneada.\n   */\n  image;\n\n  /**\n   * Constructor de la clase InformationActivitiesComponent\n   *\n   * @param ref\n   * Servicio propocionado por la librería PrimeNG que permite devolver un valor al componente que lo creó.\n   * @param config\n   * Servicio propocionado por la librería PrimeNG que permite pasar información a los componentes dinámicos.\n   * @param activityService\n   * Servicio de actividades.\n   * @param sanitizer\n     Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n   */\n  constructor(private ref: DynamicDialogRef, public config: DynamicDialogConfig, private activityService: ActivityService,  private sanitizer: DomSanitizer) { }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   * \n   *      La actividad\n   *      Saneará la URL de la imagen asociada a la actividad.\n   * \n   */\n  ngOnInit(): void {\n    if (this.config.data){\n      this.activity = this.config.data.activity;\n      var url = 'data:' + this.activity.metadataImage.mimeType + ';base64,' + this.activity.metadataImage.data;\n      this.image = this.sanitizer.bypassSecurityTrustUrl(url);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    {{ 'name_activity' | translate }}\n    {{activity.name}}\n  \n  \n    {{ 'description_activity' | translate }}\n    {{activity.description}}\n  \n  \n    {{ 'address' | translate }}\n    {{activity.address}}\n  \n  \n    {{ 'interest' | translate }}\n    {{activity.interest}}\n  \n  \n    {{ 'city' | translate }}\n    {{activity.city}}\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./information-activities.component.scss\n                \n                .contaiter-info-activities{\n  display: flex;\n  flex-direction: column;\n}\n\n.container-name, .container-description-activity, .container-coordenates, .container-interest, .container-city{\n  display: flex;\n  margin-top: 7px;\n}\n\n.label-container, .content-container{\n  width: 50%;\n}\n\n#image-activity{\n  width: 100%;\n  max-width: 300px;\n  height: auto;\n  text-align: center;\n  width: auto\\9; /* ie8 */\n\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 50%;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'name_activity\\' | translate }}    {{activity.name}}        {{ \\'description_activity\\' | translate }}    {{activity.description}}        {{ \\'address\\' | translate }}    {{activity.address}}        {{ \\'interest\\' | translate }}    {{activity.interest}}        {{ \\'city\\' | translate }}    {{activity.city}}  '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationActivitiesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/InterceptorService.html":{"url":"interceptors/InterceptorService.html","title":"interceptor - InterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  InterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleAuthError\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorageService: LocalStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/interceptor.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleAuthError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleAuthError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interceptors/interceptor.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interceptors/interceptor.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {LocalStorageService} from '../services/local-storage/local-storage.service';\nimport {catchError} from 'rxjs/operators';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class InterceptorService implements HttpInterceptor{\n\n  constructor(\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    let autReq = req;\n\n    const token = this.localStorageService.getToken();\n    if (token != null) {\n      autReq = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + token) });\n      return next.handle(autReq).pipe(\n        catchError(\n          (err) => {\n            if (err.status === 401){\n              this.handleAuthError();\n              return of(err);\n            }\n            throw err;\n          }\n        )\n      )as any;\n    }\n    else{\n      return next.handle(autReq);\n    }\n  }\n\n  private handleAuthError() {\n    this.localStorageService.logOut();\n    this.router.navigateByUrl('login');\n  }\n}\nexport const interceptorProvider = [{provide: HTTP_INTERCEPTORS, useClass: InterceptorService, multi: true}];\n\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Interest.html":{"url":"classes/Interest.html","title":"class - Interest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Interest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interest.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                nameInterest\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/interest.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/interest.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Interest {\n  id: number;\n  nameInterest: string;\n}\n\nexport class InterestByUser {\n  interestID: number;\n  nameInterest: string;\n  priority: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Interest-1.html":{"url":"classes/Interest-1.html","title":"class - Interest-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Interest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nameInterest\n                            \n                            \n                                priority\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: number;\n  userName: string;\n  email: string;\n  dateBirthday: Date;\n  roles: string[];\n}\n\nexport class UserLogin {\n  email: string;\n  password: string;\n}\n\nexport class UserSignUp {\n  userName: string;\n  email: string;\n  dateBirthday: string;\n  password: string;\n  passwordConfirm: string;\n  roles: string[];\n  interest: Interest[];\n}\n\nexport class Interest {\n  nameInterest: string;\n  priority: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InterestByUser.html":{"url":"classes/InterestByUser.html","title":"class - InterestByUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InterestByUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interest.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                interestID\n                            \n                            \n                                nameInterest\n                            \n                            \n                                priority\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interestID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/interest.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/interest.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/interest.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Interest {\n  id: number;\n  nameInterest: string;\n}\n\nexport class InterestByUser {\n  interestID: number;\n  nameInterest: string;\n  priority: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InterestService.html":{"url":"injectables/InterestService.html","title":"injectable - InterestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InterestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/interest/interest.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                interestURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addInterests\n                            \n                            \n                                    Public\n                                deleteInterest\n                            \n                            \n                                    Public\n                                editInterest\n                            \n                            \n                                    Public\n                                getInterestByUser\n                            \n                            \n                                    Public\n                                getInterests\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/interest/interest.service.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor de la clase InterestService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                objeto que permite hacer peticiones a la API y obtener resultados de la misma\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addInterests\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addInterests(interest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest.service.ts:45\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para añadir un nuevo tipo de interés.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto interés que incluye la información del nuevo tipo de interés.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteInterest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteInterest(interest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest.service.ts:54\n                \n            \n\n\n            \n                \n                    Método que realiza una petición DELETE para eliminar un tipo de interés.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto interés que se quiere eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editInterest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editInterest(id, interest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest.service.ts:73\n                \n            \n\n\n            \n                \n                    Método que realiza una petición PUT para modificar la información de un tipo de interés.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del tipo de interés\n\n                                    \n                                \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto actividad con la información actualizada.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInterestByUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInterestByUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest.service.ts:63\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener las puntuaciones dadas por el usuario a un tipo de interés.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInterests\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInterests()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest.service.ts:36\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de los tipos de intereses.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interestURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/interest'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/interest/interest.service.ts:24\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Interest, InterestByUser} from '../../models/interest';\nimport {Observable} from 'rxjs';\n\n/**\n * Encabezado para las peticiones y respuestas HTTP\n */\nconst cabecera = {headers: new HttpHeaders({'Content-Type': 'application/json'})}; //Headers serán contenido JSON\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clase InterestService\n * \n * Clase que se encarga de realizar peticiones a la API relacionadas con los tipos de intereses.\n */\nexport class InterestService {\n\n  /**\n   * Almacena la url del endpoint\n   */\n  interestURL = 'http://localhost:8090/api/interest';\n\n  /**\n   * Constructor de la clase InterestService\n   * @param httpClient objeto que permite hacer peticiones a la API y obtener resultados de la misma\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Método que realiza una petición GET para obtener la lista de los tipos de intereses.\n   * @returns el observable con la información enviada por la API\n   */\n  public getInterests(): Observable {\n    return this.httpClient.get(this.interestURL + '/list', cabecera);\n  }\n\n  /**\n   * Método que realiza una petición POST para añadir un nuevo tipo de interés.\n   * @param interest objeto interés que incluye la información del nuevo tipo de interés.\n   * @returns el observable con la información enviada por la API\n   */\n  public addInterests(interest): Observable {\n    return this.httpClient.post(this.interestURL + '/add', interest, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición DELETE para eliminar un tipo de interés.\n   * @param interest objeto interés que se quiere eliminar\n   * @returns el observable con la información enviada por la API\n   */\n  public deleteInterest(interest): Observable {\n    return this.httpClient.delete(this.interestURL + '/delete/' + interest.id, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición GET para obtener las puntuaciones dadas por el usuario a un tipo de interés.\n   * @param id identificador del usuario\n   * @returns el observable con la información enviada por la API\n   */\n  public getInterestByUser(id): Observable {\n    return this.httpClient.get(this.interestURL + '/list/user/' + id, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición PUT para modificar la información de un tipo de interés.\n   * @param id identificador del tipo de interés\n   * @param interest objeto actividad con la información actualizada.\n   * @returns el observable con la información enviada por la API\n   */\n  public editInterest(id, interest): Observable {\n    return this.httpClient.put(this.interestURL + '/update/' + id, interest, cabecera);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsLogginInGuardService.html":{"url":"guards/IsLogginInGuardService.html","title":"guard - IsLogginInGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsLogginInGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/isLogginInGuard/is-loggin-in-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/isLogginInGuard/is-loggin-in-guard.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve()\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/isLogginInGuard/is-loggin-in-guard.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {Resolve, Router} from '@angular/router';\nimport {LocalStorageService} from '../../services/local-storage/local-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsLogginInGuardService implements Resolve{\n\n  constructor(private router: Router, private localStorageService: LocalStorageService) { }\n\n  resolve() {\n    if (this.localStorageService.getToken()) {\n      const roles = this.localStorageService.getRolesUser();\n      if (roles.includes(\"ROLE_ADMIN\")){\n        this.router.navigate(['/user']);\n      }\n      else{\n        this.router.navigate(['/recommendationMap']);\n      }\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtModel.html":{"url":"classes/JwtModel.html","title":"class - JwtModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/jwt_model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/jwt_model.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class JwtModel {\n  token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListActivitiesEvaluateComponent.html":{"url":"components/ListActivitiesEvaluateComponent.html","title":"component - ListActivitiesEvaluateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListActivitiesEvaluateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/list-activities-evaluate/list-activities-evaluate.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-activities-evaluate\n            \n\n            \n                styleUrls\n                ./list-activities-evaluate.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-activities-evaluate.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listActivities\n                            \n                            \n                                sortField\n                            \n                            \n                                sortOptions\n                            \n                            \n                                sortOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSortChange\n                            \n                            \n                                photoURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, activityService: ActivityService, localStorageService: LocalStorageService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/list-activities-evaluate/list-activities-evaluate.component.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor de la clase ListActivitiesEvaluateComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de usuarios.\n\n                                                        \n                                                \n                                                \n                                                        activityService\n                                                  \n                                                        \n                                                                        ActivityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de actividades.\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-activities-evaluate/list-activities-evaluate.component.ts:69\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n\n      Inicializará las opciones del dropdown para ordenar las actividades por valoración.\n      Cargará la lista de actividades valoradas por el usuario autenticado.\n  \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSortChange\n                        \n                        \n                    \n                \n            \n            \n                \nonSortChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-activities-evaluate/list-activities-evaluate.component.ts:102\n                \n            \n\n\n            \n                \n                    Método que ordena las actividades por valoración.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Evento que se produce cuando una opción es seleccionada en el componente.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            photoURL\n                        \n                        \n                    \n                \n            \n            \n                \nphotoURL(activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-activities-evaluate/list-activities-evaluate.component.ts:91\n                \n            \n\n\n            \n                \n                    Método que sanea la URL de la imagen asociada a la actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Actividad cuya url de la imagen asociada se quiere sanear.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listActivities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActivityRecommended[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-activities-evaluate/list-activities-evaluate.component.ts:29\n                            \n                        \n\n                \n                    \n                        Almacena las actividades valoradas por el usuario autenticado.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-activities-evaluate/list-activities-evaluate.component.ts:41\n                            \n                        \n\n                \n                    \n                        Almacena el campo por el que se tiene que ordenar la información.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SelectItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-activities-evaluate/list-activities-evaluate.component.ts:33\n                            \n                        \n\n                \n                    \n                        Almacena las opciones para ordenar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-activities-evaluate/list-activities-evaluate.component.ts:37\n                            \n                        \n\n                \n                    \n                        Indica el orden seleccionado por el usuario. Tendrá dos posibles valores: -1 y 1.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SelectItem } from 'primeng/api';\nimport {ActivityRecommended} from '../models/activity';\nimport {UserService} from '../services/user/user.service';\nimport {ActivityService} from '../services/activity/activity.service';\nimport {LocalStorageService} from '../services/local-storage/local-storage.service';\nimport {map, mergeMap} from 'rxjs/operators';\nimport {forkJoin} from 'rxjs';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-list-activities-evaluate',\n  templateUrl: './list-activities-evaluate.component.html',\n  styleUrls: ['./list-activities-evaluate.component.scss']\n})\n/**\n * Clase ListActivitiesEvaluateComponent\n *\n * Clase que permite visualizar la lista de actividades valoradas por el usuario autenticado.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class ListActivitiesEvaluateComponent implements OnInit {\n\n  /**\n   * Almacena las actividades valoradas por el usuario autenticado.\n   */\n  listActivities: ActivityRecommended[];\n  /**\n   * Almacena las opciones para ordenar.\n   */\n  sortOptions: SelectItem[];\n  /**\n   * Indica el orden seleccionado por el usuario. Tendrá dos posibles valores: -1 y 1.\n   */\n  sortOrder: number;\n  /**\n   * Almacena el campo por el que se tiene que ordenar la información.\n   */\n  sortField: string;\n\n  /**\n   * Constructor de la clase ListActivitiesEvaluateComponent\n   *\n   * @param userService\n   * Servicio de usuarios.\n   * @param activityService\n   * Servicio de actividades.\n   * @param localStorageService\n   * Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n   * @param sanitizer\n   * Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n   */\n  constructor(\n    private userService: UserService,\n    private activityService: ActivityService,\n    private localStorageService: LocalStorageService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   * \n   *      Inicializará las opciones del dropdown para ordenar las actividades por valoración.\n   *      Cargará la lista de actividades valoradas por el usuario autenticado.\n   *  \n   */\n  ngOnInit(): void {\n    this.sortOptions = [\n      {label: 'rating_down', value: '!score'},\n      {label: 'rating_up', value: 'score'}\n    ];\n    this.userService.getUsers().pipe(\n      map (data => data.filter(p => p.email === this.localStorageService.getEmailUser())),\n      mergeMap ( user => {\n        return forkJoin([this.activityService.getRatedActivities(user[0].id)]).pipe();\n      })\n    ).subscribe(\n      ([response1]) => {\n        this.listActivities = response1;\n      }\n    );\n  }\n\n  /**\n   * Método que sanea la URL de la imagen asociada a la actividad.\n   * @param activity\n   * Actividad cuya url de la imagen asociada se quiere sanear.\n   */\n  photoURL(activity){\n    var url = 'data:' + activity.metadataImage.mimeType + ';base64,' + activity.metadataImage.data;\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n  /**\n   * Método que ordena las actividades por valoración.\n   *\n   * @param event\n   * Evento que se produce cuando una opción es seleccionada en el componente.\n   */\n  onSortChange(event) {\n    let value = event.value;\n\n    if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    }\n    else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    {{ 'activities_valued' | translate }}\n    \n      \n        \n          \n            \n              {{item.label | translate}}\n            \n            \n              {{selectedItem.label | translate}}\n            \n          \n          \n            \n            \n          \n        \n      \n      \n            \n                \n                    \n                      \n                    \n                    \n                        \n                            {{activity.name}}\n                        \n                        \n                          {{activity.description}}\n                        \n\n                        \n                          {{activity.interest}}\n                        \n                    \n\n                    \n                        \n                    \n                \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./list-activities-evaluate.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.activities-evaluates-panel{\n    @include custom-panel;\n    width: 100%;\n    min-height: 300px;\n    min-width: 800px;\n\n    h1{\n        text-align:center;\n    }\n}\n\n::ng-deep .p-dataview {\n    margin: 15px;\n}\n\n\n.activities-list-item{\n    display: flex;\n    align-items: center;\n    padding: 1rem;\n    width: 100%;\n\n    .activities-list-detail{\n        flex: 1 1 0;\n\n      .activity-badge.status-iglesias{\n        background: #feedaf;\n        color: #8a5340;\n      }\n\n      .activity-badge.status-museos{\n        background-color: #eccfff;\n        color: #694382;\n      }\n\n      .activity-badge.status-playas{\n        background-color: #b3e5fc;\n        color: #23547b;\n      }\n\n      .activity-badge.status-esculturas{\n        background: #ffcdd2;\n        color: #c63737;\n      }\n\n      .activity-badge.status-teatros{\n        background: #c8e6c9;\n        color: #256029;\n      }\n\n      .activity-badge.status-parques{\n        background-color: #ffd8b2;\n        color: #805b36;\n      }\n\n      .activity-badge{\n        border-radius: 2px;\n        padding: .25em .5rem;\n        text-transform: uppercase;\n        font-weight: 700;\n        font-size: 12px;\n        letter-spacing: .3px;\n      }\n    }\n\n    img {\n        width: 150px;\n        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n        margin-right: 2rem;\n    }\n\n    .activity-name{\n        font-size: 1.5rem;\n        font-weight: 700;\n    }\n\n}\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'activities_valued\\' | translate }}                                                      {{item.label | translate}}                                      {{selectedItem.label | translate}}                                                                                                                                                                                                                                                        {{activity.name}}                                                                          {{activity.description}}                                                                          {{activity.interest}}                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListActivitiesEvaluateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListCitiesComponent.html":{"url":"components/ListCitiesComponent.html","title":"component - ListCitiesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListCitiesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/list-cities/list-cities.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-cities\n            \n\n            \n                styleUrls\n                ./list-cities.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-cities.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cities\n                            \n                            \n                                display\n                            \n                            \n                                displayEditPanel\n                            \n                            \n                                errorAddCity\n                            \n                            \n                                errorEditCity\n                            \n                            \n                                formAddCity\n                            \n                            \n                                formEditCity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                cancelEdit\n                            \n                            \n                                editCity\n                            \n                            \n                                hideDialogCity\n                            \n                            \n                                hideDialogEditCity\n                            \n                            \n                                loadCities\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onEditSubmit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openPanel\n                            \n                            \n                                removeCity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cityService: CityService, formBuilder: FormBuilder, confirmationService: ConfirmationService, translateService: TranslateService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/list-cities/list-cities.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cityService\n                                                  \n                                                        \n                                                                        CityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancelEdit\n                        \n                        \n                    \n                \n            \n            \n                \ncancelEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editCity\n                        \n                        \n                    \n                \n            \n            \n                \neditCity(city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideDialogCity\n                        \n                        \n                    \n                \n            \n            \n                \nhideDialogCity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideDialogEditCity\n                        \n                        \n                    \n                \n            \n            \n                \nhideDialogEditCity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCities\n                        \n                        \n                    \n                \n            \n            \n                \nloadCities()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEditSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonEditSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openPanel\n                        \n                        \n                    \n                \n            \n            \n                \nopenPanel($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeCity\n                        \n                        \n                    \n                \n            \n            \n                \nremoveCity(city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         City[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-cities/list-cities.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            display\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-cities/list-cities.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayEditPanel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-cities/list-cities.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorAddCity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-cities/list-cities.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorEditCity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-cities/list-cities.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formAddCity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-cities/list-cities.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formEditCity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-cities/list-cities.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {CityService} from '../services/city/city.service';\nimport {City} from '../models/city';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ConfirmationService, MessageService} from 'primeng/api';\nimport {catchError, map, mergeMap} from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\nimport {validadorNonwhiteSpace} from '../validators/validatorNonWhiteSpace.directive';\n\n@Component({\n  selector: 'app-list-cities',\n  templateUrl: './list-cities.component.html',\n  styleUrls: ['./list-cities.component.scss']\n})\nexport class ListCitiesComponent implements OnInit {\n\n  cities: City[];\n  display: boolean = false;\n  formAddCity: FormGroup;\n  errorAddCity: boolean = false;\n  errorEditCity: boolean = false;\n  displayEditPanel: boolean = false;\n  formEditCity: FormGroup;\n\n  constructor(\n    private cityService: CityService,\n    private formBuilder: FormBuilder,\n    private confirmationService: ConfirmationService,\n    private translateService: TranslateService,\n    private messageService: MessageService\n  ) { }\n\n  ngOnInit(): void {\n    this.formAddCity = this.formBuilder.group({\n      name: ['', [Validators.required, validadorNonwhiteSpace()]]\n    });\n    this.formEditCity = this.formBuilder.group({\n      id: ['', Validators.required],\n      name: ['', [Validators.required, validadorNonwhiteSpace()]]\n    });\n    this.loadCities();\n  }\n\n  openPanel($event){\n    this.display = true;\n  }\n\n  loadCities(){\n    this.cityService.getCities().subscribe(\n      (data) => {\n        this.cities = data;\n      }\n    );\n  }\n\n  onSubmit(){\n    var city = {\n      name: this.formAddCity.get('name').value\n    };\n    this.cityService.addCity(city).pipe(\n      mergeMap( message => {\n        return this.cityService.getCities().pipe(\n          map(data => {\n            this.cities = data;\n          })\n        );\n      })\n    ).subscribe( data => {\n        var message = this.translateService.instant('city_add_message',{ 'nameCity': this.formAddCity.get('name').value });\n        this.display = false;\n        this.formAddCity.reset();\n        this.messageService.add({key: 'city', severity:'success', summary: this.translateService.instant('city_add'), detail: message });\n      },\n      err => {\n        this.errorAddCity = true;\n      }\n    );\n  }\n\n  removeCity(city){\n    this.confirmationService.confirm({\n      message: this.translateService.instant('message_delete_city'),\n      accept: () => {\n        this.cityService.deleteCity(city).pipe(\n          mergeMap( message => {\n            return this.cityService.getCities().pipe(\n              map(data => {\n                this.cities = data;\n              })\n            );\n          })\n        ).subscribe( data => {\n            var message = this.translateService.instant('city_delete_message',{ 'nameCity': city.name });\n            this.messageService.add({key: 'city', severity:'success', summary: this.translateService.instant('city_delete'), detail: message });\n          },\n          (err) => {\n            if (err.status === 500){\n              var message = this.translateService.instant('city_has_activities');\n              this.messageService.add({key: 'city', severity:'error', summary: this.translateService.instant('error'), detail: message });\n            }\n            else{\n              var message = this.translateService.instant('error_delete_message');\n              this.messageService.add({key: 'city', severity:'error', summary: this.translateService.instant('error'), detail: message });\n            }\n          }\n        );\n      }\n    });\n  }\n\n  hideDialogCity(){\n    this.formAddCity.reset();\n    this.errorAddCity = false;\n  }\n\n  hideDialogEditCity(){\n    this.errorEditCity = false;\n  }\n\n  cancel(){\n    this.display = false;\n  }\n\n  editCity(city){\n    this.displayEditPanel = true;\n    this.formEditCity.patchValue({\n        id: city.id,\n        name : city.name\n      }\n    );\n  }\n\n  onEditSubmit(){\n    var city = {\n      name : this.formEditCity.get('name').value\n    };\n\n    this.cityService.editCity(this.formEditCity.get('id').value, city).pipe(\n      mergeMap(message => {\n        return this.cityService.getCities().pipe();\n      })\n    ).subscribe( data => {\n      this.displayEditPanel = false;\n      var message = this.translateService.instant('city_edit_message',{ 'nameCity': city.name });\n      this.messageService.add({key: 'city', severity:'success', summary: this.translateService.instant('city_edit'), detail: message });\n      this.cities = data;\n    },\n      err => {\n        this.errorEditCity = true;\n      });\n  }\n\n  cancelEdit(){\n    this.displayEditPanel = false;\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        {{ 'cities' | translate }}\n        \n      \n      \n        \n          \n            {{city.name}}\n          \n          \n            \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      {{ 'add_city' | translate }}\n    \n    \n      \n        {{ 'name_city' | translate }}*:\n        \n          \n          {{ 'name_city_required' | translate }}\n          {{ 'name_city_repetead' | translate }}\n        \n      \n    \n    \n      \n      \n    \n  \n\n  \n\n  \n    \n      \n        {{ 'name_city' | translate }}*:\n        \n          \n          {{ 'name_city_required' | translate }}\n          {{ 'name_city_repetead' | translate }}\n        \n      \n    \n    \n      \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./list-cities.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.list-container-cities, .list-header {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.cities-panel {\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n}\n\n.buttons-add-city{\n  display: flex;\n  flex-direction: column;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'cities\\' | translate }}                                                  {{city.name}}                                                                                      {{ \\'add_city\\' | translate }}                      {{ \\'name_city\\' | translate }}*:                            {{ \\'name_city_required\\' | translate }}          {{ \\'name_city_repetead\\' | translate }}                                                              {{ \\'name_city\\' | translate }}*:                            {{ \\'name_city_required\\' | translate }}          {{ \\'name_city_repetead\\' | translate }}                                        '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListCitiesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListInterestComponent.html":{"url":"components/ListInterestComponent.html","title":"component - ListInterestComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListInterestComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/list-interest/list-interest.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-interest\n            \n\n            \n                styleUrls\n                ./list-interest.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-interest.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                            \n                                displayEditDialog\n                            \n                            \n                                errorAddInterest\n                            \n                            \n                                errorEditInterest\n                            \n                            \n                                formAddInterest\n                            \n                            \n                                formEditInterest\n                            \n                            \n                                interest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                cancelEdit\n                            \n                            \n                                deleteInterest\n                            \n                            \n                                editInterest\n                            \n                            \n                                hideDialogEditInterest\n                            \n                            \n                                hideDialogInterest\n                            \n                            \n                                loadInterest\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onEditSubmit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(interestService: InterestService, formBuilder: FormBuilder, confirmationService: ConfirmationService, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/list-interest/list-interest.component.ts:48\n                            \n                        \n\n                \n                    \n                            Constructor de la clase ListInterestComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        interestService\n                                                  \n                                                        \n                                                                        InterestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de intereses.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Clase que permite crear objetos de la clase FormGroup y FormControl.\n\n                                                        \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite mostrar un diálogo de confirmación.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancelEdit\n                        \n                        \n                    \n                \n            \n            \n                \ncancelEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteInterest\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteInterest(interest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:144\n                \n            \n\n\n            \n                \n                    Método que elimina un interés del sistema a través de la API.\nUna vez enviado, también será el encargado de mostrar un mensaje al usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Interés que se desea eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editInterest\n                        \n                        \n                    \n                \n            \n            \n                \neditInterest(interest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideDialogEditInterest\n                        \n                        \n                    \n                \n            \n            \n                \nhideDialogEditInterest()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideDialogInterest\n                        \n                        \n                    \n                \n            \n            \n                \nhideDialogInterest()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadInterest\n                        \n                        \n                    \n                \n            \n            \n                \nloadInterest()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:93\n                \n            \n\n\n            \n                \n                    Método que obtiene los intereses de la API y los almacena.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:79\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n\n      Inicializará el formulario para añadir un interés y para editar un interés.\n      Cargará los dintintos intereses.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEditSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonEditSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openPanel\n                        \n                        \n                    \n                \n            \n            \n                \nopenPanel($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            display\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-interest/list-interest.component.ts:28\n                            \n                        \n\n                \n                    \n                        Indica si el usuario quiere añadir un nuevo interés.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayEditDialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-interest/list-interest.component.ts:40\n                            \n                        \n\n                \n                    \n                        Indica si el usuario ha seleccionado algún interés para editar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorAddInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-interest/list-interest.component.ts:36\n                            \n                        \n\n                \n                    \n                        Indica si se ha producido algún error al añadir un nuevo interés.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorEditInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-interest/list-interest.component.ts:48\n                            \n                        \n\n                \n                    \n                        Indica si se ha producido algún error al modificar un interés.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formAddInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-interest/list-interest.component.ts:32\n                            \n                        \n\n                \n                    \n                        Formulario para añadir un interés.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formEditInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-interest/list-interest.component.ts:44\n                            \n                        \n\n                \n                    \n                        Formulario para editar la información de un interés.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interest\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/list-interest/list-interest.component.ts:24\n                            \n                        \n\n                \n                    \n                        Almacena los intereses\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {InterestService} from '../services/interest/interest.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ConfirmationService, MessageService} from 'primeng/api';\nimport {map, mergeMap} from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\nimport {validadorNonwhiteSpace} from '../validators/validatorNonWhiteSpace.directive';\n\n@Component({\n  selector: 'app-list-interest',\n  templateUrl: './list-interest.component.html',\n  styleUrls: ['./list-interest.component.scss']\n})\n/**\n * Clase ListInterestComponent\n * \n * Clase que muestra la lista de intereses.\n */\nexport class ListInterestComponent implements OnInit {\n\n  /**\n   * Almacena los intereses\n   */\n  interest;\n  /**\n   * Indica si el usuario quiere añadir un nuevo interés.\n   */\n  display: boolean = false;\n  /**\n   * Formulario para añadir un interés.\n   */\n  formAddInterest: FormGroup;\n  /**\n   * Indica si se ha producido algún error al añadir un nuevo interés.\n   */\n  errorAddInterest: boolean = false;\n  /**\n   * Indica si el usuario ha seleccionado algún interés para editar.\n   */\n  displayEditDialog: boolean = false;\n  /**\n   * Formulario para editar la información de un interés.\n   */\n  formEditInterest: FormGroup;\n  /**\n   * Indica si se ha producido algún error al modificar un interés.\n   */\n  errorEditInterest: boolean = false;\n\n  /**\n   * Constructor de la clase ListInterestComponent\n   *\n   * @param interestService \n   * Servicio de intereses.\n   * @param formBuilder \n   * Clase que permite crear objetos de la clase FormGroup y FormControl.\n   * @param confirmationService \n   * Servicio propocionado por la librería PrimeNG que permite mostrar un diálogo de confirmación.\n   * @param messageService \n   * Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n   * @param translateService \n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   */\n  constructor(\n    private interestService: InterestService,\n    private formBuilder: FormBuilder,\n    private confirmationService: ConfirmationService,\n    private messageService: MessageService,\n    private translateService: TranslateService\n  ) { }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   * \n   *      Inicializará el formulario para añadir un interés y para editar un interés.\n   *      Cargará los dintintos intereses.\n   * \n   */\n  ngOnInit(): void {\n    this.formAddInterest = this.formBuilder.group({\n      name: ['', [Validators.required, validadorNonwhiteSpace()]]\n    });\n    this.formEditInterest = this.formBuilder.group({\n      id: ['', Validators.required],\n      name: ['', [Validators.required, validadorNonwhiteSpace()]]\n    });\n    this.loadInterest();\n  }\n\n  /**\n   * Método que obtiene los intereses de la API y los almacena.\n   */\n  loadInterest(){\n    this.interestService.getInterests().subscribe(\n      data => {\n        this.interest = data;\n      }\n    );\n  }\n\n  openPanel($event){\n    this.display = true;\n  }\n\n  onSubmit(){\n    var interest = {\n      nameInterest: this.formAddInterest.get('name').value\n    };\n    this.interestService.addInterests(interest).pipe(\n      mergeMap( message => {\n        return this.interestService.getInterests().pipe(\n          map(data => {\n            this.interest = data;\n          })\n        );\n      })\n    ).subscribe( data => {\n        var message = this.translateService.instant('interest_add_message',{ 'nameInterest': this.formAddInterest.get('name').value });\n        this.display = false;\n        this.formAddInterest.reset();\n        this.messageService.add({key: 'interest', severity:'success', summary: this.translateService.instant('interest_add'), detail: message });\n      },\n      err => {\n        this.errorAddInterest = true;\n      }\n    );\n  }\n\n  hideDialogInterest(){\n    this.formAddInterest.reset();\n    this.errorAddInterest = false;\n  }\n\n  cancel(){\n    this.display = false;\n  }\n\n  /**\n   * Método que elimina un interés del sistema a través de la API.\n   * Una vez enviado, también será el encargado de mostrar un mensaje al usuario.\n   * @param interest \n   * Interés que se desea eliminar\n   */\n  deleteInterest(interest) {\n    this.confirmationService.confirm({\n      message: this.translateService.instant('message_delete_interest'),\n      accept: () => {\n        this.interestService.deleteInterest(interest).pipe(\n          mergeMap( message => {\n            return this.interestService.getInterests().pipe(\n              map(data => {\n                this.interest = data;\n              })\n            );\n          })\n        ).subscribe( data => {\n          var message = this.translateService.instant('interest_delete_message',{ 'nameInterest': interest.nameInterest });\n          this.messageService.add({key: 'interest', severity:'success', summary: this.translateService.instant('interest_delete'), detail: message });\n          },\n          (err) => {\n            if (err.status === 500){\n              var message = this.translateService.instant('interest_has_activities');\n              this.messageService.add({key: 'interest', severity:'error', summary: this.translateService.instant('error'), detail: message });\n            }\n            else{\n              var message = this.translateService.instant('error_delete_message');\n              this.messageService.add({key: 'interest', severity:'error', summary: this.translateService.instant('error'), detail: message });\n            }\n          }\n        );\n      }\n    });\n  }\n\n  editInterest(interest){\n    this.displayEditDialog = true;\n    this.formEditInterest.patchValue({\n      id: interest.id,\n      name: interest.nameInterest\n    });\n  }\n\n  onEditSubmit(){\n    var interest = {\n      nameInterest: this.formEditInterest.get('name').value\n    }\n    this.interestService.editInterest(this.formEditInterest.get('id').value, interest).pipe(\n      mergeMap( data => {\n        return this.interestService.getInterests().pipe();\n      })\n    ).subscribe(\n      data => {\n        this.displayEditDialog = false;\n        var message = this.translateService.instant('interest_edit_message',{ 'nameInterest': interest.nameInterest });\n        this.messageService.add({key: 'interest', severity:'success', summary: this.translateService.instant('interest_edit'), detail: message });\n        this.interest = data;\n      },\n      err => {\n        this.errorEditInterest = true;\n      }\n    );\n  }\n\n  cancelEdit(){\n    this.displayEditDialog = false;\n  }\n\n  hideDialogEditInterest(){\n    this.errorEditInterest = false;\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        {{ 'interest' | translate }}\n        \n      \n      \n        \n          \n            {{interest.nameInterest}}\n          \n          \n            \n            \n          \n        \n      \n    \n  \n  \n    \n      {{ 'add_interest' | translate }}\n    \n    \n      \n        {{ 'name_interest' | translate }}*:\n        \n          \n          {{ 'name_interest_required' | translate }}\n          {{ 'name_interest_repetead' | translate }}\n        \n      \n    \n    \n      \n      \n    \n  \n  \n\n  \n    \n      \n        {{ 'name_interest' | translate }}*:\n        \n          \n          {{ 'name_interest_required' | translate }}\n          {{ 'name_interest_repetead' | translate }}\n        \n      \n    \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./list-interest.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n\n.interest-panel {\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n}\n\n.list-container-interest, .list-header-interest {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.buttons-add-interest{\n  display: flex;\n  flex-direction: column;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'interest\\' | translate }}                                                  {{interest.nameInterest}}                                                                                      {{ \\'add_interest\\' | translate }}                      {{ \\'name_interest\\' | translate }}*:                            {{ \\'name_interest_required\\' | translate }}          {{ \\'name_interest_repetead\\' | translate }}                                                              {{ \\'name_interest\\' | translate }}*:                            {{ \\'name_interest_required\\' | translate }}          {{ \\'name_interest_repetead\\' | translate }}                                        '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListInterestComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListUserComponent.html":{"url":"components/ListUserComponent.html","title":"component - ListUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/list-user/list-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-user\n            \n\n            \n                styleUrls\n                ./list-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cols\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmDelete\n                            \n                            \n                                editUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, confirmationService: ConfirmationService, router: Router, rolService: RolService, translateService: TranslateService, localStorageService: LocalStorageService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/list-user/list-user.component.ts:33\n                            \n                        \n\n                \n                    \n                            Constructor de la clase ListUserComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de usuarios.\n\n                                                        \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite mostrar un diálogo de confirmación.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite la navegación entre vistas.\n\n                                                        \n                                                \n                                                \n                                                        rolService\n                                                  \n                                                        \n                                                                        RolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de roles.\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmDelete\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmDelete(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-user/list-user.component.ts:88\n                \n            \n\n\n            \n                \n                    Método que elimina un usuario del sistema a través de la API.\nUna vez enviado, también será el encargado de mostrar un mensaje al usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Usuario que se desea eliminar.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \neditUser(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-user/list-user.component.ts:119\n                \n            \n\n\n            \n                \n                    Método que redirige al usuario al componente EditUserAdmin.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Usuario cuya información se quiere editar.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-user/list-user.component.ts:70\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n  \n      Inicializará los objetos que representan una columna de la tabla.\n      Cargará los dintintos usuarios.\n  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cols\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-user/list-user.component.ts:33\n                            \n                        \n\n                \n                    \n                        Array de objetos que representan las columnas del componente tabla.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-user/list-user.component.ts:29\n                            \n                        \n\n                \n                    \n                        Almacena los usuarios\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../services/user/user.service';\nimport {ConfirmationService, MessageService} from 'primeng/api';\nimport {Router} from '@angular/router';\nimport {RolService} from '../services/rol/rol.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {map, mergeMap} from 'rxjs/operators';\nimport {LocalStorageService} from '../services/local-storage/local-storage.service';\nimport {User} from '../models/user';\n\n@Component({\n  selector: 'app-list-user',\n  templateUrl: './list-user.component.html',\n  styleUrls: ['./list-user.component.scss']\n})\n/**\n * Clase ListUserComponent\n *\n * Clase que muestra la lista de usuarios registrados en el sistema.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class ListUserComponent implements OnInit {\n\n  /**\n   * Almacena los usuarios\n   */\n  users: User[] = [];\n  /**\n   * Array de objetos que representan las columnas del componente tabla.\n   */\n  cols: any[];\n\n  /**\n   * Constructor de la clase ListUserComponent\n   *\n   * @param userService\n   * Servicio de usuarios.\n   * @param confirmationService\n   * Servicio propocionado por la librería PrimeNG que permite mostrar un diálogo de confirmación.\n   * @param router\n   * Servicio que permite la navegación entre vistas.\n   * @param rolService\n   * Servicio de roles.\n   * @param translateService\n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   * @param localStorageService\n   * Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n   * @param messageService\n   * Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n   */\n  constructor(\n    private userService: UserService,\n    private confirmationService: ConfirmationService,\n    private router: Router,\n    private rolService: RolService,\n    private translateService: TranslateService,\n    private localStorageService: LocalStorageService,\n    private messageService: MessageService\n  ) { }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   *  \n   *      Inicializará los objetos que representan una columna de la tabla.\n   *      Cargará los dintintos usuarios.\n   *  \n   */\n  ngOnInit(): void {\n    this.cols = [\n      { field: 'userName', header: 'username' },\n      { field: 'email', header: 'Email' },\n      { field: 'dateBirthday', header: 'date_birth' },\n      { field: 'roles', header: 'Role'}\n    ];\n    this.userService.getUsers().subscribe(response => {\n      this.users = response.filter(user => user.email !== this.localStorageService.getEmailUser());\n    });\n  }\n\n  /**\n   * Método que elimina un usuario del sistema a través de la API.\n   * Una vez enviado, también será el encargado de mostrar un mensaje al usuario.\n   * @param user\n   * Usuario que se desea eliminar.\n   */\n  confirmDelete(user){\n    this.confirmationService.confirm({\n      message: this.translateService.instant('message_delete_user'),\n      accept: () => {\n        this.userService.deleteUser(user.id).pipe(\n          mergeMap( message => {\n            return this.userService.getUsers().pipe(\n              map(data => {\n                this.users = data;\n                this.users = this.users.filter(restUser => restUser.email !== this.localStorageService.getEmailUser());\n              })\n            );\n          })\n        ).subscribe( data => {\n            var message = this.translateService.instant('user_delete_message',{ 'email': user.email });\n            this.messageService.add({key: 'user', severity:'success', summary: this.translateService.instant('user_delete'), detail: message });\n          },\n          (err) => {\n            var message = this.translateService.instant('error_delete_message');\n            this.messageService.add({key: 'user', severity:'error', summary: this.translateService.instant('error'), detail: message });\n          }\n        );\n      }\n    });\n  }\n\n  /**\n   * Método que redirige al usuario al componente EditUserAdmin.\n   * @param user\n   * Usuario cuya información se quiere editar.\n   */\n  editUser(user){\n    this.router.navigateByUrl('admin/user/edit/' + user.id);\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n          {{ 'list_user' | translate }}\n          \n                    \n                    \n                \n        \n      \n      \n        \n          \n            {{ col.header | translate }}\n            \n          \n          \n          \n        \n      \n      \n        \n          {{user.userName}}\n          {{user.email}}\n          {{user.dateBirthday| date: 'dd/MM/yyyy'}}\n          \n                  \n                      {{rol}}\n                  \n          \n          \n            \n            \n          \n        \n      \n      \n        {{ 'message-no-user-match' | translate }}\n      \n    \n  \n\n\n\n\n\n    \n\n    \n                \n                    ./list-user.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.user-panel {\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n}\n\n.user-container{\n  display: inline-flex;\n  height: 100%;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.table-user{\n  padding: 15px;\n\n  ::ng-deep .p-datatable-tbody > tr > td,\n  ::ng-deep .p-datatable-thead > tr > th{\n    word-wrap:break-word;\n    text-align: center;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ \\'list_user\\' | translate }}                                                                                                                    {{ col.header | translate }}                                                                                {{user.userName}}          {{user.email}}          {{user.dateBirthday| date: \\'dd/MM/yyyy\\'}}                                                  {{rol}}                                                                                                    {{ \\'message-no-user-match\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/local-storage/local-storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decodeToken\n                            \n                            \n                                getEmailUser\n                            \n                            \n                                getRolesUser\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                logOut\n                            \n                            \n                                    Public\n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/local-storage/local-storage.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decodeToken\n                        \n                        \n                    \n                \n            \n            \n                \ndecodeToken(token)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage/local-storage.service.ts:70\n                \n            \n\n\n            \n                \n                    Método que decodifica el token de acceso\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        objeto con la información decodificada del token\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage/local-storage.service.ts:49\n                \n            \n\n\n            \n                \n                    Método que obtiene el email del token.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        el email del usuario si se encuentra autenticado o null en caso contrario\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRolesUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetRolesUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage/local-storage.service.ts:59\n                \n            \n\n\n            \n                \n                    Método que obtiene los roles del token.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        los roles del usuario si se encuentra autenticado o null en caso contrario\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage/local-storage.service.ts:34\n                \n            \n\n\n            \n                \n                    Método que obtiene el token del objeto LocalStorage\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        el token\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage/local-storage.service.ts:41\n                \n            \n\n\n            \n                \n                    Método que elimina la información almacenada en el objeto LocalStorage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage/local-storage.service.ts:25\n                \n            \n\n\n            \n                \n                    Método que almacena el nuevo token en el objeto LocalStorage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport jwt_decode from 'jwt-decode';\n\n/**\n * Clave para almacenar el valor del token en el LocalStorage\n */\nconst TOKEN_KEY = 'AuthToken';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clase LocalStorageService\n * \n * Clase que se encarga de acceder al objeto LocalStorage del navegador.\n */\nexport class LocalStorageService {\n\n  constructor() { }\n\n  /**\n   * Método que almacena el nuevo token en el objeto LocalStorage\n   * @param token token\n   */\n  public setToken(token: string): void {\n    window.localStorage.removeItem(TOKEN_KEY);\n    window.localStorage.setItem(TOKEN_KEY, token);\n  }\n\n  /**\n   * Método que obtiene el token del objeto LocalStorage\n   * @returns el token\n   */\n  public getToken(): string {\n    return localStorage.getItem(TOKEN_KEY);\n  }\n\n  /**\n   * Método que elimina la información almacenada en el objeto LocalStorage\n   */\n  public logOut(): void {\n    window.localStorage.clear();\n  }\n\n  /**\n   * Método que obtiene el email del token.\n   * @returns el email del usuario si se encuentra autenticado o null en caso contrario\n   */\n  getEmailUser() {\n    var token = this.getToken();\n    var decodedToken = this.decodeToken(token);\n    return decodedToken ? decodedToken.sub : null;\n  }\n\n  /**\n   * Método que obtiene los roles del token.\n   * @returns los roles del usuario si se encuentra autenticado o null en caso contrario\n   */\n  getRolesUser() {\n    var token = this.getToken();\n    var decodedToken = this.decodeToken(token);\n    return decodedToken ? decodedToken.ROLES : [];\n  }\n\n  /**\n   * Método que decodifica el token de acceso\n   * @param token token\n   * @returns objeto con la información decodificada del token\n   */\n  decodeToken(token): any {\n    if (token) {\n      return jwt_decode(token);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                infoMessage\n                            \n                            \n                                isLoginFail\n                            \n                            \n                                loginForm\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                processMessageTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, formBuilder: FormBuilder, router: Router, route: ActivatedRoute, messageService: MessageService, translateService: TranslateService, notification: NotificationService, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor de la clase LoginComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Clase que permite crear objetos de la clase FormGroup y FormControl.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite la navegación entre vistas\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                                \n                                                        notification\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite almacenar notificaciones.\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessages\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:110\n                \n            \n\n\n            \n                \n                    Métódo que obtiene mensajes de notificación a través del servicio.\n\n\n                    \n                        Returns :     Message[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:143\n                \n            \n\n\n            \n                \n                    Método que se ejecuta al destruir un componente.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:80\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n\n      Inicializará el formulario\n      Si el usuario fue redirigido al Login desde SignUp, se inicializará el mensaje de éxito\n  \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:119\n                \n            \n\n\n            \n                \n                    Método que crea un objeto user a partir de los datos del formulario y se lo envía a la API.\nUna vez enviado y si las credenciales son correctas, también será el encargado de redirigir al usuario al componente correspondiente según su rol.\nEn caso contrario, se mostrará un error al usuario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processMessageTranslation\n                        \n                        \n                    \n                \n            \n            \n                \nprocessMessageTranslation(messages)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:97\n                \n            \n\n\n            \n                \n                    Método que traduce textos.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    messages\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Los textos a traducir.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            infoMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                        Almacena el mensaje que se muestra al usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoginFail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:33\n                            \n                        \n\n                \n                    \n                        Indica si el inicio de sesión falló.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:29\n                            \n                        \n\n                \n                    \n                        Formulario para iniciar sesión en la aplicación.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:37\n                            \n                        \n\n                \n                    \n                        Almacena los roles del usuario autenticado.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../services/auth/auth.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Message, MessageService} from 'primeng/api';\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\nimport {NotificationService} from '../services/message/notification.service';\nimport {LocalStorageService} from '../services/local-storage/local-storage.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n/**\n * Clase LoginComponent\n *\n * Clase que permite iniciar sesión a un usuario.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Formulario para iniciar sesión en la aplicación.\n   */\n  loginForm: FormGroup;\n  /**\n   * Indica si el inicio de sesión falló.\n   */\n  isLoginFail = false;\n  /**\n   * Almacena los roles del usuario autenticado.\n   */\n  roles: string[] = [];\n  /**\n   * Almacena el mensaje que se muestra al usuario.\n   */\n  infoMessage = [];\n\n  /**\n   * Constructor de la clase LoginComponent\n   *\n   * @param authService\n   * Servicio de autenticación.\n   * @param formBuilder\n   * Clase que permite crear objetos de la clase FormGroup y FormControl.\n   * @param router\n   * Servicio que permite la navegación entre vistas\n   * @param route\n   *\n   * @param messageService\n   * Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n   * @param translateService\n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   * @param notification\n   * Servicio que permite almacenar notificaciones.\n   * @param localStorageService\n   * Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n   */\n  constructor(\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private notification: NotificationService,\n    private localStorageService: LocalStorageService) {}\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   * \n   *      Inicializará el formulario\n   *      Si el usuario fue redirigido al Login desde SignUp, se inicializará el mensaje de éxito\n   *  \n    */\n  ngOnInit(): void {\n    this.processMessageTranslation(this.getMessages());\n    this.infoMessage = this.getMessages();\n    this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.processMessageTranslation(this.getMessages());\n    });\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /**\n   * Método que traduce textos.\n   * @param messages\n   * Los textos a traducir.\n   */\n  processMessageTranslation(messages): void {\n    this.infoMessage = [];\n    for (let message of messages){\n      var mAux = message;\n      mAux.summary = this.translateService.instant(\"sign_up_successful_message_summary\");\n      mAux.detail = this.translateService.instant(\"sign_up_successful_message_detail\");\n      this.infoMessage.push(mAux);\n    }\n  }\n\n  /**\n   * Métódo que obtiene mensajes de notificación a través del servicio.\n   */\n  getMessages(): Message[] {\n    return this.notification.message;\n  }\n\n  /**\n   * Método que crea un objeto user a partir de los datos del formulario y se lo envía a la API.\n   * Una vez enviado y si las credenciales son correctas, también será el encargado de redirigir al usuario al componente correspondiente según su rol.\n   * En caso contrario, se mostrará un error al usuario.\n   */\n  onSubmit() {\n    const usuario = {\n      email: this.loginForm.get('email').value,\n      password: this.loginForm.get('password').value\n    };\n    this.authService.login(usuario).subscribe(data => {\n        this.localStorageService.setToken(data.token);\n        this.isLoginFail = false;\n        this.roles = this.localStorageService.getRolesUser();\n        if (this.roles.includes(\"ROLE_ADMIN\")){\n          this.router.navigate(['/user']);\n        }\n        else{\n          this.router.navigate(['/recommendationMap']);\n        }\n      },\n      (err: any) => {\n        this.isLoginFail = true;\n      });\n  }\n\n  /**\n   * Método que se ejecuta al destruir un componente.\n   */\n  ngOnDestroy() {\n    this.notification.message = [];\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n  \n    \n      \n      {{ 'welcome' | translate }}\n      Aplicación de turismo basada en las preferencias del usuario\n    \n    \n      \n      \n        \n          \n            \n            Email\n          \n        \n        \n          \n        \n        \n          \n            \n            {{ 'password' | translate }}\n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n      {{ 'sign_up' | translate }}\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.login-component {\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n  \n  display: flex;\n  flex-direction: column;\n}\n\n.right-container, .left-container{\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\nform {\n  margin-top: 10px;\n}\n\n#img_logo {\n  width: 300px;\n  height: 300px;\n}\n\n#img-icon-user{\n  margin-top: 5px;\n}\n\n::ng-deep .p-messages {\n  margin-left: 5px;\n  margin-right: 5px;\n}\n\n.right-container{\n  .p-field{\n    margin-bottom: 1.5rem;\n  }\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ \\'welcome\\' | translate }}      Aplicación de turismo basada en las preferencias del usuario                                                              Email                                                                                      {{ \\'password\\' | translate }}                                                                                                            {{ \\'sign_up\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/map/map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map\n            \n\n            \n                styleUrls\n                ./map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initMap\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/map/map.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/map/map.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  private map;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.initMap();\n  }\n\n  private initMap(): void {\n    this.map = L.map('map', {\n      center: [ 43.333333, -6 ],\n      zoom: 8\n    });\n\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 19,\n      attribution: '&copy; OpenStreetMap'\n    });\n\n    tiles.addTo(this.map);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./map.component.scss\n                \n                .map-container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: 30px;\n}\n\n.map-frame {\n  border: 2px solid black;\n  height: 100%;\n}\n\n#map {\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuBarComponent.html":{"url":"components/MenuBarComponent.html","title":"component - MenuBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/menu-bar/menu-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu-bar\n            \n\n            \n                styleUrls\n                ./menu-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authority\n                            \n                            \n                                email\n                            \n                            \n                                isLogin\n                            \n                            \n                                roles\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                switchLang\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, translate: TranslateService, localStorageService: LocalStorageService, config: PrimeNGConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/menu-bar/menu-bar.component.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor de la clase MenuBarComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite la navegación entre vistas\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    PrimeNGConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite tener acceso a la API I18N proporcionada por dicha librería.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu-bar/menu-bar.component.ts:84\n                \n            \n\n\n            \n                \n                    Método que permite cerrar sesión a un usuario autenticado y le redirige de vuelta a la página de inicio de sesión.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu-bar/menu-bar.component.ts:66\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n\n      El email del usuario autenticado\n      Los roles del usuario autenticado\n  \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchLang\n                        \n                        \n                    \n                \n            \n            \n                \nswitchLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu-bar/menu-bar.component.ts:97\n                \n            \n\n\n            \n                \n                    Método que permite cambiar el idioma a la aplicación.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El idioma a utilizar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authority\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu-bar/menu-bar.component.ts:34\n                            \n                        \n\n                \n                    \n                        Rol que identifica al usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/menu-bar/menu-bar.component.ts:38\n                            \n                        \n\n                \n                    \n                        Email del usuario autenticado.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu-bar/menu-bar.component.ts:26\n                            \n                        \n\n                \n                    \n                        Indica si el usuario está autenticado o no.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu-bar/menu-bar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Roles del usuario autenticado.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu-bar/menu-bar.component.ts:54\n                            \n                        \n\n                \n                    \n                        Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LocalStorageService} from '../services/local-storage/local-storage.service';\nimport {PrimeNGConfig} from 'primeng/api';\n\n@Component({\n  selector: 'app-menu-bar',\n  templateUrl: './menu-bar.component.html',\n  styleUrls: [\n    './menu-bar.component.scss'\n  ],\n})\n/**\n * Clase MenuBarComponent\n *\n * Clase que proporciona enlaces a las diferentes páginas de la aplicación.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class MenuBarComponent implements OnInit {\n  /**\n   * Indica si el usuario está autenticado o no.\n   */\n  isLogin = false;\n  /**\n   * Roles del usuario autenticado.\n   */\n  roles: string[];\n  /**\n   * Rol que identifica al usuario.\n   */\n  authority: string;\n  /**\n   * Email del usuario autenticado.\n   */\n  email;\n\n  /**\n   * Constructor de la clase MenuBarComponent\n   *\n   * @param router\n   * Servicio que permite la navegación entre vistas\n   * @param translate\n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   * @param localStorageService\n   * Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n   * @param config\n     Servicio propocionado por la librería PrimeNG que permite tener acceso a la API I18N proporcionada por dicha librería.\n   */\n  constructor(\n    private router: Router,\n    public translate: TranslateService,\n    private localStorageService: LocalStorageService,\n    private config: PrimeNGConfig\n  ) {}\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   * \n   *      El email del usuario autenticado\n   *      Los roles del usuario autenticado\n   *  \n   */\n  ngOnInit(): void {\n    this.email = this.localStorageService.getEmailUser();\n    if (this.localStorageService.getToken()){\n      this.isLogin = true;\n      this.roles = [];\n      this.roles = this.localStorageService.getRolesUser();\n      if (this.roles.includes(\"ROLE_ADMIN\")){\n        this.authority = 'admin';\n      }\n      else {\n        this.authority = 'user';\n      }\n    }\n  }\n\n  /**\n   * Método que permite cerrar sesión a un usuario autenticado y le redirige de vuelta a la página de inicio de sesión.\n   */\n  logOut(): void {\n    this.localStorageService.logOut();\n    this.isLogin = false;\n    this.authority = '';\n    this.router.navigateByUrl('/login');\n  }\n\n  /**\n   * Método que permite cambiar el idioma a la aplicación.\n   *\n   * @param lang\n   * El idioma a utilizar\n   */\n  switchLang(lang: string) {\n    this.translate.use(lang);\n    this.translate.get('primeng').subscribe(res => this.config.setTranslation(res));\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n         {{'users' | translate }}(current)\n      \n      \n         {{'cities' | translate }}(current)\n      \n      \n         {{'activities' | translate }}(current)\n      \n      \n         {{'interests' | translate }}(current)\n      \n      \n         {{'recommendation' | translate }}(current)\n      \n      \n         {{'activities_valued' | translate }}(current)\n      \n    \n    \n      \n        \n          {{ 'language' | translate }}\n        \n        \n           {{ 'spanish' | translate }}\n           {{ 'english' | translate }}\n        \n      \n      \n        \n          \n            \n            {{email}}\n          \n          \n             {{ 'yourPerfile' | translate }}\n            \n             {{ 'log_out' | translate }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./menu-bar.component.scss\n                \n                @import \"~bootstrap/scss/bootstrap\";\n\n:host ::ng-deep .menu-bar {\n  min-width: 800px;\n  border-radius: 3px;\n}\n\n/*.container-name{\n  display: flex;\n  justify-content: center; !* align horizontal *!\n  align-items: center; !* align vertical *!\n}*/\n\n.navbar-light .navbar-nav .nav-link:hover{\n  background-color: rgba(0, 0, 0, 0.1);\n}\n\n.navbar-light .navbar-nav .nav-link.active{\n  color: #2196F3;\n}\n\n.navbar-light .navbar-nav .nav-link{\n  color: rgba(0,0,0, 0.9);\n}\n\n.navbar-nav .nav-link{\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                             {{\\'users\\' | translate }}(current)                     {{\\'cities\\' | translate }}(current)                     {{\\'activities\\' | translate }}(current)                     {{\\'interests\\' | translate }}(current)                     {{\\'recommendation\\' | translate }}(current)                     {{\\'activities_valued\\' | translate }}(current)                                      {{ \\'language\\' | translate }}                           {{ \\'spanish\\' | translate }}           {{ \\'english\\' | translate }}                                                              {{email}}                                 {{ \\'yourPerfile\\' | translate }}                         {{ \\'log_out\\' | translate }}                              '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockActivityService.html":{"url":"injectables/MockActivityService.html","title":"injectable - MockActivityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockActivityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/activity/activity-service-mock.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ActivityService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listActivities\n                            \n                            \n                                listActivitiesRated\n                            \n                            \n                                listRecommendedActivities\n                            \n                            \n                                activityUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActivity\n                            \n                            \n                                deleteActivity\n                            \n                            \n                                editActivity\n                            \n                            \n                                getActivities\n                            \n                            \n                                getActivity\n                            \n                            \n                                getRatedActivities\n                            \n                            \n                                getRecommendedActivities\n                            \n                            \n                                postRateActivity\n                            \n                            \n                                    Public\n                                addActivity\n                            \n                            \n                                    Public\n                                deleteActivity\n                            \n                            \n                                    Public\n                                editActivity\n                            \n                            \n                                    Public\n                                getActivities\n                            \n                            \n                                    Public\n                                getActivity\n                            \n                            \n                                    Public\n                                getRatedActivities\n                            \n                            \n                                    Public\n                                getRecommendedActivities\n                            \n                            \n                                    Public\n                                postRateActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addActivity\n                        \n                        \n                    \n                \n            \n            \n                \naddActivity(formData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity-service-mock.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteActivity\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteActivity(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity-service-mock.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editActivity\n                        \n                        \n                    \n                \n            \n            \n                \neditActivity(id, activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity-service-mock.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActivities\n                        \n                        \n                    \n                \n            \n            \n                \ngetActivities()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity-service-mock.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActivity\n                        \n                        \n                    \n                \n            \n            \n                \ngetActivity(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity-service-mock.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRatedActivities\n                        \n                        \n                    \n                \n            \n            \n                \ngetRatedActivities(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity-service-mock.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRecommendedActivities\n                        \n                        \n                    \n                \n            \n            \n                \ngetRecommendedActivities(idUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity-service-mock.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idUser\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postRateActivity\n                        \n                        \n                    \n                \n            \n            \n                \npostRateActivity(activityRate)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity-service-mock.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityRate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addActivity(formData)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityService\n\n                \n            \n            \n                \n                        Defined in         ActivityService:56\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para añadir una nueva actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    formData\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto FormData que incluye la información de la nueva actividad.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteActivity(id)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityService\n\n                \n            \n            \n                \n                        Defined in         ActivityService:65\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición DELETE para eliminar una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador de la actividad\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editActivity(id, activity)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityService\n\n                \n            \n            \n                \n                        Defined in         ActivityService:76\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición PUT para modificar la información de una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador de la actividad\n\n                                    \n                                \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto actividad con la información actualizada.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getActivities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActivities()\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityService\n\n                \n            \n            \n                \n                        Defined in         ActivityService:38\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de actividades.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActivity(id)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityService\n\n                \n            \n            \n                \n                        Defined in         ActivityService:47\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador de la actividad\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRatedActivities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRatedActivities(idUser)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityService\n\n                \n            \n            \n                \n                        Defined in         ActivityService:103\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de actividades valoradas por el usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idUser\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRecommendedActivities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecommendedActivities(idUser)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityService\n\n                \n            \n            \n                \n                        Defined in         ActivityService:94\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de actividades recomendadas al usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idUser\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postRateActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postRateActivity(activityRate)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityService\n\n                \n            \n            \n                \n                        Defined in         ActivityService:85\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para añadir una nueva valoración a una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activityRate\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto con la valoración del usuario a una actividad\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API \n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listActivities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 1,\n      name: 'Universidad Laboral',\n      description: 'Universidad situada en Gijón',\n      latitude: 43.524088,\n      longitude: -5.614049,\n      pathImage: 'universidad.jpg',\n      city: 'Gijón',\n      interest: 'Iglesia',\n      address: 'Universidad Laboral, Calle José Luis Álvarez Margaride, Cabueñes, La Guía, Distrito Rural, Gijón, 33394, España',\n      metadataImage: {\n        filename: 'universidad.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      }\n    },\n    {\n      id: 2,\n      name: 'Elogio del horizonte',\n      description: 'Elogio del horizonte es el nombre de una escultura de hormigón situada en la ciudad de Gijón, realizada por el escultor vasco Eduardo Chillida.​ Se trata de una obra de grandes proporciones erigida en el año 1990 en el Cerro de Santa Catalina.​',\n      latitude: 43.549,\n      longitude: -5.6631,\n      pathImage: 'elogio.jpg',\n      city: 'Gijón',\n      interest: 'Escultura',\n      address: 'Elogio del Horizonte, Parque del Cerro, Cimadevilla, Distrito Centro, Gijón, 33201, España',\n      metadataImage: {\n        filename: 'elogio.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      }\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/activity/activity-service-mock.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listActivitiesRated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 8,\n      name: 'Estatua de Don Pelayo',\n      description: 'Escultura de Gijón',\n      latitude: 43.544993,\n      longitude: -5.664037,\n      pathImage: 'pelayo.jpg',\n      city: 'Gijón',\n      interest: 'Escultura',\n      address: 'Plaza del Marqués, 1, 33201 Gijón, Asturias',\n      metadataImage: {\n        filename: 'pelayo.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      },\n      score: 5,\n      average: 2\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/activity/activity-service-mock.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listRecommendedActivities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 1,\n      name: 'Universidad Laboral',\n      description: 'Universidad situada en Gijón',\n      latitude: 43.524088,\n      longitude: -5.614049,\n      pathImage: 'universidad.jpg',\n      city: 'Gijón',\n      interest: 'Iglesia',\n      address: 'Universidad Laboral, Calle José Luis Álvarez Margaride, Cabueñes, La Guía, Distrito Rural, Gijón, 33394, España',\n      metadataImage: {\n        filename: 'universidad.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      },\n      score: 1.99999,\n      average: 2\n    },\n    {\n      id: 2,\n      name: 'Elogio del horizonte',\n      description: 'Elogio del horizonte es el nombre de una escultura de hormigón situada en la ciudad de Gijón, realizada por el escultor vasco Eduardo Chillida.​ Se trata de una obra de grandes proporciones erigida en el año 1990 en el Cerro de Santa Catalina.​',\n      latitude: 43.549,\n      longitude: -5.6631,\n      pathImage: 'elogio.jpg',\n      city: 'Gijón',\n      interest: 'Escultura',\n      address: 'Elogio del Horizonte, Parque del Cerro, Cimadevilla, Distrito Centro, Gijón, 33201, España',\n      metadataImage: {\n        filename: 'elogio.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      },\n      score: 0.5,\n      average: 2\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/activity/activity-service-mock.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activityUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/activity'\n                        \n                    \n                            \n                                \n                                    Inherited from         ActivityService\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActivityService:26\n\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {ActivityService} from './activity.service';\nimport {Injectable} from '@angular/core';\nimport {Activity, ActivityRecommended} from '../../models/activity';\nimport {Observable, of} from 'rxjs';\n\n\n@Injectable()\nexport class MockActivityService extends ActivityService {\n\n  listActivities = [\n    {\n      id: 1,\n      name: 'Universidad Laboral',\n      description: 'Universidad situada en Gijón',\n      latitude: 43.524088,\n      longitude: -5.614049,\n      pathImage: 'universidad.jpg',\n      city: 'Gijón',\n      interest: 'Iglesia',\n      address: 'Universidad Laboral, Calle José Luis Álvarez Margaride, Cabueñes, La Guía, Distrito Rural, Gijón, 33394, España',\n      metadataImage: {\n        filename: 'universidad.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      }\n    },\n    {\n      id: 2,\n      name: 'Elogio del horizonte',\n      description: 'Elogio del horizonte es el nombre de una escultura de hormigón situada en la ciudad de Gijón, realizada por el escultor vasco Eduardo Chillida.​ Se trata de una obra de grandes proporciones erigida en el año 1990 en el Cerro de Santa Catalina.​',\n      latitude: 43.549,\n      longitude: -5.6631,\n      pathImage: 'elogio.jpg',\n      city: 'Gijón',\n      interest: 'Escultura',\n      address: 'Elogio del Horizonte, Parque del Cerro, Cimadevilla, Distrito Centro, Gijón, 33201, España',\n      metadataImage: {\n        filename: 'elogio.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      }\n    }\n  ];\n\n\n  listActivitiesRated = [\n    {\n      id: 8,\n      name: 'Estatua de Don Pelayo',\n      description: 'Escultura de Gijón',\n      latitude: 43.544993,\n      longitude: -5.664037,\n      pathImage: 'pelayo.jpg',\n      city: 'Gijón',\n      interest: 'Escultura',\n      address: 'Plaza del Marqués, 1, 33201 Gijón, Asturias',\n      metadataImage: {\n        filename: 'pelayo.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      },\n      score: 5,\n      average: 2\n    }\n  ];\n\n  listRecommendedActivities = [\n    {\n      id: 1,\n      name: 'Universidad Laboral',\n      description: 'Universidad situada en Gijón',\n      latitude: 43.524088,\n      longitude: -5.614049,\n      pathImage: 'universidad.jpg',\n      city: 'Gijón',\n      interest: 'Iglesia',\n      address: 'Universidad Laboral, Calle José Luis Álvarez Margaride, Cabueñes, La Guía, Distrito Rural, Gijón, 33394, España',\n      metadataImage: {\n        filename: 'universidad.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      },\n      score: 1.99999,\n      average: 2\n    },\n    {\n      id: 2,\n      name: 'Elogio del horizonte',\n      description: 'Elogio del horizonte es el nombre de una escultura de hormigón situada en la ciudad de Gijón, realizada por el escultor vasco Eduardo Chillida.​ Se trata de una obra de grandes proporciones erigida en el año 1990 en el Cerro de Santa Catalina.​',\n      latitude: 43.549,\n      longitude: -5.6631,\n      pathImage: 'elogio.jpg',\n      city: 'Gijón',\n      interest: 'Escultura',\n      address: 'Elogio del Horizonte, Parque del Cerro, Cimadevilla, Distrito Centro, Gijón, 33201, España',\n      metadataImage: {\n        filename: 'elogio.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      },\n      score: 0.5,\n      average: 2\n    }\n  ];\n\n  getActivities(): Observable {\n    return of(this.listActivities);\n  }\n\n  deleteActivity(id): Observable {\n    this.listActivities = this.listActivities.filter(p => p.id !== id);\n    return of({\n      mensaje: 'La actividad ha sido eliminada'\n    });\n  }\n\n  addActivity(formData): Observable {\n    var activityToAdd = {\n      id: this.listActivities[this.listActivities.length - 1].id + 1,\n      name: formData.get('name'),\n      description:  formData.get('description'),\n      latitude: formData.get('latitude'),\n      longitude: formData.get('longitude'),\n      pathImage: '',\n      city: formData.get('city'),\n      interest: formData.get('interest'),\n      address: formData.get('address'),\n      metadataImage: {\n        filename: '',\n        mimeType: '',\n        data: '',\n      }\n    }\n    this.listActivities.push(activityToAdd);\n    return of({\n      mensaje: 'La actividad ha sido añadida'\n    });\n  }\n\n  getRatedActivities(user): Observable{\n    return of(this.listActivitiesRated);\n  }\n\n  getRecommendedActivities(idUser): Observable {\n    return of(this.listRecommendedActivities);\n  }\n\n  editActivity(id, activity): Observable {\n    // ERROR. El observer se llamaba antes\n    const updateItem = this.listActivities.find(acti => acti.id === id);\n    const index = this.listActivities.indexOf(updateItem);\n\n    var cityToEdit = {\n      id: id,\n      name: activity.get('name'),\n      description:  activity.get('description'),\n      latitude: activity.get('latitude'),\n      longitude: activity.get('longitude'),\n      pathImage: updateItem.pathImage,\n      city: activity.get('city'),\n      interest: activity.get('interest'),\n      address: activity.get('address'),\n      metadataImage: {\n        filename: updateItem.metadataImage.filename,\n        mimeType: updateItem.metadataImage.mimeType,\n        data: updateItem.metadataImage.data,\n      }\n    }\n    this.listActivities[index] = cityToEdit;\n    return of({\n      mensaje: 'La actividad ha sido modificada'\n    });\n  }\n\n  getActivity(id): Observable {\n    const activity = this.listActivities.find(p => p.id === id);\n    return of(activity);\n  }\n\n  postRateActivity(activityRate): Observable {\n    this.listRecommendedActivities.push(activityRate);\n    return of({\n      mensaje: 'La actividad ha sido valorada'\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockAuthService.html":{"url":"injectables/MockAuthService.html","title":"injectable - MockAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth-service-mock.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                signUp\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(user: UserLogin)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth-service-mock.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \nsignUp(user: UserSignUp)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth-service-mock.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserSignUp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: UserLogin)\n                \n            \n\n\n            \n                \n                    Inherited from         AuthService\n\n                \n            \n            \n                \n                        Defined in         AuthService:38\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para autenticar al usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto usuario que incluye la información del usuario que se intenta autenticar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(user: UserSignUp)\n                \n            \n\n\n            \n                \n                    Inherited from         AuthService\n\n                \n            \n            \n                \n                        Defined in         AuthService:47\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para registrar a un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserSignUp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto usuario que incluye la información del usuario que se registra\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/auth'\n                        \n                    \n                            \n                                \n                                    Inherited from         AuthService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AuthService:25\n\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {AuthService} from './auth.service';\nimport {Observable, of} from 'rxjs';\nimport {UserLogin, UserSignUp} from '../../models/user';\nimport {JwtModel} from '../../models/jwt_model';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class MockAuthService extends AuthService{\n\n  signUp(user: UserSignUp): Observable {\n    return of({\n      mensaje: 'Usuario añadido'\n    });\n  }\n\n  login(user: UserLogin): Observable {\n    if (user.email === \"alba@email.com\" ){\n      return of({\n        token: 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbkBlbWFpbC5jb20iLCJST0xFUyI6IlJPTEVfVVNFUiIsImlhdCI6MTYxOTYyNjg0NSwiZXhwIjoxNjE5NjMwNDQ1fQ.G9Lo7n_qFYlwN6QUSijFO-REsPft5VvaFlgHKTOFmvphx20NL7b1-8d8-GidTd2a_UhHDHlVjHV6LdIGGa2gTw'\n      });\n    }\n    else{\n      return of({\n        token: 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbkBlbWFpbC5jb20iLCJST0xFUyI6IlJPTEVfQURNSU4sUk9MRV9VU0VSIiwiaWF0IjoxNjE5NjI2ODQ1LCJleHAiOjE2MTk2MzA0NDV9.pl_Io9pBx38Yl2jUZXB4UabZFix64n657neG7fHteN3DguhTp_IgUOze0PabMk55bnW9dftQbsBTdWjQFhHDkQ'\n      });\n    }\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockCityService.html":{"url":"injectables/MockCityService.html","title":"injectable - MockCityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockCityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/city/city-service-mock.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CityService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listCities\n                            \n                            \n                                cityURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCity\n                            \n                            \n                                deleteCity\n                            \n                            \n                                editCity\n                            \n                            \n                                getCities\n                            \n                            \n                                    Public\n                                addCity\n                            \n                            \n                                    Public\n                                deleteCity\n                            \n                            \n                                    Public\n                                editCity\n                            \n                            \n                                    Public\n                                getCities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCity\n                        \n                        \n                    \n                \n            \n            \n                \naddCity(city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/city/city-service-mock.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteCity\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteCity(city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/city/city-service-mock.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editCity\n                        \n                        \n                    \n                \n            \n            \n                \neditCity(id, city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/city/city-service-mock.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCities\n                        \n                        \n                    \n                \n            \n            \n                \ngetCities()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/city/city-service-mock.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCity(city)\n                \n            \n\n\n            \n                \n                    Inherited from         CityService\n\n                \n            \n            \n                \n                        Defined in         CityService:47\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para añadir una nueva localidad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto interés que incluye la información de la nueva localidad\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCity(city)\n                \n            \n\n\n            \n                \n                    Inherited from         CityService\n\n                \n            \n            \n                \n                        Defined in         CityService:56\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición DELETE para eliminar una localidad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto localidad que se quiere eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editCity(id, city)\n                \n            \n\n\n            \n                \n                    Inherited from         CityService\n\n                \n            \n            \n                \n                        Defined in         CityService:66\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición PUT para modificar la información de una localidad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador de la localidad\n\n                                    \n                                \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto localidad con la información actualizada. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCities()\n                \n            \n\n\n            \n                \n                    Inherited from         CityService\n\n                \n            \n            \n                \n                        Defined in         CityService:38\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de localidades.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listCities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        {\n            id: 1,\n            name: \"Gijón\"\n        },\n        {\n            id: 2,\n            name: \"Oviedo\"\n        },\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/city/city-service-mock.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cityURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/city'\n                        \n                    \n                            \n                                \n                                    Inherited from         CityService\n\n                                \n                            \n                        \n                            \n                                    Defined in         CityService:26\n\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { City } from \"src/app/models/city\";\nimport { CityService } from \"./city.service\";\n\n@Injectable()\nexport class MockCityService extends CityService {\n\n    listCities = [\n        {\n            id: 1,\n            name: \"Gijón\"\n        },\n        {\n            id: 2,\n            name: \"Oviedo\"\n        },\n    ];\n\n    getCities(): Observable {\n        return of(this.listCities);\n    }\n\n    addCity(city): Observable {\n        var cityToAdd = {\n            id: this.listCities[this.listCities.length - 1].id + 1,\n            name: city.name\n        }\n        this.listCities.push(cityToAdd);\n        return of({\n            mensaje: 'La ciudad ha sido añadida'\n        });\n    }\n\n    deleteCity(city): Observable {\n        this.listCities = this.listCities.filter(p => p.id !== city.id);\n        return of({\n            mensaje: 'La ciudad ha sido eliminada'\n        });\n    }\n\n    editCity(id, city): Observable {\n        const updateItem = this.listCities.find(ci => ci.id === id);\n        const index = this.listCities.indexOf(updateItem);\n\n        var cityToEdit = {\n            id: id,\n            name: city.name\n        }\n        this.listCities[index] = cityToEdit;\n\n        return of({\n            mensaje: 'La ciudad ha sido editada'\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockInterestService.html":{"url":"injectables/MockInterestService.html","title":"injectable - MockInterestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockInterestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/interest/interest-service-mock.ts\n        \n\n\n            \n                Extends\n            \n            \n                        InterestService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                interestList\n                            \n                            \n                                interestURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addInterests\n                            \n                            \n                                deleteInterest\n                            \n                            \n                                editInterest\n                            \n                            \n                                getInterests\n                            \n                            \n                                    Public\n                                addInterests\n                            \n                            \n                                    Public\n                                deleteInterest\n                            \n                            \n                                    Public\n                                editInterest\n                            \n                            \n                                    Public\n                                getInterestByUser\n                            \n                            \n                                    Public\n                                getInterests\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addInterests\n                        \n                        \n                    \n                \n            \n            \n                \naddInterests(interest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest-service-mock.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteInterest\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteInterest(interest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest-service-mock.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editInterest\n                        \n                        \n                    \n                \n            \n            \n                \neditInterest(id, interest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest-service-mock.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInterests\n                        \n                        \n                    \n                \n            \n            \n                \ngetInterests()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest-service-mock.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addInterests\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addInterests(interest)\n                \n            \n\n\n            \n                \n                    Inherited from         InterestService\n\n                \n            \n            \n                \n                        Defined in         InterestService:45\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para añadir un nuevo tipo de interés.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto interés que incluye la información del nuevo tipo de interés.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteInterest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteInterest(interest)\n                \n            \n\n\n            \n                \n                    Inherited from         InterestService\n\n                \n            \n            \n                \n                        Defined in         InterestService:54\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición DELETE para eliminar un tipo de interés.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto interés que se quiere eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editInterest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editInterest(id, interest)\n                \n            \n\n\n            \n                \n                    Inherited from         InterestService\n\n                \n            \n            \n                \n                        Defined in         InterestService:73\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición PUT para modificar la información de un tipo de interés.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del tipo de interés\n\n                                    \n                                \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto actividad con la información actualizada.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInterestByUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInterestByUser(id)\n                \n            \n\n\n            \n                \n                    Inherited from         InterestService\n\n                \n            \n            \n                \n                        Defined in         InterestService:63\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener las puntuaciones dadas por el usuario a un tipo de interés.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInterests\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInterests()\n                \n            \n\n\n            \n                \n                    Inherited from         InterestService\n\n                \n            \n            \n                \n                        Defined in         InterestService:36\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de los tipos de intereses.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interestList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 1,\n      nameInterest: 'Museos'\n    },\n    {\n      id: 2,\n      nameInterest: 'Iglesias'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/interest/interest-service-mock.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interestURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/interest'\n                        \n                    \n                            \n                                \n                                    Inherited from         InterestService\n\n                                \n                            \n                        \n                            \n                                    Defined in         InterestService:24\n\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {AuthService} from '../auth/auth.service';\nimport {UserSignUp} from '../../models/user';\nimport {Observable, of} from 'rxjs';\nimport {InterestService} from './interest.service';\nimport {Interest} from '../../models/interest';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class MockInterestService extends InterestService{\n\n  interestList = [\n    {\n      id: 1,\n      nameInterest: 'Museos'\n    },\n    {\n      id: 2,\n      nameInterest: 'Iglesias'\n    }\n  ]\n\n  getInterests(): Observable {\n    return of(this.interestList);\n  }\n\n  addInterests(interest): Observable {\n    var interestToAdd = {\n      id: this.interestList[this.interestList.length - 1].id + 1,\n      nameInterest: interest.nameInterest\n    }\n    this.interestList.push(interestToAdd);\n    return of({\n      mensaje: 'El interés ha sido añadido'\n    });\n  }\n\n  deleteInterest(interest): Observable {\n    this.interestList = this.interestList.filter(p => p.id !== interest.id);\n    return of({\n      mensaje: 'El interés ha sido eliminado'\n    });\n  }\n\n  editInterest(id, interest): Observable {\n    const updateItem = this.interestList.find(inter => inter.id === id);\n    const index = this.interestList.indexOf(updateItem);\n\n    var interestToEdit = {\n      id: id,\n      nameInterest: interest.nameInterest\n    }\n    this.interestList[index] = interestToEdit;\n\n    return of({\n      mensaje: 'El interés ha sido editado'\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockRolService.html":{"url":"injectables/MockRolService.html","title":"injectable - MockRolService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockRolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/rol/rol-service-mock.ts\n        \n\n\n            \n                Extends\n            \n            \n                        RolService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roles\n                            \n                            \n                                rolURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRoles\n                            \n                            \n                                    Public\n                                getRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRoles\n                        \n                        \n                    \n                \n            \n            \n                \ngetRoles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/rol/rol-service-mock.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoles()\n                \n            \n\n\n            \n                \n                    Inherited from         RolService\n\n                \n            \n            \n                \n                        Defined in         RolService:37\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de los tipos de roles.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 1,\n      rolName: 'ROLE_ADMIN'\n    },\n    {\n      id: 2,\n      rolName: 'ROLE_USER'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/rol/rol-service-mock.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/rol'\n                        \n                    \n                            \n                                \n                                    Inherited from         RolService\n\n                                \n                            \n                        \n                            \n                                    Defined in         RolService:25\n\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {RolService} from './rol.service';\nimport {Rol} from '../../models/rol';\nimport {Observable, of} from 'rxjs';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class MockRolService extends RolService{\n\n  roles = [\n    {\n      id: 1,\n      rolName: 'ROLE_ADMIN'\n    },\n    {\n      id: 2,\n      rolName: 'ROLE_USER'\n    }\n  ]\n\n  getRoles(): Observable {\n    return of(this.roles);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockUserService.html":{"url":"injectables/MockUserService.html","title":"injectable - MockUserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user/user-service-mock.ts\n        \n\n\n            \n                Extends\n            \n            \n                        UserService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listUsers\n                            \n                            \n                                user\n                            \n                            \n                                userURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserForAdmin\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Public\n                                deleteUser\n                            \n                            \n                                    Public\n                                editUser\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                getUserForAdmin\n                            \n                            \n                                    Public\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-service-mock.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \neditUser(id, user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-service-mock.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-service-mock.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserForAdmin\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserForAdmin(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-service-mock.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-service-mock.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id)\n                \n            \n\n\n            \n                \n                    Inherited from         UserService\n\n                \n            \n            \n                \n                        Defined in         UserService:74\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición DELETE para eliminar un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(id, user)\n                \n            \n\n\n            \n                \n                    Inherited from         UserService\n\n                \n            \n            \n                \n                        Defined in         UserService:65\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición PUT para modificar la información de un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto usuario con la información actualizada.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id)\n                \n            \n\n\n            \n                \n                    Inherited from         UserService\n\n                \n            \n            \n                \n                        Defined in         UserService:55\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserForAdmin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserForAdmin(id)\n                \n            \n\n\n            \n                \n                    Inherited from         UserService\n\n                \n            \n            \n                \n                        Defined in         UserService:46\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Inherited from         UserService\n\n                \n            \n            \n                \n                        Defined in         UserService:37\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de usuarios registrados en el sistema.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 1,\n      dateBirthday: new Date('1998-12-18T00:00:00.000+00:00'),\n      email: 'admin@email.com',\n      userName: 'Admin',\n      roles: ['ROLE_USER', 'ROLE_ADMIN'],\n    },\n    {\n      id: 2,\n      dateBirthday: new Date('1998-12-18T00:00:00.000+00:00'),\n      email: 'alba@email.com',\n      userName: 'Alba',\n      roles: ['ROLE_USER'],\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user/user-service-mock.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: 1,\n    dateBirthday: new Date('1998-12-18T00:00:00.000+00:00'),\n    email: 'alba@email.com',\n    userName: 'Admin',\n    roles: ['ROLE_USER', 'ROLE_ADMIN'],\n    interest:\n      [\n        {\n          interestID: 2,\n          nameInterest: 'Playas',\n          priority: 0\n        },\n        {\n          interestID: 155,\n          nameInterest: 'Prueba',\n          priority: 0\n        }\n      ]\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user/user-service-mock.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/user'\n                        \n                    \n                            \n                                \n                                    Inherited from         UserService\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserService:25\n\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {UserService} from './user.service';\nimport {Observable, of} from 'rxjs';\nimport {User} from '../../models/user';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class MockUserService extends UserService {\n\n  listUsers = [\n    {\n      id: 1,\n      dateBirthday: new Date('1998-12-18T00:00:00.000+00:00'),\n      email: 'admin@email.com',\n      userName: 'Admin',\n      roles: ['ROLE_USER', 'ROLE_ADMIN'],\n    },\n    {\n      id: 2,\n      dateBirthday: new Date('1998-12-18T00:00:00.000+00:00'),\n      email: 'alba@email.com',\n      userName: 'Alba',\n      roles: ['ROLE_USER'],\n    }\n  ];\n\n  user = {\n    id: 1,\n    dateBirthday: new Date('1998-12-18T00:00:00.000+00:00'),\n    email: 'alba@email.com',\n    userName: 'Admin',\n    roles: ['ROLE_USER', 'ROLE_ADMIN'],\n    interest:\n      [\n        {\n          interestID: 2,\n          nameInterest: 'Playas',\n          priority: 0\n        },\n        {\n          interestID: 155,\n          nameInterest: 'Prueba',\n          priority: 0\n        }\n      ]\n  }\n\n  getUsers(): Observable {\n    return of(this.listUsers);\n  }\n\n  deleteUser(id): Observable {\n    this.listUsers = this.listUsers.filter(us => us.id !== id);\n    return of({\n      mensaje: 'El usuario se ha eliminado'\n    });\n  }\n\n  getUser(id): Observable {\n    return of(this.user);\n  }\n\n  editUser(id, user): Observable {\n    this.user.dateBirthday = user.dateBirthday;\n    this.user.interest = user.interest;\n    this.user.roles = user.roles;\n    this.user.userName = user.userName;\n    return of({\n      mensaje: 'El usuario ha sido modificado'\n    });\n  }\n\n  getUserForAdmin(id): Observable {\n    return of(this.user);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/message/notification.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearService\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/message/notification.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearService\n                        \n                        \n                    \n                \n            \n            \n                \nclearService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message/notification.service.ts:36\n                \n            \n\n\n            \n                \n                    Método que vacía el array de notificaciones\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            success\n                        \n                        \n                    \n                \n            \n            \n                \nsuccess(detail: string, summary?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message/notification.service.ts:27\n                \n            \n\n\n            \n                \n                    Método para incluir una nueva notificación en el array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    detail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        detalle de la notificación\n\n                                    \n                                \n                                \n                                    summary\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        mensaje de la notificación\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Message[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/message/notification.service.ts:18\n                            \n                        \n\n                \n                    \n                        Array de objetos Message para almacenar las notificaciones\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Message} from 'primeng/api';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clase NotificationService\n * \n * Clase que se encarga de almacenar notificaciones que serán mostradas al usuario.\n */\nexport class NotificationService {\n\n  /**\n   * Array de objetos Message para almacenar las notificaciones\n   */\n  message: Message[] = [];\n\n  constructor() { }\n\n  /**\n   * Método para incluir una nueva notificación en el array\n   * @param detail detalle de la notificación\n   * @param summary mensaje de la notificación\n   */\n  success(detail: string, summary?: string): void {\n    this.message.push({\n      severity: 'success', summary: summary, detail: detail\n    });\n  }\n\n  /**\n   * Método que vacía el array de notificaciones\n   */\n  clearService(): void {\n    this.message = [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecommendationComponent.html":{"url":"components/RecommendationComponent.html","title":"component - RecommendationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecommendationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/recommendation/recommendation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recommendation\n            \n\n            \n                styleUrls\n                ./recommendation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recommendation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                            \n                                interestList\n                            \n                            \n                                numberRecommendations\n                            \n                            \n                                typeselected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(interestService: InterestService, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/recommendation/recommendation.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        interestService\n                                                  \n                                                        \n                                                                        InterestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recommendation/recommendation.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            info\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation/recommendation.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interestList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Interest[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation/recommendation.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberRecommendations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation/recommendation.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeselected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation/recommendation.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {InterestService} from '../services/interest/interest.service';\nimport {Interest} from '../models/interest';\nimport {LocalStorageService} from '../services/local-storage/local-storage.service';\n\n@Component({\n  selector: 'app-recommendation',\n  templateUrl: './recommendation.component.html',\n  styleUrls: ['./recommendation.component.scss']\n})\nexport class RecommendationComponent implements OnInit {\n\n  info: any = {};\n  numberRecommendations: number = 0;\n  typeselected: any[];\n  interestList: Interest[] = [];\n\n  constructor(private interestService: InterestService, private localStorageService: LocalStorageService) { }\n\n  ngOnInit() {\n    this.info = {\n      token: this.localStorageService.getToken(),\n      nombreUsuario: this.localStorageService.getEmailUser(),\n      authorities: this.localStorageService.getRolesUser()\n    };\n    this.interestService.getInterests().subscribe(\n      interestList => {\n        this.interestList = interestList;\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Tu nombre de usuario: {{ info.nombreUsuario}}\n      Este es el token: {{ info.token}}\n      Tus privilegios: {{ info.authorities}}\n    \n\n\n  \n  \n    \n      No has iniciado sesión\n    \n  -->\n\n  {{ 'create_recommendation' | translate }}\n  \n    \n      \n        {{ 'question_number_recommendation' | translate }}\n      \n      \n        \n      \n      \n        {{ 'question_type_activities_recommendation' | translate }}\n      \n      \n        \n          \n        \n      \n    \n  \n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./recommendation.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.recommendation-panel{\n  @include custom-panel;\n  width: 100%;\n  min-height: 380px;\n  min-width: 800px;\n\n  h1 {\n    text-align: center;\n  }\n\n  ::ng-deep .p-card, .button_create_recommendation {\n    width: 60%;\n    margin-left: auto;\n    margin-right: auto;\n  }\n}\n\n.question_recommendations_container{\n  display: flex;\n  flex-direction:column;\n\n  .question_container{\n    margin: 5px;\n  }\n}\n\n\n\n.button_create_recommendation {\n  text-align: right;\n  margin-top: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Tu nombre de usuario: {{ info.nombreUsuario}}      Este es el token: {{ info.token}}      Tus privilegios: {{ info.authorities}}                  No has iniciado sesión      -->  {{ \\'create_recommendation\\' | translate }}                    {{ \\'question_number_recommendation\\' | translate }}                                        {{ \\'question_type_activities_recommendation\\' | translate }}                                                          '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecommendationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecommendationMapComponent.html":{"url":"components/RecommendationMapComponent.html","title":"component - RecommendationMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecommendationMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/recommendation-map/recommendation-map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recommendation-map\n            \n\n            \n                styleUrls\n                ./recommendation-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recommendation-map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activitiesRecommendation\n                            \n                            \n                                activitiesSelected\n                            \n                            \n                                activitySelectedToRate\n                            \n                            \n                                displayPanelRating\n                            \n                            \n                                formToRatingActivity\n                            \n                            \n                                map\n                            \n                            \n                                markerList\n                            \n                            \n                                userLogged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeMap\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openPanelToRating\n                            \n                            \n                                photoURL\n                            \n                            \n                                removeMarkerFromMap\n                            \n                            \n                                sendRatingActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activitiesService: ActivityService, fb: FormBuilder, interestService: InterestService, cityService: CityService, sanitizer: DomSanitizer, filterService: FilterService, localStorageService: LocalStorageService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/recommendation-map/recommendation-map.component.ts:59\n                            \n                        \n\n                \n                    \n                            Constructor de la clase RecommendationMapComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activitiesService\n                                                  \n                                                        \n                                                                        ActivityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de actividades.\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Clase que permite crear objetos de la clase FormGroup y FormControl.\n\n                                                        \n                                                \n                                                \n                                                        interestService\n                                                  \n                                                        \n                                                                        InterestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de intereses.\n\n                                                        \n                                                \n                                                \n                                                        cityService\n                                                  \n                                                        \n                                                                        CityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de localidades.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n\n                                                        \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                    FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite acceder a la API para registrar filtros personalizados.\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de usuarios.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeMap\n                        \n                        \n                    \n                \n            \n            \n                \nchangeMap(event, activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/recommendation-map/recommendation-map.component.ts:162\n                \n            \n\n\n            \n                \n                    Método que modifica la aparición de los marcadores en el mapa según la selección del usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Evento que se produce cuando el usuario hace click en alguna casilla de verificación.\n\n                                    \n                                \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La actividad cuyo marcador se quiere mostrar o eliminar del mapa.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recommendation-map/recommendation-map.component.ts:101\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n  \n      Creará el mapa con los correspondientes marcadores.\n      Cargará las actividades recomendadas al usuario autenticado.\n  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openPanelToRating\n                        \n                        \n                    \n                \n            \n            \n                \nopenPanelToRating(activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/recommendation-map/recommendation-map.component.ts:194\n                \n            \n\n\n            \n                \n                    Método que abre un diálogo para que el usuario autenticado pueda valorar una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Actividad a valorar.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            photoURL\n                        \n                        \n                    \n                \n            \n            \n                \nphotoURL(activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/recommendation-map/recommendation-map.component.ts:252\n                \n            \n\n\n            \n                \n                    Método que sanea la URL de la imagen asociada a la actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Actividad cuya url de la imagen asociada se quiere sanear.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMarkerFromMap\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMarkerFromMap(activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/recommendation-map/recommendation-map.component.ts:233\n                \n            \n\n\n            \n                \n                    Método que elimina un marcador del mapa.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Actividad cuyo marcador asociado se quiere eliminar del mapa.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendRatingActivity\n                        \n                        \n                    \n                \n            \n            \n                \nsendRatingActivity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recommendation-map/recommendation-map.component.ts:206\n                \n            \n\n\n            \n                \n                    Método que envía una valoración de una actividad recomendada.\nUna vez enviado, también se encargará de cargar las nuevas recomendaciones y de modificar los marcadores del mapa.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activitiesRecommendation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActivityRecommended[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation-map/recommendation-map.component.ts:31\n                            \n                        \n\n                \n                    \n                        Almacena las actividades recomendadas.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activitiesSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation-map/recommendation-map.component.ts:35\n                            \n                        \n\n                \n                    \n                        Almacena la lista de actividades que se muestran en el mapa.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activitySelectedToRate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivityRecommended\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation-map/recommendation-map.component.ts:55\n                            \n                        \n\n                \n                    \n                        Almacena la actividad que el usuario quiere valorar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayPanelRating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation-map/recommendation-map.component.ts:47\n                            \n                        \n\n                \n                    \n                        Indica si el usuario ha seleccionado alguna actividad para valorar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formToRatingActivity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation-map/recommendation-map.component.ts:51\n                            \n                        \n\n                \n                    \n                        Formulario para valorar una actividad.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/recommendation-map/recommendation-map.component.ts:39\n                            \n                        \n\n                \n                    \n                        Mapa\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markerList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation-map/recommendation-map.component.ts:43\n                            \n                        \n\n                \n                    \n                        Array que almacena la lista de marcadores del mapa.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userLogged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation-map/recommendation-map.component.ts:59\n                            \n                        \n\n                \n                    \n                        Almacena el usuario autenticado\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ActivityService} from '../services/activity/activity.service';\nimport * as L from 'leaflet';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {InterestService} from '../services/interest/interest.service';\nimport {FilterService} from 'primeng/api';\nimport {CityService} from '../services/city/city.service';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {UserService} from '../services/user/user.service';\nimport {map, mergeMap} from 'rxjs/operators';\nimport {forkJoin} from 'rxjs';\nimport {LocalStorageService} from '../services/local-storage/local-storage.service';\nimport {ActivityRecommended} from '../models/activity';\nimport {User} from '../models/user';\n\n@Component({\n  selector: 'app-recommendation-map',\n  templateUrl: './recommendation-map.component.html',\n  styleUrls: ['./recommendation-map.component.scss']\n})\n/**\n * Clase RecommendationMapComponent\n *\n * Clase que obtiene las actividades recomendadas al usuario autenticado.\n */\nexport class RecommendationMapComponent implements OnInit {\n\n  /**\n   * Almacena las actividades recomendadas.\n   */\n  activitiesRecommendation: ActivityRecommended[];\n  /**\n   * Almacena la lista de actividades que se muestran en el mapa.\n   */\n  activitiesSelected: string[] = [];\n  /**\n   * Mapa\n   */\n  map;\n  /**\n   * Array que almacena la lista de marcadores del mapa.\n   */\n  markerList = [];\n  /**\n   * Indica si el usuario ha seleccionado alguna actividad para valorar.\n   */\n  displayPanelRating: boolean = false;\n  /**\n   * Formulario para valorar una actividad.\n   */\n  formToRatingActivity: FormGroup;\n  /**\n   * Almacena la actividad que el usuario quiere valorar.\n   */\n  activitySelectedToRate: ActivityRecommended;\n  /**\n   * Almacena el usuario autenticado\n   */\n  userLogged: User;\n\n  /**\n   * Constructor de la clase RecommendationMapComponent\n   * @param activitiesService\n   * Servicio de actividades.\n   * @param fb\n   * Clase que permite crear objetos de la clase FormGroup y FormControl.\n   * @param interestService\n   * Servicio de intereses.\n   * @param cityService\n   * Servicio de localidades.\n   * @param sanitizer\n   * Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n   * @param filterService\n   * Servicio propocionado por la librería PrimeNG que permite acceder a la API para registrar filtros personalizados.\n   * @param localStorageService\n   * Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n   * @param userService\n     Servicio de usuarios.\n   */\n  constructor(\n    private activitiesService: ActivityService,\n    private fb: FormBuilder,\n    private interestService: InterestService,\n    private cityService: CityService,\n    private sanitizer: DomSanitizer,\n    private filterService: FilterService,\n    private localStorageService: LocalStorageService,\n    private userService: UserService) {\n    this.formToRatingActivity = this.fb.group({\n      rating: ['', Validators.required],\n    });\n  }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   *  \n   *      Creará el mapa con los correspondientes marcadores.\n   *      Cargará las actividades recomendadas al usuario autenticado.\n   *  \n   */\n  ngOnInit(): void {\n\n    this.map = L.map('mapActivityRecommendation', {\n      center: [ 43.333333, -5.826187 ],\n      zoom: 8.75,\n      zoomSnap: 0.25\n    });\n\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 19,\n      attribution: '&copy; OpenStreetMap'\n    });\n\n    tiles.addTo(this.map);\n\n    this.userService.getUsers().pipe(\n      map (data => data.filter(p => p.email === this.localStorageService.getEmailUser())),\n      mergeMap ( user => {\n        this.userLogged = user[0];\n        return forkJoin([this.activitiesService.getRecommendedActivities(user[0].id)]).pipe();\n      })\n    ).subscribe(\n      ([response1]) => {\n        this.activitiesRecommendation = response1;\n\n        this.activitiesRecommendation.forEach(activity => {\n          this.activitiesSelected.push(activity.name);\n\n          var greenIcon = L.icon({\n            iconUrl: '../../assets/images/landscape.png',\n            iconSize: [35, 35], // size of the icon\n          });\n\n          var photoImg = '';\n\n          const popupContent =\n            photoImg +\n            '' +\n            '' +\n            activity.name  +\n            '' + ' ' + activity.address + '' + ' ' + activity.interest + ''  + '';\n\n          var marker = L.marker([activity.latitude, activity.longitude], {icon: greenIcon}).addTo(this.map).bindPopup(popupContent, {\n            maxWidth : 250\n          });\n          this.markerList.push(marker);\n        });\n\n        setTimeout(() => {\n          this.map.invalidateSize();\n        }, 300);\n    });\n  }\n\n  /**\n   * Método que modifica la aparición de los marcadores en el mapa según la selección del usuario.\n   * @param event\n   * Evento que se produce cuando el usuario hace click en alguna casilla de verificación.\n   * @param activity\n   * La actividad cuyo marcador se quiere mostrar o eliminar del mapa.\n   */\n  changeMap(event, activity){\n    if (event.checked){\n      var greenIcon = L.icon({\n        iconUrl: '../../assets/images/landscape.png',\n        iconSize: [35, 35], // size of the icon\n      });\n\n      var photoImg = '';\n\n      const popupContent =\n        photoImg +\n        '' +\n        '' +\n        activity.name  +\n        '' + ' ' + activity.address + '' + ' ' + activity.interest + ''  + '';\n\n\n      var marker = L.marker([activity.latitude, activity.longitude], {icon: greenIcon}).addTo(this.map).bindPopup(popupContent, {\n        maxWidth : 250\n      });\n      this.markerList.push(marker);\n    }\n    else{\n      this.removeMarkerFromMap(activity);\n    }\n  }\n\n  /**\n   * Método que abre un diálogo para que el usuario autenticado pueda valorar una actividad.\n   * @param activity\n   * Actividad a valorar.\n   */\n  openPanelToRating(activity){\n    this.formToRatingActivity.patchValue({\n      rating: []\n    });\n    this.activitySelectedToRate = activity;\n    this.displayPanelRating = true;\n  }\n\n  /**\n   * Método que envía una valoración de una actividad recomendada.\n   * Una vez enviado, también se encargará de cargar las nuevas recomendaciones y de modificar los marcadores del mapa.\n   */\n  sendRatingActivity(){\n    var rateActivity = {\n      activity_id : this.activitySelectedToRate.id,\n      email_user: this.localStorageService.getEmailUser(),\n      rate: this.formToRatingActivity.get('rating').value\n    }\n\n    this.activitiesService.postRateActivity(rateActivity).pipe(\n      mergeMap(\n        data => {\n          this.displayPanelRating = false;\n          this.removeMarkerFromMap(this.activitySelectedToRate);\n          return this.activitiesService.getRecommendedActivities(this.userLogged.id).pipe();\n        }\n      )\n    ).subscribe(\n      data => {\n        this.activitiesRecommendation = data;\n      }\n    );\n  }\n\n  /**\n   * Método que elimina un marcador del mapa.\n   * @param activity\n   * Actividad cuyo marcador asociado se quiere eliminar del mapa.\n   */\n  removeMarkerFromMap(activity){\n    var f = this.markerList.filter((act) => {\n      return act._latlng.lat === activity.latitude && act._latlng.lng === activity.longitude;\n    });\n    // NOTE: Puede haber un marcador con la misma longitude y latitude. Cuidado\n    if (f.length !== 0){\n      const index = this.markerList.indexOf(f[0]);\n      if (index > -1) {\n        this.markerList.splice(index, 1);\n      }\n      this.map.removeLayer(f[0]);\n    }\n  }\n\n  /**\n   * Método que sanea la URL de la imagen asociada a la actividad.\n   * @param activity\n   * Actividad cuya url de la imagen asociada se quiere sanear.\n   */\n  photoURL(activity){\n    var url = 'data:' + activity.metadataImage.mimeType + ';base64,' + activity.metadataImage.data;\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n            \n            \n          \n        \n      \n      \n        \n          \n            \n            \n            \n              {{activity.name}}\n              {{activity.description}}\n              \n                 {{activity.average}}/5\n              \n              \n            \n          \n        \n      \n    \n  \n  \n    \n  \n\n  \n    \n      {{ 'message_rate_activity' | translate }}\n      \n      {{ 'submessage_rate_activity' | translate }}\n    \n    \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./recommendation-map.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.recommendation-map-panel{\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n\n  display: flex;\n}\n\n.table_recommendation, .map_recommendation{\n  width: 50%;\n}\n\n.activity-recommendation-list-item{\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n  width: 100%;\n\n  .checkBoxActivityRecommendation{\n    margin: 5px;\n  }\n\n  img {\n    width: 150px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n    margin-right: 2rem;\n  }\n\n  .activity-recommendation-list-detail {\n    flex: 1 1 0;\n  }\n\n  .activity-name {\n    font-size: 1.5rem;\n    font-weight: 700;\n  }\n\n  .activity-description {\n    margin: 0 0 1rem 0;\n  }\n\n  .activity-average{\n    .fa-star{\n      color: rgb(255, 56, 92);\n    }\n\n    .average{\n      font-weight: 600;\n    }\n  }\n}\n\n#mapActivityRecommendation{\n  width: 100%;\n  height: 100%;\n}\n\n.rateActivity{\n  text-align: center;\n}\n\n.messageRateActivity{\n  font-weight: 700;\n}\n\n:host ::ng-deep .p-multiselect {\n  min-width: 12rem;\n}\n\n.filter_container{\n  display: flex;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                        {{activity.name}}              {{activity.description}}                               {{activity.average}}/5                                                                                          {{ \\'message_rate_activity\\' | translate }}            {{ \\'submessage_rate_activity\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecommendationMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rol.html":{"url":"classes/Rol.html","title":"class - Rol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/rol.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                rolName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/rol.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/rol.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Rol {\n  id: number;\n  rolName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolService.html":{"url":"injectables/RolService.html","title":"injectable - RolService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/rol/rol.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rolURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/rol/rol.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor de la clase RolService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                objeto que permite hacer peticiones a la API y obtener resultados de la misma\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/rol/rol.service.ts:37\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de los tipos de roles.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/rol'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/rol/rol.service.ts:25\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Interest} from '../../models/interest';\nimport {Rol} from '../../models/rol';\n\n/**\n * Encabezado para las peticiones y respuestas HTTP\n */\nconst cabecera = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clase RolService\n * \n * Clase que se encarga de realizar peticiones a la API relacionadas con los tipos de roles.\n */\nexport class RolService {\n\n  /**\n   * Almacena la url del endpoint\n   */\n  rolURL = 'http://localhost:8090/api/rol';\n\n  /**\n   * Constructor de la clase RolService\n   * @param httpClient objeto que permite hacer peticiones a la API y obtener resultados de la misma\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Método que realiza una petición GET para obtener la lista de los tipos de roles.\n   * @returns \n   */\n  public getRoles(): Observable {\n    return this.httpClient.get(this.rolURL + '/list', cabecera);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuardService.html":{"url":"guards/RoleGuardService.html","title":"guard - RoleGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/RoleGuard/role-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorageService: LocalStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/RoleGuard/role-guard.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/RoleGuard/role-guard.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {LocalStorageService} from '../../services/local-storage/local-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuardService implements CanActivate{\n\n  rol: string;\n\n  constructor(private localStorageService: LocalStorageService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const expectedRol = route.data.expectedRol;\n    const roles = this.localStorageService.getRolesUser();\n    if (roles.includes(\"ROLE_ADMIN\")){\n      this.rol = 'admin';\n    }\n    else{\n      this.rol = 'user';\n    }\n    if (!this.localStorageService.getToken() || expectedRol.indexOf(this.rol) === -1 ){\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpComponent.html":{"url":"components/SignUpComponent.html","title":"component - SignUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sign-up/sign-up.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up\n            \n\n            \n                styleUrls\n                ./sign-up.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sign-up.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                interestArray\n                            \n                            \n                                isContinueFail\n                            \n                            \n                                isRegisterFail\n                            \n                            \n                                message\n                            \n                            \n                                openSecondForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                continueSecondPartForm\n                            \n                            \n                                loadInterest\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                returnFirstPartForm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    interest\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, interestService: InterestService, authService: AuthService, router: Router, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sign-up/sign-up.component.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor de la clase EditActivitiesComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Clase que permite crear objetos de la clase FormGroup y FormControl.\n\n                                                        \n                                                \n                                                \n                                                        interestService\n                                                  \n                                                        \n                                                                        InterestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de intereses.\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite la navegación entre vistas\n\n                                                        \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite almacenar notificaciones.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            continueSecondPartForm\n                        \n                        \n                    \n                \n            \n            \n                \ncontinueSecondPartForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/sign-up/sign-up.component.ts:157\n                \n            \n\n\n            \n                \n                    Método que muestra al usuario el segundo bloque del formulario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadInterest\n                        \n                        \n                    \n                \n            \n            \n                \nloadInterest()\n                \n            \n\n\n            \n                \n                    Defined in src/app/sign-up/sign-up.component.ts:109\n                \n            \n\n\n            \n                \n                    Método que obtiene los intereses de la API y los almacena.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/sign-up/sign-up.component.ts:81\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n\n      Inicializará el formulario\n      Cargará los dintintos intereses.\n  \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/sign-up/sign-up.component.ts:129\n                \n            \n\n\n            \n                \n                    Método que crea un objeto user a partir de los datos del formulario y se lo envía a la API.\nUna vez enviado, también será el encargado de redirigir al usuario al componente Login y de mostrar un mensaje al usuario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            returnFirstPartForm\n                        \n                        \n                    \n                \n            \n            \n                \nreturnFirstPartForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/sign-up/sign-up.component.ts:171\n                \n            \n\n\n            \n                \n                    Método que permite al usuario regresar al primer bloque del formulario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.component.ts:29\n                            \n                        \n\n                \n                    \n                        Formulario para registrar a un usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interestArray\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.component.ts:33\n                            \n                        \n\n                \n                    \n                        Array de objetos Interest para almacenar los distintos intereses.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isContinueFail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.component.ts:45\n                            \n                        \n\n                \n                    \n                        Indica que en la primera parte del formulario hay algún error e impide visualizar el segundo bloque.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRegisterFail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.component.ts:37\n                            \n                        \n\n                \n                    \n                        Indica si el registro falló.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.component.ts:49\n                            \n                        \n\n                \n                    \n                        Almacena el mensaje de error devuelto por la API.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSecondForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.component.ts:41\n                            \n                        \n\n                \n                    \n                        Indica que la primera parte del formulario es correcta y visualiza el segundo bloque.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        interest\n                    \n                \n\n                \n                    \n                        getinterest()\n                    \n                \n                            \n                                \n                                    Defined in src/app/sign-up/sign-up.component.ts:102\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {InterestService} from '../services/interest/interest.service';\nimport {AuthService} from '../services/auth/auth.service';\nimport {validadorPasswordSame} from '../validators/validatorPasswordSame.directive';\nimport {validadorAgeGreaterThan} from '../validators/validatorGreaterThan.directive';\nimport {Router} from '@angular/router';\nimport {NotificationService} from '../services/message/notification.service';\nimport {validadorPriorityNumberOfInterest} from '../validators/validatorPriorityNumber.directive';\n\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\n/**\n * Clase SignUpComponent\n *\n * Clase que permite el registro de un usuario.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class SignUpComponent implements OnInit {\n  /**\n   * Formulario para registrar a un usuario.\n   */\n  formGroup: FormGroup;\n  /**\n   * Array de objetos Interest para almacenar los distintos intereses.\n   */\n  interestArray;\n  /**\n   * Indica si el registro falló.\n   */\n  isRegisterFail = false;\n  /**\n   * Indica que la primera parte del formulario es correcta y visualiza el segundo bloque.\n   */\n  openSecondForm = false;\n  /**\n   * Indica que en la primera parte del formulario hay algún error e impide visualizar el segundo bloque.\n   */\n  isContinueFail = false;\n  /**\n   * Almacena el mensaje de error devuelto por la API.\n   */\n  message;\n\n  /**\n   * Constructor de la clase EditActivitiesComponent\n   *\n   * @param formBuilder\n   * Clase que permite crear objetos de la clase FormGroup y FormControl.\n   * @param interestService\n   * Servicio de intereses.\n   * @param authService\n   * Servicio de autenticación.\n   * @param router\n   * Servicio que permite la navegación entre vistas\n   * @param notificationService\n   * Servicio que permite almacenar notificaciones.\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private interestService: InterestService,\n    private authService: AuthService,\n    private router: Router,\n    private notificationService: NotificationService\n  ) {\n  }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   * \n   *      Inicializará el formulario\n   *      Cargará los dintintos intereses.\n   *  \n   */\n  ngOnInit(): void {\n    const minPassLength = 7;\n    this.formGroup = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      dateBirthday: ['', [Validators.required, validadorAgeGreaterThan()]],\n      password: ['', [Validators.required, Validators.minLength(minPassLength)]],\n      repeatPassword: ['', [Validators.required, Validators.minLength(minPassLength)]],\n      interest: new FormArray([])\n    },\n      {\n        validators: validadorPasswordSame()\n      });\n    this.loadInterest();\n\n    // Podría sobrar si actualizo a Angular 11 (no sé si lo necesito)\n    this.formGroup.valueChanges.subscribe(e => {\n      this.formGroup.setValue(e, {emitEvent: false});\n    });\n  }\n\n  get interest(): FormArray {\n    return this.formGroup.get('interest') as FormArray;\n  }\n\n  /**\n   * Método que obtiene los intereses de la API y los almacena.\n   */\n  loadInterest() {\n    this.interestService.getInterests().subscribe(data => {\n        this.interestArray = data;\n        this.interestArray.forEach(interest => {\n          const control = new FormGroup({\n            nameInterest: new FormControl(interest.nameInterest, Validators.required),\n            priority: new FormControl(0, [Validators.required, validadorPriorityNumberOfInterest()])\n          });\n          this.interest.push(control);\n        });\n      },\n      err => {\n        console.log(err);\n      });\n  }\n\n  /**\n   * Método que crea un objeto user a partir de los datos del formulario y se lo envía a la API.\n   * Una vez enviado, también será el encargado de redirigir al usuario al componente Login y de mostrar un mensaje al usuario.\n   */\n  onSubmit() {\n    var dateBirthday = new Date(this.formGroup.get('dateBirthday').value);\n    const offset = dateBirthday.getTimezoneOffset()\n    dateBirthday = new Date(dateBirthday.getTime() - (offset * 60 * 1000))\n    const user = {\n      userName: this.formGroup.get('name').value,\n      email: this.formGroup.get('email').value,\n      dateBirthday: dateBirthday.toISOString().split('T')[0],\n      password: this.formGroup.get('password').value,\n      passwordConfirm: this.formGroup.get('repeatPassword').value,\n      roles: ['user'],\n      interest: this.interest.value\n    };\n    this.authService.signUp(user).subscribe(\n      data => {\n        this.isRegisterFail = false;\n        this.notificationService.success(\"sign_up_successful_message_detail\", \"sign_up_successful_message_summary\");\n        this.router.navigate(['login']);\n      },\n      (err) => {\n        this.isRegisterFail = true;\n        this.message = err.error.mensaje;\n      });\n  }\n\n  /**\n   * Método que muestra al usuario el segundo bloque del formulario.\n   */\n  continueSecondPartForm(){\n    if (this.formGroup.get('name').valid && this.formGroup.get('email').valid && this.formGroup.get('dateBirthday').valid &&\n      this.formGroup.get('password').valid && this.formGroup.get('repeatPassword').valid){\n      this.openSecondForm = true;\n      this.isContinueFail = false;\n    }\n    else{\n      this.isContinueFail = true;\n    }\n  }\n\n  /**\n   * Método que permite al usuario regresar al primer bloque del formulario.\n   */\n  returnFirstPartForm(){\n    this.openSecondForm = false;\n  }\n}\n\n    \n\n    \n        \n\n  {{ 'sign_up' | translate }}\n  \n    \n      \n        \n          {{ 'username' | translate }}*:\n          \n            \n            \n          \n          \n            \n          \n        \n        \n          {{ 'date_birth' | translate }}*:\n          \n            \n            \n          \n          \n            \n            \n          \n\n        \n        \n          Email*:\n          \n            \n            \n          \n          \n            \n          \n        \n        \n          {{ 'password' | translate }}*:\n          \n            \n            \n           \n          \n            \n          \n        \n\n        \n          {{ 'repeat_password' | translate }}*:\n          \n            \n            \n          \n          \n            \n          \n        \n\n        \n          \n          \n        \n      \n    \n\n    \n      \n        {{ 'message_valuation_one' | translate }}\n        {{ 'message_valuation_two' | translate }}\n      \n      \n        \n          \n            {{interestArray[i].nameInterest}}\n            \n              \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                -->\n                \n                \n                  0\n                \n\n                \n                \n                  1\n                \n\n                \n                \n                  2\n                \n\n                \n                \n                  3\n                \n\n                \n                \n                  4\n                \n\n                \n                \n                  5\n                \n\n                \n                \n                  6\n                \n\n                \n                \n                  7\n                \n\n                \n                \n                  8\n                \n\n                \n                \n                  9\n                \n\n                \n                \n                  10\n                \n              \n            \n          \n        \n        \n        \n          \n          \n        \n      \n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./sign-up.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.signup-panel{\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n\n  h1{\n    text-align:center;\n  }\n}\n\n.button_signup{\n  float: right;\n}\n\n.sign_up_btns{\n\n}\n\n.button_return, .button_signup{\n  width: auto;\n}\n\n.form-signup-container{\n  width: 60%;\n}\n\n.form-signup-container, .form-signup-second-container{\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.form-signup-second-container{\n  width: 70%;\n\n  .form-check-label{\n    margin: 10px;\n  }\n}\n\n.message_error_sign_container{\n  padding-top: 5px;\n}\n\n.input-birth{\n  width: 100%;\n}\n\n.message_valuation_container{\n  text-align: center;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'sign_up\\' | translate }}                              {{ \\'username\\' | translate }}*:                                                                                                      {{ \\'date_birth\\' | translate }}*:                                                                                                                  Email*:                                                                                                      {{ \\'password\\' | translate }}*:                                                                                                       {{ \\'repeat_password\\' | translate }}*:                                                                                                                                                    {{ \\'message_valuation_one\\' | translate }}        {{ \\'message_valuation_two\\' | translate }}                                          {{interestArray[i].nameInterest}}n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableActivitiesComponent.html":{"url":"components/TableActivitiesComponent.html","title":"component - TableActivitiesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableActivitiesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/table-activities/table-activities.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table-activities\n            \n\n            \n                styleUrls\n                ./table-activities.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table-activities.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activities\n                            \n                            \n                                cols\n                            \n                            \n                                ref\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirm\n                            \n                            \n                                editActivity\n                            \n                            \n                                loadActivities\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openNew\n                            \n                            \n                                photoURL\n                            \n                            \n                                seeMoreInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activityService: ActivityService, confirmationService: ConfirmationService, dialogService: DialogService, translateService: TranslateService, messageService: MessageService, router: Router, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/table-activities/table-activities.component.ts:37\n                            \n                        \n\n                \n                    \n                            Constructor de la clase EditActivitiesComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activityService\n                                                  \n                                                        \n                                                                        ActivityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de actividades.\n\n                                                        \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite mostrar un diálogo de confirmación.\n\n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite mostrar un diálogo.\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite la navegación entre vistas\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirm\n                        \n                        \n                    \n                \n            \n            \n                \nconfirm(activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/table-activities/table-activities.component.ts:103\n                \n            \n\n\n            \n                \n                    Método que elimina una actividad del sistema a través de la API.\nUna vez enviado, también será el encargado de mostrar un mensaje al usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Actividad que se desea eliminar.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editActivity\n                        \n                        \n                    \n                \n            \n            \n                \neditActivity(activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/table-activities/table-activities.component.ts:167\n                \n            \n\n\n            \n                \n                    Método que redirige al usuario al componente EditActivities.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadActivities\n                        \n                        \n                    \n                \n            \n            \n                \nloadActivities()\n                \n            \n\n\n            \n                \n                    Defined in src/app/table-activities/table-activities.component.ts:87\n                \n            \n\n\n            \n                \n                    Método que obtiene las actividades de la API y las almacena.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/table-activities/table-activities.component.ts:158\n                \n            \n\n\n            \n                \n                    Método que se ejecuta al destruir un componente.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/table-activities/table-activities.component.ts:74\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n  \n      Inicializará los objetos que representan una columna de la tabla.\n      Cargará las actividades.\n  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openNew\n                        \n                        \n                    \n                \n            \n            \n                \nopenNew()\n                \n            \n\n\n            \n                \n                    Defined in src/app/table-activities/table-activities.component.ts:131\n                \n            \n\n\n            \n                \n                    Método que redirige al usuario al componente AddActivity.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            photoURL\n                        \n                        \n                    \n                \n            \n            \n                \nphotoURL(activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/table-activities/table-activities.component.ts:176\n                \n            \n\n\n            \n                \n                    Método que sanea la URL de la imagen asociada a la actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Actividad cuya url de la imagen asociada se quiere sanear.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            seeMoreInfo\n                        \n                        \n                    \n                \n            \n            \n                \nseeMoreInfo(activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/table-activities/table-activities.component.ts:140\n                \n            \n\n\n            \n                \n                    Método que abre el componente InformationActivities para mostrar información adicional de la actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Actividad de la que se quiere obtener información adicional.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activities\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/table-activities/table-activities.component.ts:33\n                            \n                        \n\n                \n                    \n                        Almacena las actividades.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cols\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/table-activities/table-activities.component.ts:29\n                            \n                        \n\n                \n                    \n                        Array de objetos que representan las columnas del componente tabla.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ref\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DynamicDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/table-activities/table-activities.component.ts:37\n                            \n                        \n\n                \n                    \n                        Servicio propocionado por la librería PrimeNG que permite pasar información a los componentes dinámicos.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ActivityService} from '../services/activity/activity.service';\nimport {ConfirmationService, MessageService} from 'primeng/api';\nimport {DialogService, DynamicDialogRef} from 'primeng/dynamicdialog';\nimport {InformationActivitiesComponent} from '../information-activities/information-activities.component';\nimport {TranslateService} from '@ngx-translate/core';\nimport {map, mergeMap} from 'rxjs/operators';\nimport {Router} from '@angular/router';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-table-activities',\n  templateUrl: './table-activities.component.html',\n  styleUrls: ['./table-activities.component.scss']\n})\n/**\n * Clase TableActivitiesComponent\n *\n * Clase que muestra la lista de actividades del sistema.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class TableActivitiesComponent implements OnInit {\n\n  /**\n   * Array de objetos que representan las columnas del componente tabla.\n   */\n  cols: any[];\n  /**\n   * Almacena las actividades.\n   */\n  activities;\n  /**\n   * Servicio propocionado por la librería PrimeNG que permite pasar información a los componentes dinámicos.\n   */\n  ref: DynamicDialogRef;\n\n  /**\n   * Constructor de la clase EditActivitiesComponent\n   *\n   * @param activityService\n   * Servicio de actividades.\n   * @param confirmationService\n   * Servicio propocionado por la librería PrimeNG que permite mostrar un diálogo de confirmación.\n   * @param dialogService\n   * Servicio propocionado por la librería PrimeNG que permite mostrar un diálogo.\n   * @param translateService\n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   * @param messageService\n   * Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n   * @param router\n   * Servicio que permite la navegación entre vistas\n   * @param sanitizer\n   * Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n   */\n  constructor(\n    private activityService: ActivityService,\n    private confirmationService: ConfirmationService,\n    private dialogService: DialogService,\n    private translateService: TranslateService,\n    private messageService: MessageService,\n    private router: Router,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   *  \n   *      Inicializará los objetos que representan una columna de la tabla.\n   *      Cargará las actividades.\n   *  \n   */\n  ngOnInit(): void {\n    this.cols = [\n      { field: 'name', header: 'name_activity' },\n      { field: 'description', header: 'description_activity' },\n      { field: 'city', header: 'city' },\n      { field: 'interest', header: 'interest'}\n    ];\n    this.loadActivities();\n  }\n\n  /**\n   * Método que obtiene las actividades de la API y las almacena.\n   */\n  loadActivities(){\n    this.activityService.getActivities().subscribe(\n      data => {\n        this.activities = data;\n      },\n      (err) => {\n        console.log(err);\n      });\n  }\n\n  /**\n   * Método que elimina una actividad del sistema a través de la API.\n   * Una vez enviado, también será el encargado de mostrar un mensaje al usuario.\n   * @param activity\n   * Actividad que se desea eliminar.\n   */\n  confirm(activity){\n    this.confirmationService.confirm({\n      message: this.translateService.instant('message_delete_activity'),\n      accept: () => {\n        this.activityService.deleteActivity(activity.id).pipe(\n          mergeMap( message => {\n            return this.activityService.getActivities().pipe(\n              map(data => {\n                this.activities = data;\n              })\n            );\n          })\n        ).subscribe( data => {\n            var message = this.translateService.instant('activity_delete_message',{ 'nameActivity': activity.name });\n            this.messageService.add({key: 'activity', severity:'success', summary: this.translateService.instant('interest_delete'), detail: message });\n          },\n          (err) => {\n            var message = this.translateService.instant('error_delete_message');\n            this.messageService.add({key: 'activity', severity:'error', summary: this.translateService.instant('error'), detail: message });\n          }\n        );\n      }\n    });\n  }\n\n  /**\n   * Método que redirige al usuario al componente AddActivity.\n   */\n  openNew(){\n    this.router.navigate(['activities/add']);\n  }\n\n  /**\n   * Método que abre el componente InformationActivities para mostrar información adicional de la actividad.\n   * @param activity\n   * Actividad de la que se quiere obtener información adicional.\n   */\n  seeMoreInfo(activity){\n    this.ref = this.dialogService.open(InformationActivitiesComponent,\n      {\n        data: {\n          'activity' : activity,\n        },\n        header: this.translateService.instant('info_dialog_title') + activity.name,\n        width: '70%'\n      });\n\n    this.ref.onClose.subscribe((activity) => {\n      console.log(\"Aqui\");\n    });\n  }\n\n  /**\n   * Método que se ejecuta al destruir un componente.\n   */\n  ngOnDestroy() {\n    if (this.ref){\n      this.ref.close();\n    }\n  }\n\n  /**\n   * Método que redirige al usuario al componente EditActivities.\n   */\n  editActivity(activity){\n    this.router.navigateByUrl('activities/edit/' + activity.id);\n  }\n\n  /**\n   * Método que sanea la URL de la imagen asociada a la actividad.\n   * @param activity\n   * Actividad cuya url de la imagen asociada se quiere sanear.\n   */\n  photoURL(activity){\n    var url = 'data:' + activity.metadataImage.mimeType + ';base64,' + activity.metadataImage.data;\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n  \n    \n      \n      \n        \n      \n    \n\n    \n      \n        \n          {{ 'list_activities' | translate }}\n          \n                    \n                    \n          \n        \n      \n      \n        \n          \n            {{ 'image' | translate }}\n          \n          \n            {{ col.header | translate }}\n            \n          \n          \n          \n        \n      \n      \n        \n          \n          {{activity.name}}\n          {{activity.description}}\n          {{activity.city}}\n          {{activity.interest}}\n          \n            \n            \n            \n          \n        \n      \n      \n        {{ 'message-no-activities-match' | translate }}\n      \n    \n  \n\n  \n\n\n\n    \n\n    \n                \n                    ./table-activities.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.imgview-panel {\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n}\n\n.card{\n  display: inline-flex;\n  height: 100%;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n\n.table-activities{\n\n  .td-text-wrap{\n    word-wrap:break-word;\n  }\n}\n\n.toolbar-activities, .table-activities{\n  padding: 15px;\n}\n\n#image-activity-table{\n  width: 100%;\n  height: 100px;\n  width: auto\\9; /* ie8 */\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                {{ \\'list_activities\\' | translate }}                                                                                                              {{ \\'image\\' | translate }}                                {{ col.header | translate }}                                                                                          {{activity.name}}          {{activity.description}}          {{activity.city}}          {{activity.interest}}                                                                                    {{ \\'message-no-activities-match\\' | translate }}              '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableActivitiesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateBirthday\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                roles\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateBirthday\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: number;\n  userName: string;\n  email: string;\n  dateBirthday: Date;\n  roles: string[];\n}\n\nexport class UserLogin {\n  email: string;\n  password: string;\n}\n\nexport class UserSignUp {\n  userName: string;\n  email: string;\n  dateBirthday: string;\n  password: string;\n  passwordConfirm: string;\n  roles: string[];\n  interest: Interest[];\n}\n\nexport class Interest {\n  nameInterest: string;\n  priority: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLogin.html":{"url":"classes/UserLogin.html","title":"class - UserLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: number;\n  userName: string;\n  email: string;\n  dateBirthday: Date;\n  roles: string[];\n}\n\nexport class UserLogin {\n  email: string;\n  password: string;\n}\n\nexport class UserSignUp {\n  userName: string;\n  email: string;\n  dateBirthday: string;\n  password: string;\n  passwordConfirm: string;\n  roles: string[];\n  interest: Interest[];\n}\n\nexport class Interest {\n  nameInterest: string;\n  priority: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteUser\n                            \n                            \n                                    Public\n                                editUser\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                getUserForAdmin\n                            \n                            \n                                    Public\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user/user.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor de la clase UserService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                objeto que permite hacer peticiones a la API y obtener resultados de la misma\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user.service.ts:74\n                \n            \n\n\n            \n                \n                    Método que realiza una petición DELETE para eliminar un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(id, user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user.service.ts:65\n                \n            \n\n\n            \n                \n                    Método que realiza una petición PUT para modificar la información de un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto usuario con la información actualizada.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user.service.ts:55\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserForAdmin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserForAdmin(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user.service.ts:46\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user.service.ts:37\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de usuarios registrados en el sistema.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/user'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user/user.service.ts:25\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, Subject} from 'rxjs';\nimport {Interest} from '../../models/interest';\nimport {User} from '../../models/user';\n\n/**\n * Encabezado para las peticiones y respuestas HTTP\n */\nconst cabecera = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clase UserService\n * \n * Clase que se encarga de realizar peticiones a la API relacionadas con los usuarios.\n */\nexport class UserService {\n\n  /**\n   * Almacena la url del endpoint\n   */\n  userURL = 'http://localhost:8090/api/user';\n\n  /**\n   * Constructor de la clase UserService\n   * @param httpClient objeto que permite hacer peticiones a la API y obtener resultados de la misma\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Método que realiza una petición GET para obtener la lista de usuarios registrados en el sistema.\n   * @returns el observable con la información enviada por la API\n   */\n  public getUsers(): Observable {\n    return this.httpClient.get(this.userURL + '/list', cabecera);\n  }\n\n  /**\n   * Método que realiza una petición GET para obtener un usuario.\n   * @param id identificador del usuario\n   * @returns el observable con la información enviada por la API\n   */\n  public getUserForAdmin(id): Observable {\n    return this.httpClient.get(this.userURL + '/details/' + id, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición GET para obtener un usuario.\n   * @param id identificador del usuario\n   * @returns el observable con la información enviada por la API\n   */\n  public getUser(id): Observable {\n    return this.httpClient.get(this.userURL + '/details/' + id, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición PUT para modificar la información de un usuario.\n   * @param id identificador del usuario\n   * @param user objeto usuario con la información actualizada.\n   * @returns el observable con la información enviada por la API\n   */\n  public editUser(id, user): Observable {\n    return this.httpClient.put(this.userURL + '/update/' + id, user, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición DELETE para eliminar un usuario.\n   * @param id identificador del usuario\n   * @returns el observable con la información enviada por la API\n   */\n  public deleteUser(id): Observable {\n    return this.httpClient.delete(this.userURL + '/delete/' + id, cabecera);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSignUp.html":{"url":"classes/UserSignUp.html","title":"class - UserSignUp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSignUp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateBirthday\n                            \n                            \n                                email\n                            \n                            \n                                interest\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirm\n                            \n                            \n                                roles\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateBirthday\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Interest[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: number;\n  userName: string;\n  email: string;\n  dateBirthday: Date;\n  roles: string[];\n}\n\nexport class UserLogin {\n  email: string;\n  password: string;\n}\n\nexport class UserSignUp {\n  userName: string;\n  email: string;\n  dateBirthday: string;\n  password: string;\n  passwordConfirm: string;\n  roles: string[];\n  interest: Interest[];\n}\n\nexport class Interest {\n  nameInterest: string;\n  priority: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/add-activity/add-activity.component.ts\n            \n            component\n            AddActivityComponent\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            httpTranslateLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/edit-activities/edit-activities.component.ts\n            \n            component\n            EditActivitiesComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/edit-user-admin/edit-user-admin.component.ts\n            \n            component\n            EditUserAdminComponent\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/edit-user/edit-user.component.ts\n            \n            component\n            EditUserComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/guards/RoleGuard/role-guard.service.ts\n            \n            guard\n            RoleGuardService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/guards/auth-guard/auth-guard.service.ts\n            \n            guard\n            AuthGuardService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/guards/isLogginInGuard/is-loggin-in-guard.service.ts\n            \n            guard\n            IsLogginInGuardService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information-activities/information-activities.component.ts\n            \n            component\n            InformationActivitiesComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/interceptors/interceptor.service.ts\n            \n            interceptor\n            InterceptorService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interceptors/interceptor.service.ts\n            \n            variable\n            interceptorProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/list-activities-evaluate/list-activities-evaluate.component.ts\n            \n            component\n            ListActivitiesEvaluateComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/list-cities/list-cities.component.ts\n            \n            component\n            ListCitiesComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/list-interest/list-interest.component.ts\n            \n            component\n            ListInterestComponent\n            \n                55 %\n                (11/20)\n            \n        \n        \n            \n                \n                src/app/list-user/list-user.component.ts\n            \n            component\n            ListUserComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/map/map.component.ts\n            \n            component\n            MapComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/menu-bar/menu-bar.component.ts\n            \n            component\n            MenuBarComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/models/activity.ts\n            \n            class\n            Activity\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/activity.ts\n            \n            class\n            ActivityRecommended\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/models/city.ts\n            \n            class\n            City\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/interest.ts\n            \n            class\n            Interest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/interest.ts\n            \n            class\n            InterestByUser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/jwt_model.ts\n            \n            class\n            JwtModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/rol.ts\n            \n            class\n            Rol\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            Interest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            UserLogin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            UserSignUp\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/recommendation-map/recommendation-map.component.ts\n            \n            component\n            RecommendationMapComponent\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/recommendation/recommendation.component.ts\n            \n            component\n            RecommendationComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/activity/activity-service-mock.ts\n            \n            injectable\n            MockActivityService\n            \n                42 %\n                (9/21)\n            \n        \n        \n            \n                \n                src/app/services/activity/activity.service.ts\n            \n            injectable\n            ActivityService\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/services/activity/activity.service.ts\n            \n            variable\n            cabecera\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth-service-mock.ts\n            \n            injectable\n            MockAuthService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            cabecera\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/city/city-service-mock.ts\n            \n            injectable\n            MockCityService\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/services/city/city.service.ts\n            \n            injectable\n            CityService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/city/city.service.ts\n            \n            variable\n            cabecera\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/images/images.service.ts\n            \n            injectable\n            ImagesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/images/images.service.ts\n            \n            variable\n            cabecera\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/interest/interest-service-mock.ts\n            \n            injectable\n            MockInterestService\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/services/interest/interest.service.ts\n            \n            injectable\n            InterestService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/services/interest/interest.service.ts\n            \n            variable\n            cabecera\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/local-storage/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/services/local-storage/local-storage.service.ts\n            \n            variable\n            TOKEN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/message/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/services/rol/rol-service-mock.ts\n            \n            injectable\n            MockRolService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/services/rol/rol.service.ts\n            \n            injectable\n            RolService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/services/rol/rol.service.ts\n            \n            variable\n            cabecera\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/user/user-service-mock.ts\n            \n            injectable\n            MockUserService\n            \n                42 %\n                (6/14)\n            \n        \n        \n            \n                \n                src/app/services/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/services/user/user.service.ts\n            \n            variable\n            cabecera\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/sign-up/sign-up.component.ts\n            \n            component\n            SignUpComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/table-activities/table-activities.component.ts\n            \n            component\n            TableActivitiesComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/validators/validatorGreaterThan.directive.ts\n            \n            function\n            validadorAgeGreaterThan\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/validators/validatorNonWhiteSpace.directive.ts\n            \n            function\n            validadorNonwhiteSpace\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/validators/validatorPasswordSame.directive.ts\n            \n            function\n            validadorPasswordSame\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/validators/validatorPriorityNumber.directive.ts\n            \n            function\n            validadorPriorityNumberOfInterest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.2.0\n        \n            @angular/cdk : ^11.2.0\n        \n            @angular/common : ~11.2.0\n        \n            @angular/compiler : ~11.2.0\n        \n            @angular/core : ~11.2.0\n        \n            @angular/forms : ~11.2.0\n        \n            @angular/platform-browser : ~11.2.0\n        \n            @angular/platform-browser-dynamic : ~11.2.0\n        \n            @angular/router : ~11.2.0\n        \n            @fortawesome/fontawesome-free : ^5.15.1\n        \n            @ngx-translate/core : ^13.0.0\n        \n            @ngx-translate/http-loader : ^6.0.0\n        \n            @popperjs/core : ^2.5.4\n        \n            bootstrap : ^4.5.3\n        \n            font-awesome : 4.7.0\n        \n            jquery : ^3.5.1\n        \n            jwt-decode : ^3.1.2\n        \n            leaflet : ^1.7.1\n        \n            leaflet-control-geocoder : ^2.1.0\n        \n            primeflex : ^2.0.0\n        \n            primeicons : ^4.0.0\n        \n            primeng : ^11.2.3\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            httpTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            validadorAgeGreaterThan   (src/.../validatorGreaterThan.directive.ts)\n                        \n                        \n                            validadorNonwhiteSpace   (src/.../validatorNonWhiteSpace.directive.ts)\n                        \n                        \n                            validadorPasswordSame   (src/.../validatorPasswordSame.directive.ts)\n                        \n                        \n                            validadorPriorityNumberOfInterest   (src/.../validatorPriorityNumber.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            httpTranslateLoader\n                        \n                        \n                    \n                \n            \n            \n                \nhttpTranslateLoader(http)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/validators/validatorGreaterThan.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            validadorAgeGreaterThan\n                        \n                        \n                    \n                \n            \n            \n                \nvalidadorAgeGreaterThan()\n                \n            \n\n\n\n\n            \n                \n                    Función que valida que la edad de un usuario sea mayor de 18 años.\n\n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n    src/app/validators/validatorNonWhiteSpace.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            validadorNonwhiteSpace\n                        \n                        \n                    \n                \n            \n            \n                \nvalidadorNonwhiteSpace()\n                \n            \n\n\n\n\n            \n                \n                    Función que valida que los campos de un formulario no estén en blanco.\n\n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n    src/app/validators/validatorPasswordSame.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            validadorPasswordSame\n                        \n                        \n                    \n                \n            \n            \n                \nvalidadorPasswordSame()\n                \n            \n\n\n\n\n            \n                \n                    Función que valida que el campo password y repeatPassword sean igual.\n\n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n    src/app/validators/validatorPriorityNumber.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            validadorPriorityNumberOfInterest\n                        \n                        \n                    \n                \n            \n            \n                \nvalidadorPriorityNumberOfInterest()\n                \n            \n\n\n\n\n            \n                \n                    Función que valida que el valor de la puntuación dada a un interés se encuentre entre 0 y 10.\n\n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n\nProyectoTurismoFRONT\nThis project was generated with Angular CLI version 10.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddActivityComponent\n\nAddActivityComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddActivityComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditActivitiesComponent\n\nEditActivitiesComponent\n\nAppModule -->\n\nEditActivitiesComponent->AppModule\n\n\n\n\n\nEditUserAdminComponent\n\nEditUserAdminComponent\n\nAppModule -->\n\nEditUserAdminComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nInformationActivitiesComponent\n\nInformationActivitiesComponent\n\nAppModule -->\n\nInformationActivitiesComponent->AppModule\n\n\n\n\n\nListActivitiesEvaluateComponent\n\nListActivitiesEvaluateComponent\n\nAppModule -->\n\nListActivitiesEvaluateComponent->AppModule\n\n\n\n\n\nListCitiesComponent\n\nListCitiesComponent\n\nAppModule -->\n\nListCitiesComponent->AppModule\n\n\n\n\n\nListInterestComponent\n\nListInterestComponent\n\nAppModule -->\n\nListInterestComponent->AppModule\n\n\n\n\n\nListUserComponent\n\nListUserComponent\n\nAppModule -->\n\nListUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nMenuBarComponent\n\nMenuBarComponent\n\nAppModule -->\n\nMenuBarComponent->AppModule\n\n\n\n\n\nRecommendationComponent\n\nRecommendationComponent\n\nAppModule -->\n\nRecommendationComponent->AppModule\n\n\n\n\n\nRecommendationMapComponent\n\nRecommendationMapComponent\n\nAppModule -->\n\nRecommendationMapComponent->AppModule\n\n\n\n\n\nSignUpComponent\n\nSignUpComponent\n\nAppModule -->\n\nSignUpComponent->AppModule\n\n\n\n\n\nTableActivitiesComponent\n\nTableActivitiesComponent\n\nAppModule -->\n\nTableActivitiesComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nAppModule -->\n\nNotificationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        16 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cabecera   (src/.../auth.service.ts)\n                        \n                        \n                            cabecera   (src/.../user.service.ts)\n                        \n                        \n                            cabecera   (src/.../rol.service.ts)\n                        \n                        \n                            cabecera   (src/.../activity.service.ts)\n                        \n                        \n                            cabecera   (src/.../city.service.ts)\n                        \n                        \n                            cabecera   (src/.../interest.service.ts)\n                        \n                        \n                            cabecera   (src/.../images.service.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            interceptorProvider   (src/.../interceptor.service.ts)\n                        \n                        \n                            TOKEN_KEY   (src/.../local-storage.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/auth/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cabecera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers: new HttpHeaders({'Content-Type': 'application/json'})}\n                        \n                    \n\n                \n                    \n                        Encabezado para las peticiones y respuestas HTTP\n\n                    \n                \n\n            \n        \n\n    src/app/services/user/user.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cabecera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers: new HttpHeaders({'Content-Type': 'application/json'})}\n                        \n                    \n\n                \n                    \n                        Encabezado para las peticiones y respuestas HTTP\n\n                    \n                \n\n            \n        \n\n    src/app/services/rol/rol.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cabecera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers: new HttpHeaders({'Content-Type': 'application/json'})}\n                        \n                    \n\n                \n                    \n                        Encabezado para las peticiones y respuestas HTTP\n\n                    \n                \n\n            \n        \n\n    src/app/services/activity/activity.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cabecera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers: new HttpHeaders({'Content-Type': 'application/json'})}\n                        \n                    \n\n                \n                    \n                        Encabezado para las peticiones y respuestas HTTP\n\n                    \n                \n\n            \n        \n\n    src/app/services/city/city.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cabecera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers: new HttpHeaders({'Content-Type': 'application/json'})}\n                        \n                    \n\n                \n                    \n                        Encabezado para las peticiones y respuestas HTTP\n\n                    \n                \n\n            \n        \n\n    src/app/services/interest/interest.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cabecera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers: new HttpHeaders({'Content-Type': 'application/json'})}\n                        \n                    \n\n                \n                    \n                        Encabezado para las peticiones y respuestas HTTP\n\n                    \n                \n\n            \n        \n\n    src/app/services/images/images.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cabecera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers: new HttpHeaders({'Content-Type': 'application/json'})}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/interceptors/interceptor.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            interceptorProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{provide: HTTP_INTERCEPTORS, useClass: InterceptorService, multi: true}]\n                        \n                    \n\n\n            \n        \n\n    src/app/services/local-storage/local-storage.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'AuthToken'\n                        \n                    \n\n                \n                    \n                        Clave para almacenar el valor del token en el LocalStorage\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
