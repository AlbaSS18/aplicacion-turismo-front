var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Activity.html",[0,0.056,1,1.483]],["body/classes/Activity.html",[0,0.084,1,2.62,2,1.78,3,0.184,4,0.161,5,0.161,6,3.257,7,0.784,8,1.041,9,0.69,10,2.458,11,0.736,12,2.79,13,0.809,14,2.458,15,3.244,16,0.161,17,0.437,18,3.707,19,2.469,20,1.53,21,1.327,22,3.707,23,3.707,24,4.756,25,0.608,26,0.662,27,4.756,28,0.364,29,0.019,30,1.139,31,0.403,32,4.24,33,3.883,34,6.018,35,1.36,36,5.374,37,5.651,38,1.297,39,4.24,40,3.578,41,4.24,42,4.776,43,3.036,44,4.24,45,1.736,46,4.24,47,2.005,48,4.265,49,4.24,50,3.883,51,4.24,52,3.883,53,3.647,54,4.24,55,4.776,56,3.451,57,4.24,58,2.348,59,4.24,60,3.883,61,2.917,62,0.241,63,0.704,64,4.33,65,2.965,66,3.647,67,3.647,68,1.531,69,3.647,70,3.257,71,1.151,72,3.257,73,1.309,74,2.373,75,1.458,76,2.917,77,3.257,78,2.228,79,3.647,80,3.647,81,2.965,82,3.647,83,1.206,84,3.647,85,3.647,86,2.965,87,0.01,88,0.013,89,0.01]],["title/classes/ActivityRecommended.html",[0,0.056,76,1.954]],["body/classes/ActivityRecommended.html",[0,0.082,1,2.981,2,1.701,3,0.176,4,0.153,5,0.153,6,3.112,7,0.77,8,1.022,9,0.678,10,2.385,11,0.723,12,2.755,13,0.809,14,2.385,15,3.243,16,0.153,17,0.424,18,3.625,19,2.414,20,1.496,21,1.297,22,3.625,23,3.625,24,4.65,25,0.595,26,0.643,27,4.65,28,0.366,29,0.019,30,1.133,31,0.406,33,3.768,34,5.942,35,1.343,36,5.306,37,5.55,38,1.297,40,3.472,42,4.635,43,3.074,45,1.684,47,1.945,48,4.139,50,3.768,52,3.768,53,3.485,55,4.635,56,3.39,58,2.296,60,3.768,61,2.831,62,0.234,63,0.683,64,4.234,65,2.833,66,3.485,67,3.485,68,1.463,69,3.485,70,3.112,71,1.1,72,3.112,73,1.427,74,2.267,75,1.393,76,3.39,77,4.139,78,2.831,79,4.635,80,4.635,81,4.234,82,4.635,83,1.533,84,4.635,85,4.635,86,4.234,87,0.01,88,0.013,89,0.01,90,4.051,91,4.051,92,4.097,93,4.051,94,4.051,95,4.051,96,4.051,97,4.051,98,4.051,99,4.051,100,4.051,101,4.051,102,4.051]],["title/injectables/ActivityService.html",[103,0.499,104,1.739]],["body/injectables/ActivityService.html",[0,0.043,1,2.464,3,0.124,4,0.108,5,0.108,7,0.782,8,0.877,9,0.778,11,0.819,13,0.778,15,3.12,16,0.108,17,0.332,20,1.655,25,0.644,26,0.782,28,0.245,29,0.019,30,0.43,31,0.372,35,0.556,38,1.305,45,2.129,62,0.124,63,0.831,71,2.017,76,1.503,83,1.201,87,0.007,88,0.01,89,0.007,103,0.567,104,2.76,105,0.984,106,2.198,107,4.314,108,0.567,109,2.572,110,2.952,111,3.631,112,2.952,113,4.762,114,3.631,115,3.631,116,3.631,117,3.631,118,0.882,119,1.601,120,3.357,121,4.221,122,0.881,123,1.699,124,1.259,125,2.527,126,3.098,127,1.902,128,1.496,129,2.859,130,2.527,131,2.362,132,3.631,133,2.861,134,1.475,135,3.033,136,1.705,137,3.033,138,2.908,139,1.413,140,2.908,141,3.699,142,4.129,143,2.218,144,0.915,145,3.04,146,2.427,147,3.378,148,1.351,149,3.631,150,2.861,151,2.635,152,1.772,153,3.631,154,2.861,155,2.218,156,1.974,157,2.218,158,2.861,159,1.842,160,3.357,161,3.631,162,2.861,163,3.631,164,2.861,165,3.242,166,1.197,167,5.314,168,3.631,169,2.861,170,3.242,171,0.949,172,3.631,173,2.861,174,3.872,175,4.314,176,0.584,177,0.556,178,3.631,179,0.949,180,1.384,181,1.772,182,0.693,183,0.301,184,1.601,185,1.416,186,1.338,187,1.338,188,0.853,189,1.601,190,2.001,191,1.713,192,1.601,193,1.601,194,1.503,195,0.707,196,3.058,197,1.416,198,0.938,199,1.503,200,1.503,201,1.141,202,1.085,203,1.503,204,1.713,205,1.713,206,1.818,207,1.201,208,1.275,209,5.536,210,0.675,211,2.461,212,4.221,213,0.741,214,2.861,215,2.861,216,2.001,217,2.461,218,2.861,219,2.861]],["title/components/AddActivityComponent.html",[220,0.444,221,0.963]],["body/components/AddActivityComponent.html",[0,0.032,1,1.659,3,0.092,4,0.08,5,0.08,7,0.564,8,0.944,9,0.766,11,0.817,13,0.768,15,1.986,16,0.08,17,0.264,18,1.268,19,0.844,21,1.105,22,1.268,23,1.268,25,0.539,26,0.496,28,0.268,29,0.019,31,0.35,33,1.48,35,1.246,38,1.191,47,0.764,50,1.48,52,1.48,56,2.881,58,0.803,62,0.092,63,0.695,64,4.394,68,1.708,73,1.115,75,1.153,83,0.954,87,0.005,88,0.008,89,0.005,104,2.785,108,0.45,110,3.309,118,0.832,122,0.559,123,0.868,124,1.829,127,1.226,128,1.777,134,1.283,136,1.413,139,1.066,140,2.186,141,1.268,142,3.309,144,0.653,146,1.364,148,1.014,160,1.761,166,1.178,171,1.413,176,0.849,177,1.002,179,1.233,182,0.751,183,0.222,195,0.828,198,0.694,206,1.665,210,1.115,213,1.589,220,0.615,221,1.488,222,1.048,223,0.694,224,0.694,225,0.694,226,0.694,227,5.609,228,4.56,229,1.821,230,0.954,231,1.431,232,0.694,233,2.298,234,2.09,235,1.099,236,4.16,237,1.099,238,3.351,239,3.579,240,4.16,241,2.91,242,4.16,243,3.351,244,2.883,245,3.634,246,1.627,247,1.821,248,2.843,249,3.13,250,2.785,251,2.501,252,2.501,253,2.949,254,3.351,255,2.486,256,2.094,257,2.552,258,1.761,259,2.601,260,2.344,261,2.637,262,1.761,263,1.659,264,1.761,265,1.659,266,2.094,267,1.578,268,2.354,269,1.659,270,1.659,271,1.659,272,1.567,273,1.484,274,2.094,275,1.58,276,1.876,277,1.659,278,1.876,279,2.117,280,2.007,281,1.777,282,2.344,283,3.351,284,2.714,285,1.876,286,1.876,287,1.567,288,1.567,289,1.567,290,1.659,291,1.659,292,2.16,293,2.883,294,1.567,295,1.708,296,1.56,297,3.351,298,2.117,299,3.351,300,2.883,301,3.567,302,2.833,303,3.309,304,3.309,305,3.283,306,2.648,307,2.883,308,2.117,309,2.883,310,4.07,311,2.883,312,1.876,313,2.344,314,2.574,315,2.883,316,3.309,317,2.883,318,2.574,319,2.117,320,1.876,321,2.117,322,1.887,323,1.887,324,2.883,325,2.574,326,1.567,327,2.574,328,4.212,329,2.117,330,2.117,331,1.659,332,3.606,333,2.117,334,1.761,335,2.574,336,2.91,337,2.574,338,1.659,339,1.578,340,2.117,341,1.567,342,1.567,343,2.648,344,1.876,345,1.048,346,0.937,347,1.48,348,1.268,349,0.803,350,1.48,351,2.16,352,2.344,353,1.821,354,3.351,355,2.117,356,1.626,357,2.117,358,1.268,359,0.803,360,0.803,361,2.186,362,1.268,363,0.937,364,0.889,365,0.937,366,0.937,367,0.889,368,0.937,369,1.56,370,2.117,371,1.364,372,2.843,373,0.889,374,1.84,375,0.937,376,2.117,377,1.48,378,1.268,379,1.48,380,1.48,381,1.48,382,1.48,383,1.48,384,1.821,385,1.821,386,1.821,387,1.821,388,1.821,389,1.821,390,1.821,391,1.821,392,1.48,393,1.626,394,1.821,395,2.117,396,1.821,397,2.117,398,1.821,399,1.821,400,1.821,401,1.821,402,2.117,403,2.117,404,1.821,405,1.626,406,1.626,407,1.626,408,2.883,409,2.117,410,2.117,411,2.883,412,4.731,413,1.821,414,3.351,415,0.844,416,2.117,417,2.117,418,2.117,419,3.351,420,2.117,421,2.117,422,2.117,423,2.117,424,2.117,425,2.117,426,2.117,427,2.117,428,2.117,429,2.117,430,2.117,431,2.117,432,2.117,433,2.574,434,3.309,435,2.501,436,1.48,437,1.48,438,1.821,439,1.48,440,1.821,441,1.48,442,2.117,443,2.117,444,1.626,445,1.185,446,2.117,447,1.626,448,1.626,449,2.059,450,2.117,451,2.117,452,1.48,453,1.821,454,1.626,455,0.937,456,1.626,457,1.48,458,2.883,459,1.821,460,2.574,461,3.351,462,1.876,463,1.761,464,1.484,465,2.883,466,1.821,467,1.821,468,1.821,469,1.821,470,3.351,471,2.344,472,2.344,473,2.344,474,3.351,475,2.883,476,0.844,477,1.407,478,0.844,479,0.844,480,0.844,481,2.074,482,0.728,483,1.955,484,1.502,485,0.844,486,0.803,487,1.185,488,1.842,489,1.364,490,1.945,491,2.059,492,2.186,493,1.48,494,2.282,495,1.567,496,2.342,497,1.747,498,2.117,499,0.803,500,0.803,501,2.117,502,2.117,503,1.364,504,2.117,505,2.883,506,1.821,507,2.007,508,1.048,509,1.185,510,2.117,511,0.937,512,1.821,513,2.117,514,1.821,515,2.117,516,1.821,517,2.117,518,1.821,519,1.48,520,1.821,521,1.821,522,2.883,523,1.821,524,1.821,525,1.821,526,1.268,527,1.821,528,1.185,529,1.268,530,1.821,531,2.883,532,1.821,533,1.821,534,3.579,535,3.579,536,1.821,537,1.821,538,1.821,539,1.821,540,1.821,541,1.268,542,2.883,543,1.821,544,0.631,545,1.099,546,1.099,547,0.694,548,0.694,549,0.694,550,0.575,551,0.694,552,0.548,553,1.241,554,1.099,555,0.548,556,0.354,557,0.694,558,0.548,559,1.099,560,0.575,561,0.662,562,0.548,563,0.954,564,0.694,565,0.548,566,0.694,567,0.548,568,0.694,569,0.548,570,0.548,571,0.694,572,0.548,573,1.099,574,0.575,575,0.662,576,0.694,577,0.548,578,0.694,579,0.548,580,0.631,581,0.548,582,0.631,583,0.694,584,0.548,585,0.602,586,0.694,587,0.694]],["title/components/AppComponent.html",[220,0.444,550,1.01]],["body/components/AppComponent.html",[0,0.074,3,0.212,4,0.185,5,0.185,16,0.185,17,0.478,25,0.65,26,0.583,28,0.297,29,0.018,31,0.332,62,0.212,87,0.012,88,0.014,89,0.012,109,2.09,118,0.859,122,0.656,182,0.742,183,0.513,202,2.305,210,1.632,213,1.265,220,0.789,221,1.265,222,1.9,223,1.601,224,1.601,225,1.601,226,1.601,232,1.601,233,2.549,234,2.319,235,1.992,237,1.992,252,2.99,267,1.852,268,2.381,306,2.733,349,1.852,360,1.852,369,1.326,374,1.879,544,1.456,545,1.992,546,1.992,547,1.601,548,1.601,549,1.601,550,1.879,551,1.601,552,1.265,553,1.973,554,1.992,555,1.265,556,0.816,557,1.601,558,1.265,559,1.992,560,1.326,561,1.527,562,1.265,563,1.729,564,1.601,565,1.265,566,1.601,567,1.265,568,1.601,569,1.265,570,1.265,571,1.601,572,1.265,573,1.992,574,1.326,575,1.527,576,1.601,577,1.265,578,1.601,579,1.265,580,1.456,581,1.265,582,1.456,583,1.601,584,1.265,585,1.389,586,1.601,587,1.601,588,4.2,589,6.615,590,6.076,591,4.883,592,5.081,593,5.954,594,4.883,595,4.883,596,4.883,597,4.883,598,4.883,599,4.883,600,4.2,601,4.2]],["title/modules/AppModule.html",[602,2.601,603,2.601]],["body/modules/AppModule.html",[0,0.055,3,0.156,4,0.136,5,0.136,29,0.019,62,0.216,87,0.009,88,0.012,89,0.009,120,2.994,182,0.884,183,0.378,185,1.782,198,1.181,208,0.7,210,1.449,213,0.933,221,1.728,228,2.519,234,1.074,253,2.462,267,1.887,346,1.594,349,1.366,360,1.366,392,2.519,435,1.512,544,1.074,550,1.98,552,1.728,553,1.7,555,1.728,556,0.831,558,1.728,560,1.811,561,1.126,562,1.728,563,1.415,565,1.728,567,1.728,569,1.728,570,1.728,572,1.728,574,1.811,575,1.126,577,1.728,579,1.728,580,1.074,581,1.728,582,1.074,584,1.728,585,1.025,602,2.519,603,5.467,604,2.321,605,2.519,606,4.902,607,4.378,608,4.902,609,2.766,610,3.098,611,3.098,612,3.098,613,3.098,614,3.098,615,4.299,616,3.733,617,3.479,618,3.098,619,2.519,620,2.766,621,4.279,622,4.974,623,2.784,624,1.892,625,3.601,626,3.601,627,4.279,628,3.601,629,3.601,630,3.098,631,4.974,632,3.601,633,4.974,634,3.601,635,4.974,636,3.601,637,4.974,638,4.974,639,2.519,640,3.098,641,4.974,642,3.601,643,2.766,644,3.601,645,4.974,646,3.601,647,4.974,648,3.601,649,4.974,650,3.601,651,4.974,652,3.601,653,4.974,654,3.098,655,3.479,656,3.601,657,3.098,658,2.519,659,4.378,660,4.974,661,3.601,662,4.974,663,3.601,664,3.206,665,4.974,666,3.601,667,4.974,668,3.601,669,4.974,670,3.601,671,4.974,672,3.601,673,2.519,674,3.098,675,4.974,676,3.601,677,4.974,678,3.601,679,2.519,680,3.098,681,2.519,682,4.279,683,3.601,684,4.974,685,3.601,686,4.974,687,3.601,688,4.974,689,3.601,690,4.974,691,3.601,692,4.279,693,2.766,694,4.974,695,3.601,696,2.519,697,4.974,698,3.601,699,2.519,700,4.974,701,3.601,702,3.601,703,3.098,704,4.279,705,4.974,706,3.601,707,4.974,708,3.601,709,2.766,710,2.519,711,3.098,712,2.519,713,4.974,714,3.601,715,4.974,716,3.601,717,4.974,718,3.601,719,3.098,720,2.519,721,3.098,722,4.974,723,3.601,724,4.974,725,3.601,726,3.601,727,3.601,728,4.974,729,3.601,730,2.519,731,3.098,732,4.974,733,3.601,734,4.974,735,3.601,736,3.601,737,2.766,738,3.601,739,2.766,740,3.601,741,3.098,742,3.601]],["title/modules/AppRoutingModule.html",[602,2.601,615,2.397]],["body/modules/AppRoutingModule.html",[0,0.068,3,0.196,4,0.171,5,0.171,21,0.968,29,0.019,62,0.196,75,2.565,87,0.011,88,0.014,89,0.011,182,0.866,183,0.475,195,1.116,210,1.586,213,1.17,220,0.909,221,1.499,228,3.159,359,1.713,375,2,552,1.499,553,1.903,555,1.499,556,1.188,558,1.499,562,1.499,563,1.816,565,1.499,567,1.499,569,1.499,570,1.499,572,1.499,577,1.499,579,1.499,580,1.725,581,1.499,582,1.347,584,1.499,585,1.285,604,2.911,609,3.47,615,3.728,621,3.885,627,4.976,630,3.885,639,3.159,640,3.885,654,3.885,657,3.885,658,3.159,659,4.443,673,3.159,674,3.885,679,3.159,680,3.885,681,3.159,682,4.976,699,3.159,710,3.159,711,3.885,712,3.159,719,3.885,720,3.159,721,3.885,730,3.159,731,3.885,743,4.517,744,4.517,745,4.463,746,5.784,747,4.046,748,4.517,749,3.47,750,6.381,751,4.046,752,4.517,753,3.47,754,5.251,755,4.517,756,7.667,757,5.784,758,4.113,759,5.784,760,5.784,761,3.885,762,2.911,763,5.768,764,6.416,765,4.807,766,4.517,767,4.517,768,3.47,769,4.517,770,4.517,771,4.517,772,4.517,773,4.517,774,4.517,775,4.517]],["title/guards/AuthGuardService.html",[747,2.601,776,2.601]],["body/guards/AuthGuardService.html",[0,0.082,3,0.236,4,0.206,5,0.206,16,0.206,25,0.637,26,0.774,28,0.317,29,0.018,31,0.354,62,0.236,87,0.013,88,0.015,89,0.013,103,0.871,108,0.871,118,0.955,122,0.871,144,0.688,182,0.777,183,0.571,201,2.166,202,2.06,207,2.281,208,1.26,230,1.546,251,3.126,338,2.689,339,2.06,359,2.06,369,1.475,415,2.166,747,4.535,749,5.324,763,5.515,777,3.799,778,5.962,779,3.799,780,4.173,781,2.854,782,4.673,783,5.578,784,6.176,785,5.962,786,6.176,787,4.673,788,4.173,789,2.405,790,2.06,791,2.405,792,3.253,793,4.173]],["title/injectables/AuthService.html",[103,0.499,794,2.081]],["body/injectables/AuthService.html",[0,0.063,3,0.18,4,0.157,5,0.157,7,0.73,8,1.031,9,0.795,11,0.73,13,0.711,16,0.157,17,0.43,25,0.601,26,0.73,28,0.331,29,0.019,30,0.622,31,0.356,35,1.315,38,1.288,62,0.18,63,0.881,71,1.953,83,1.178,87,0.01,88,0.013,89,0.01,103,0.734,105,1.424,108,0.734,109,2.39,118,1.076,119,2.318,120,3.724,122,0.822,123,1.801,124,1.63,125,3.274,126,3.643,127,1.836,128,1.825,129,2.296,130,3.274,131,3.06,134,1.329,135,2.733,136,1.463,137,2.733,138,3.42,139,1.315,143,3.42,144,0.825,145,2.903,146,2.218,147,3.044,148,1.204,166,1.311,171,1.229,176,0.846,177,0.805,179,1.229,180,1.792,181,2.296,182,0.759,183,0.435,184,2.318,185,2.05,186,3.044,187,1.937,188,1.235,189,2.318,190,2.897,192,2.318,193,2.318,194,2.176,195,1.024,196,3.029,197,2.05,198,1.358,199,2.176,200,2.176,201,1.652,202,1.571,203,2.176,204,2.48,205,2.48,206,1.662,207,1.739,208,1.063,281,1.63,556,1.161,758,3.944,762,3.944,794,3.787,795,3.181,796,5.265,797,5.467,798,4.703,799,4.141,800,5.599,801,3.274,802,4.703,803,3.222,804,4.141,805,3.824,806,4.703,807,4.703,808,3.181,809,5.467]],["title/classes/City.html",[0,0.056,19,1.483]],["body/classes/City.html",[0,0.086,2,2.378,3,0.246,4,0.215,5,0.215,7,0.676,8,0.898,9,0.595,10,2.508,11,0.635,12,2.259,13,0.78,14,2.508,16,0.215,17,0.523,19,2.651,20,1.744,25,0.693,28,0.325,29,0.018,30,0.998,31,0.363,38,1.215,40,4.781,43,2.791,45,2.078,58,2.521,62,0.246,87,0.013,88,0.016,89,0.013,810,4.872,811,5.664,812,5.664]],["title/injectables/CityService.html",[103,0.499,249,1.954]],["body/injectables/CityService.html",[0,0.055,3,0.158,4,0.138,5,0.138,7,0.737,8,0.978,9,0.782,11,0.783,13,0.773,16,0.138,17,0.394,19,2.889,20,1.416,25,0.607,26,0.737,28,0.28,29,0.019,30,0.546,31,0.366,35,1.114,38,1.3,40,4.77,45,1.566,47,1.809,62,0.158,63,0.635,71,2.01,83,1.425,87,0.009,88,0.012,89,0.009,103,0.673,105,1.251,108,0.673,109,2.512,118,1.007,119,2.036,120,3.602,122,0.829,123,1.809,124,1.494,125,3,126,3.455,127,1.877,128,1.709,129,2.592,130,3,131,2.804,134,1.426,135,2.933,136,1.664,137,2.933,138,2.632,139,1.378,140,2.632,141,3.696,143,2.632,144,0.885,145,2.994,146,2.375,147,3.266,148,1.292,151,3.01,152,2.592,155,2.632,156,2.342,157,2.632,159,1.494,176,0.743,177,0.707,179,1.126,180,1.642,181,2.103,182,0.75,183,0.382,184,2.036,185,1.801,186,1.701,187,1.701,188,1.085,189,2.036,190,2.544,192,2.036,193,2.036,194,1.911,195,0.899,196,3.204,197,1.801,198,1.193,199,1.911,200,1.911,201,1.451,202,1.38,203,1.911,204,2.178,205,2.178,206,1.758,207,1.528,208,1.2,210,0.858,213,0.942,216,2.544,249,3.401,260,4.007,813,2.795,814,4.929,815,4.309,816,4.309,817,3.848,818,5.31,819,5.009,820,4.309,821,3.638,822,4.309,823,3.638,824,2.48,825,4.309,826,3.638,827,3.638,828,4.309,829,3.129,830,3.638,831,3.638,832,3.638,833,2.795,834,3.638]],["title/components/EditActivitiesComponent.html",[220,0.444,552,0.963]],["body/components/EditActivitiesComponent.html",[0,0.027,1,1.894,3,0.078,4,0.068,5,0.22,7,0.642,8,0.889,9,0.765,11,0.805,13,0.783,15,2.775,16,0.068,17,0.232,18,1.762,19,1.174,20,1.065,21,1.153,22,1.762,23,1.762,25,0.57,26,0.567,28,0.249,29,0.019,30,0.647,31,0.361,33,1.26,35,1.234,38,1.253,50,1.26,52,1.26,56,2.948,58,1.415,60,2.058,61,2.264,62,0.078,63,0.791,64,4.177,65,3.014,68,1.715,71,1.66,72,3.31,73,1.471,74,2.853,75,1.482,83,0.837,87,0.004,88,0.007,89,0.004,104,2.624,108,0.395,112,2.61,118,0.758,122,0.638,123,1.394,124,1.732,127,0.467,128,1.673,134,1.274,136,1.305,139,1.234,142,1.26,144,0.682,146,1.763,148,0.797,160,1.546,166,0.987,171,1.209,176,0.601,177,0.725,179,1.343,180,1.839,182,0.712,183,0.189,188,0.537,195,0.445,198,0.59,206,1.75,210,1.016,213,0.467,220,0.567,221,0.467,222,0.92,223,0.59,224,0.59,225,1.557,226,0.59,230,0.837,231,1.283,232,0.59,233,2.23,234,2.028,235,0.965,237,0.965,241,2.61,244,2.532,246,1.482,248,2.133,249,0.946,250,2.624,251,2.356,252,2.356,253,2.777,255,2.264,256,2.257,257,2.351,258,1.546,259,2.382,261,2.257,262,1.546,263,1.457,264,1.546,265,1.457,266,1.908,267,1.415,268,2.146,269,1.457,270,1.457,271,1.457,272,1.376,273,1.303,274,1.908,275,1.54,276,1.647,277,1.457,278,1.647,280,1.078,281,1.781,282,1.26,284,2.777,285,1.008,286,1.008,287,0.842,288,0.842,289,0.842,290,0.891,291,0.891,292,1.161,293,1.549,294,0.842,295,1.347,296,1.45,301,1.762,302,2.58,303,3.014,304,3.014,305,3.221,306,2.411,307,2.532,309,2.532,310,3.707,311,2.532,312,1.647,313,2.058,314,2.261,315,2.532,316,2.058,317,2.532,318,3.31,322,1.719,323,2.145,325,2.261,326,1.376,331,1.457,332,3.322,334,1.961,335,2.261,336,2.61,337,2.261,338,1.847,339,1.933,341,1.376,342,2.015,344,1.647,345,0.891,346,0.797,347,1.26,348,1.078,349,0.683,350,1.26,351,1.161,352,1.26,358,1.078,359,0.683,360,0.683,361,1.961,362,1.078,363,0.797,364,0.756,365,0.797,366,0.797,367,0.756,368,0.797,369,1.523,372,2.662,374,1.935,375,0.797,378,1.078,379,1.26,380,1.26,381,1.26,382,1.26,383,1.26,384,1.549,385,1.549,386,1.549,387,1.549,388,1.549,389,1.549,390,1.549,391,1.549,392,1.26,393,1.384,394,1.549,396,1.549,398,1.549,399,1.549,400,1.549,401,1.549,404,1.549,407,1.384,408,1.549,411,2.532,413,2.532,415,1.488,433,2.261,434,3.014,435,2.356,436,1.26,437,1.26,438,1.549,439,1.26,440,1.549,441,1.26,444,1.384,445,1.008,447,2.866,448,1.384,449,1.847,452,1.26,453,1.549,454,1.384,455,0.797,456,1.384,457,1.26,458,1.549,459,1.549,460,2.261,463,1.546,464,1.652,465,2.532,466,1.549,467,1.549,468,1.549,469,1.549,471,2.058,472,2.058,473,3.014,475,2.532,476,0.718,477,0.756,478,0.718,479,0.718,480,1.174,481,2.156,482,0.619,483,1.802,484,1.556,485,1.174,486,0.683,487,1.008,488,1.908,489,1.161,490,1.745,491,1.847,492,1.961,493,1.26,494,2.381,495,1.745,496,1.847,497,1.809,499,1.116,500,0.683,503,1.897,505,2.532,506,1.549,507,2.844,511,1.303,512,1.549,514,1.549,516,1.549,518,1.549,519,1.26,520,1.549,521,1.549,522,2.532,523,1.549,524,1.549,525,1.549,526,1.078,527,1.549,528,1.647,544,0.537,545,0.965,546,0.965,547,0.59,548,0.59,549,0.59,550,0.489,551,0.59,552,1.394,553,1.922,554,0.965,555,0.467,556,0.301,557,0.59,558,0.467,559,0.965,560,0.489,561,0.563,562,0.467,563,1.352,564,0.59,565,0.467,566,0.59,567,0.467,568,0.59,569,0.467,570,0.467,571,0.59,572,0.467,573,0.965,574,0.489,575,0.563,576,0.59,577,0.467,578,0.59,579,0.467,580,0.537,581,0.467,582,0.537,583,0.59,584,0.467,585,0.512,586,0.59,587,0.59,619,1.26,623,1.008,624,0.946,699,4.672,835,4.672,836,1.26,837,2.866,838,2.261,839,3.732,840,3.732,841,2.866,842,2.943,843,2.943,844,2.261,845,2.866,846,1.549,847,4.31,848,2.777,849,2.777,850,2.943,851,2.61,852,2.261,853,2.058,854,2.532,855,2.532,856,1.897,857,1.897,858,1.897,859,1.897,860,1.897,861,1.897,862,1.897,863,1.897,864,1.897,865,1.897,866,1.762,867,1.897,868,1.897,869,1.762,870,1.897,871,2.943,872,1.801,873,2.866,874,2.943,875,4.75,876,2.943,877,2.058,878,2.943,879,1.801,880,2.943,881,2.943,882,1.801,883,1.801,884,2.261,885,3.31,886,1.801,887,2.261,888,2.058,889,2.058,890,2.261,891,2.058,892,2.261,893,1.897,894,1.897,895,2.058,896,3.31,897,2.058,898,1.549,899,2.532,900,1.897,901,1.897,902,1.801,903,1.161,904,2.405,905,1.008,906,1.801,907,3.31,908,3.467,909,1.801,910,1.801,911,1.801,912,1.549,913,2.532,914,1.801,915,1.801,916,2.058,917,2.261,918,1.897,919,1.801,920,1.549,921,1.801,922,1.26,923,1.801,924,1.801,925,1.801,926,2.943,927,1.801,928,1.549,929,1.801,930,1.801,931,1.801,932,1.801,933,2.943,934,1.801,935,1.801,936,1.801,937,1.801,938,1.801,939,1.801,940,1.801,941,1.801,942,1.801,943,1.801,944,1.801,945,2.943,946,1.549,947,1.801,948,2.532,949,2.532,950,2.532,951,1.897,952,2.943,953,1.801,954,1.801,955,1.384,956,1.801,957,1.801,958,3.732,959,1.801,960,1.567,961,1.801,962,1.801,963,1.801,964,1.801,965,1.801,966,1.801,967,1.801,968,1.801,969,1.801,970,1.801,971,1.801,972,1.801,973,1.384,974,2.866,975,1.384,976,1.384,977,1.384,978,1.384,979,1.801,980,1.801,981,1.801,982,1.801,983,1.801,984,1.801,985,2.943,986,1.549,987,1.801,988,1.801,989,1.801,990,1.801,991,1.801,992,2.943,993,1.801,994,1.801,995,1.801,996,1.549,997,0.797,998,1.384,999,1.384,1000,1.549,1001,1.161,1002,1.549,1003,1.801,1004,1.801,1005,1.801,1006,1.801]],["title/components/EditUserAdminComponent.html",[220,0.444,555,0.963]],["body/components/EditUserAdminComponent.html",[0,0.033,3,0.096,4,0.083,5,0.083,7,0.413,8,0.957,9,0.754,11,0.749,13,0.758,16,0.131,17,0.272,20,1.196,25,0.475,26,0.413,28,0.273,29,0.019,31,0.354,35,1.208,38,1.204,60,2.419,61,1.817,62,0.096,63,0.857,68,1.746,71,1.584,73,0.816,75,0.758,83,0.984,87,0.005,88,0.008,89,0.005,108,0.465,118,0.851,122,0.465,123,1.445,124,1.853,127,0.896,128,1.896,134,1.233,136,1.088,139,1.314,144,0.613,146,1.134,148,0.895,166,1.256,171,1.358,176,0.45,177,0.94,179,1.088,182,0.749,183,0.232,187,1.03,188,0.657,195,0.545,198,1.723,206,1.687,208,0.94,210,1.14,213,0.571,220,0.509,221,0.571,222,1.081,223,0.722,224,0.722,225,0.722,226,0.722,230,0.984,231,1.469,232,0.722,233,2.314,234,2.105,235,1.134,237,1.134,246,1.664,248,2.394,251,2.536,252,2.536,253,2.99,255,1.817,256,2.674,257,2.602,258,1.817,259,2.535,262,1.817,263,1.712,264,1.817,265,1.712,266,2.141,267,1.619,268,2.411,269,1.712,270,1.712,271,1.712,272,1.617,273,1.531,274,2.469,275,1.499,276,1.936,277,1.712,278,1.936,280,2.071,281,1.853,284,2.99,285,1.936,286,1.936,287,1.617,288,1.617,289,1.617,290,1.712,291,1.712,292,2.229,294,1.617,295,1.542,296,1.376,301,2.896,305,2.071,322,1.929,323,2.409,326,1.617,327,2.657,332,3.676,334,2.541,335,2.657,336,2.419,338,1.712,339,1.993,341,1.617,342,2.262,344,1.936,345,1.091,346,0.975,349,0.836,359,0.836,360,0.836,361,1.817,362,1.319,363,0.975,364,0.925,365,0.975,366,0.975,367,0.925,368,0.975,369,1.584,372,2.113,374,1.814,415,2.225,435,2.031,445,1.936,449,1.712,452,1.541,454,1.692,455,0.975,462,1.233,463,1.158,464,1.531,476,0.879,477,0.925,478,0.879,479,0.879,480,1.379,481,1.542,482,0.758,483,1.312,484,0.795,485,0.879,486,0.836,487,1.233,488,0.975,489,1.42,494,2.327,495,1.617,496,2.394,497,0.925,499,0.836,500,1.312,507,2.071,508,1.712,509,1.233,529,2.071,530,1.895,531,2.975,532,1.895,533,1.895,534,3.673,535,3.673,536,1.895,537,1.895,538,1.895,539,1.895,540,1.895,541,2.071,542,2.975,543,1.895,544,1.032,545,1.134,546,1.134,547,0.722,548,0.722,549,0.722,550,0.598,551,0.722,552,0.571,553,2.016,554,1.134,555,1.511,556,1.265,557,0.722,558,0.571,559,1.134,560,0.598,561,0.689,562,0.571,563,0.984,564,0.722,565,0.571,566,0.722,567,0.571,568,0.722,569,0.571,570,0.571,571,0.722,572,0.571,573,1.134,574,0.598,575,0.689,576,0.722,577,0.571,578,0.722,579,0.571,580,0.657,581,0.571,582,0.657,583,0.722,584,0.571,585,0.627,586,0.722,587,0.722,710,4.607,765,2.229,835,4.607,841,3.28,844,2.657,845,3.716,846,1.895,847,4.64,851,2.986,852,2.657,853,2.419,854,2.975,855,2.975,873,2.657,884,2.657,885,3.716,887,2.657,888,2.419,889,2.419,890,2.657,891,2.419,892,2.657,893,2.229,894,2.229,895,2.419,896,3.716,897,2.419,900,2.229,903,2.229,904,3.117,905,1.936,908,3.759,916,2.419,917,2.657,918,1.42,920,1.895,922,1.541,946,1.895,955,1.692,960,1.452,973,1.692,974,3.28,975,1.692,976,1.692,977,1.692,978,1.692,1001,1.42,1002,1.895,1007,1.895,1008,4.27,1009,3.459,1010,4.27,1011,4.27,1012,2.35,1013,4.27,1014,4.837,1015,2.99,1016,4.837,1017,2.896,1018,3.459,1019,1.936,1020,2.203,1021,2.203,1022,2.203,1023,2.203,1024,3.459,1025,2.203,1026,3.459,1027,2.458,1028,2.203,1029,2.203,1030,2.203,1031,2.203,1032,1.692,1033,1.42,1034,1.895,1035,2.229,1036,1.692,1037,2.203,1038,2.203,1039,2.602,1040,2.761,1041,2.203,1042,2.203,1043,1.692,1044,1.895,1045,2.203,1046,2.203,1047,1.692,1048,1.895,1049,2.203,1050,2.203,1051,2.203,1052,1.42,1053,3.459,1054,2.203,1055,2.657,1056,1.692,1057,1.692,1058,1.42,1059,1.692,1060,2.203,1061,1.692,1062,2.203,1063,2.203,1064,2.203,1065,2.203,1066,2.203,1067,2.203,1068,1.319,1069,2.203,1070,2.203,1071,1.692,1072,1.319,1073,2.203,1074,1.895,1075,3.459,1076,2.203,1077,2.203,1078,2.203,1079,1.895,1080,1.895,1081,1.895,1082,1.895,1083,1.895,1084,1.895,1085,1.895,1086,1.895,1087,1.895,1088,1.895,1089,2.975,1090,2.975,1091,3.459,1092,2.419,1093,3.459,1094,3.459,1095,1.895,1096,2.986,1097,2.203,1098,1.692,1099,1.233,1100,1.158,1101,1.692,1102,2.203,1103,2.203,1104,2.752,1105,2.203,1106,1.895,1107,1.692,1108,1.895,1109,1.895,1110,1.692,1111,2.203,1112,2.203]],["title/components/EditUserComponent.html",[220,0.444,558,0.963]],["body/components/EditUserComponent.html",[0,0.036,3,0.102,4,0.089,5,0.089,7,0.532,8,1.027,9,0.745,11,0.727,13,0.704,16,0.138,17,0.287,21,1.163,25,0.493,26,0.435,28,0.246,29,0.019,31,0.354,35,1.202,38,1.185,62,0.102,63,0.869,68,1.813,71,1.558,73,0.86,75,1.727,87,0.006,88,0.009,89,0.006,108,0.49,118,0.883,122,0.49,123,1.601,124,1.712,127,0.945,128,1.712,134,1.262,136,0.82,139,1.116,144,0.636,146,1.196,148,0.675,166,1.229,171,1.29,176,0.745,177,0.709,179,1.129,182,0.74,183,0.248,188,0.704,195,0.583,198,1.78,206,1.558,208,1.116,210,1.184,213,0.611,220,0.532,221,0.611,222,1.141,223,0.774,224,0.774,225,0.774,226,0.774,230,1.038,231,1.534,232,0.774,233,2.34,234,2.128,235,1.196,237,1.196,241,3.12,246,1.727,248,2.485,252,2.595,255,1.917,256,2.222,257,2.687,258,1.917,259,2.289,265,1.806,266,1.616,267,1.692,268,2.304,269,1.806,270,1.806,271,1.806,275,1.184,280,2.185,281,1.497,284,3.06,285,2.042,286,2.042,287,1.706,288,1.706,289,1.706,290,1.806,291,1.806,294,1.706,295,1.813,296,1.428,305,2.185,322,2.002,323,1.455,326,1.706,331,1.806,338,1.806,339,2.177,341,1.706,342,2.347,344,2.042,345,1.168,346,1.045,360,0.895,361,1.917,362,1.413,363,1.045,364,0.991,365,1.045,366,1.045,367,0.991,368,1.045,369,1.363,372,2.687,373,0.991,374,1.898,375,1.975,377,2.552,378,2.185,415,2.386,433,2.803,434,3.511,435,2.41,436,1.651,437,1.651,439,1.651,441,1.651,449,1.806,455,1.045,460,2.803,462,1.321,463,1.24,464,1.616,476,0.941,477,1.532,478,0.941,479,0.941,480,1.455,481,1.318,482,0.812,483,1.384,484,0.852,485,0.941,486,0.895,487,1.321,488,1.045,490,1.104,491,1.168,492,1.24,493,1.651,494,2.403,495,1.706,496,2.485,497,0.991,499,0.895,500,1.384,508,1.168,511,1.045,528,1.321,529,1.413,541,1.413,544,1.331,545,1.196,546,1.196,547,0.774,548,0.774,549,0.774,550,0.641,551,0.774,552,0.611,553,1.997,554,1.196,555,0.611,556,1.06,557,0.774,558,1.601,559,1.196,560,0.641,561,0.738,562,0.611,563,1.038,564,0.774,565,0.611,566,0.774,567,0.611,568,0.774,569,0.611,570,0.611,571,0.774,572,0.611,573,1.196,574,0.641,575,0.738,576,0.774,577,0.611,578,0.774,579,0.611,580,0.704,581,0.611,582,0.704,583,0.774,584,0.611,585,0.672,586,0.774,587,0.774,712,4.614,781,2.344,789,1.045,790,0.895,791,1.045,835,4.614,841,3.427,844,2.803,845,3.856,851,3.511,873,2.803,884,2.803,885,3.856,887,2.803,888,2.552,889,2.552,890,2.803,891,2.552,892,2.803,893,2.352,894,2.352,895,2.552,896,3.856,897,2.552,903,2.352,904,3.236,905,2.042,908,3.236,916,2.552,917,2.803,918,1.521,922,2.552,955,1.813,960,2.108,973,1.813,974,4.17,975,1.813,976,1.813,977,1.813,978,1.813,997,1.045,1001,2.352,1012,0.812,1015,2.962,1019,2.042,1033,1.521,1035,2.352,1036,1.813,1039,2.687,1040,2.841,1044,3.139,1047,1.813,1048,2.03,1052,1.521,1055,2.803,1056,1.813,1057,1.813,1058,1.521,1059,1.813,1061,1.813,1068,1.413,1072,1.413,1074,2.03,1079,2.03,1080,2.03,1081,2.03,1082,2.03,1083,2.03,1084,2.03,1085,2.03,1086,2.03,1087,2.03,1088,2.03,1089,3.139,1090,3.139,1092,2.552,1096,2.552,1099,1.321,1100,1.24,1101,1.813,1104,2.876,1106,2.03,1107,1.813,1108,2.03,1109,2.03,1113,1.813,1114,3.436,1115,2.36,1116,3.838,1117,3.139,1118,4.462,1119,5.02,1120,3.139,1121,1.813,1122,3.649,1123,2.185,1124,2.185,1125,2.042,1126,1.917,1127,2.042,1128,2.36,1129,2.36,1130,2.36,1131,2.36,1132,2.36,1133,2.36,1134,2.36,1135,2.03,1136,2.36,1137,2.497,1138,1.24,1139,3.838,1140,3.139,1141,2.552,1142,2.03,1143,2.36,1144,2.36,1145,1.651,1146,1.813,1147,1.813,1148,1.413,1149,2.36,1150,2.042,1151,2.803,1152,2.36,1153,2.36,1154,2.36,1155,2.36,1156,1.651,1157,2.36,1158,2.36,1159,1.168,1160,2.36,1161,2.36,1162,2.36,1163,2.36,1164,2.36,1165,2.03,1166,2.03,1167,2.03,1168,2.36,1169,2.36,1170,2.36,1171,2.36,1172,2.36,1173,3.649,1174,2.36,1175,3.649,1176,2.36,1177,3.649,1178,2.36,1179,2.36,1180,2.36,1181,2.36,1182,3.649,1183,3.649,1184,3.649,1185,3.427,1186,2.36,1187,2.36,1188,2.36,1189,3.139,1190,3.649,1191,1.616,1192,1.917,1193,2.803,1194,3.139,1195,2.803,1196,3.139,1197,3.139,1198,2.803,1199,3.649,1200,2.36,1201,2.36,1202,2.36,1203,2.36,1204,2.36,1205,2.36,1206,1.651]],["title/injectables/ImagesService.html",[103,0.499,1207,2.857]],["body/injectables/ImagesService.html",[0,0.083,1,2.184,3,0.237,4,0.207,5,0.207,16,0.207,17,0.513,25,0.64,26,0.777,28,0.34,29,0.019,30,0.822,31,0.38,62,0.237,87,0.013,88,0.015,89,0.013,103,0.875,105,1.884,108,0.875,118,0.963,119,3.065,120,3.919,122,0.875,144,0.694,176,1.118,177,1.065,182,0.78,183,0.576,184,3.065,185,2.711,191,3.28,195,1.354,196,2.711,197,2.711,198,1.795,199,2.878,200,2.878,201,2.184,202,2.077,207,2.3,208,1.065,1207,5.005,1208,4.207,1209,6.955,1210,6.516,1211,6.516,1212,6.516,1213,5.477,1214,6.516,1215,6.516,1216,5.477]],["title/components/InformationActivitiesComponent.html",[220,0.444,560,1.01]],["body/components/InformationActivitiesComponent.html",[0,0.05,1,2.715,3,0.202,4,0.124,5,0.124,7,0.556,8,0.935,9,0.754,13,0.771,15,2.797,16,0.124,17,0.367,18,2.792,19,2.162,21,1.162,25,0.58,26,0.392,28,0.265,29,0.019,31,0.341,38,1.256,56,3.101,61,2.449,62,0.142,63,0.748,68,1.683,71,1.602,73,1.099,74,1.837,75,1.129,87,0.008,88,0.011,89,0.008,104,3.183,108,0.626,109,1.865,118,0.953,122,0.441,124,1.987,134,0.952,136,0.738,139,0.906,144,0.416,148,1.153,160,2.449,171,1.048,179,1.327,180,2.044,182,0.699,183,0.345,191,1.966,206,1.602,207,1.378,210,1.392,213,0.85,220,0.647,221,0.85,222,1.457,223,1.076,224,1.076,225,1.777,226,1.076,230,1.327,231,1.865,232,1.076,233,2.449,234,2.228,235,1.528,237,1.528,246,2.03,259,2.657,266,2.76,268,2.415,272,2.915,273,2.76,275,1.675,281,1.39,285,2.609,296,1.327,322,1.859,323,2.354,331,1.625,358,1.966,363,1.453,364,1.378,365,1.453,366,1.453,367,1.378,368,1.453,369,1.266,374,1.693,471,3.261,472,3.261,473,4.128,477,2.797,481,2.251,482,1.129,484,1.185,485,1.309,488,1.453,494,2.4,495,1.535,497,1.378,499,2.056,500,2.056,503,3.005,507,3.246,509,1.837,511,1.453,544,0.979,545,1.528,546,1.528,547,1.076,548,1.076,549,1.076,550,0.891,551,1.076,552,0.85,553,1.617,554,1.528,555,0.85,556,0.548,557,1.076,558,0.85,559,1.528,560,1.809,561,2.128,562,0.85,563,1.774,564,1.076,565,0.85,566,1.076,567,0.85,568,1.076,569,0.85,570,0.85,571,1.076,572,0.85,573,1.528,574,0.891,575,1.026,576,1.076,577,0.85,578,1.076,579,0.85,580,0.979,581,0.85,582,0.979,583,1.076,584,0.85,585,0.934,586,1.076,587,1.076,592,4.975,623,1.837,624,1.725,693,2.522,696,4.53,836,2.296,837,4.165,838,3.581,848,3.804,849,3.804,856,3.005,857,3.005,858,3.005,859,3.005,860,3.005,861,3.005,862,3.005,863,3.005,864,3.005,865,3.005,866,2.792,867,3.005,868,3.005,869,2.792,870,3.005,901,3.005,905,2.609,907,3.581,912,2.824,913,4.01,928,2.824,948,2.824,949,2.824,950,2.824,951,2.116,996,2.824,997,1.453,998,2.522,999,2.522,1000,2.824,1052,2.116,1100,1.725,1217,5.571,1218,3.282,1219,5.077,1220,6.234,1221,4.01,1222,4.664,1223,4.662,1224,4.662,1225,4.664,1226,4.664,1227,4.664,1228,3.282,1229,3.282,1230,2.824,1231,3.282,1232,3.282,1233,3.261,1234,3.261,1235,4.01,1236,3.261,1237,4.01,1238,3.282,1239,1.966,1240,1.966,1241,3.282,1242,3.282]],["title/interceptors/InterceptorService.html",[1243,3.199,1244,2.601]],["body/interceptors/InterceptorService.html",[0,0.076,3,0.218,4,0.191,5,0.191,16,0.191,25,0.608,26,0.739,28,0.303,29,0.019,31,0.366,62,0.268,87,0.012,88,0.015,89,0.012,103,0.831,108,0.831,118,1.088,122,0.831,144,0.784,145,2.674,182,0.82,183,0.529,185,2.49,188,1.5,195,1.53,197,2.49,201,2.007,202,1.908,208,1.303,230,1.432,251,3.111,296,1.432,328,3.865,339,1.908,359,1.908,369,1.95,455,2.74,655,3.519,737,3.865,781,2.773,789,2.227,790,1.908,791,2.227,792,3.013,1138,2.643,1244,4.689,1245,5.031,1246,3.865,1247,6.995,1248,6.189,1249,4.328,1250,5.031,1251,5.031,1252,6.189,1253,6.995,1254,6.704,1255,6.995,1256,5.031,1257,6.189,1258,5.324,1259,5.031,1260,6.189,1261,5.324,1262,6.189,1263,4.014,1264,5.031,1265,5.031,1266,5.031,1267,5.031,1268,3.865,1269,5.031,1270,5.031,1271,5.031,1272,5.031,1273,5.031,1274,4.328,1275,5.031,1276,4.328,1277,4.328]],["title/classes/Interest.html",[0,0.056,21,0.797]],["body/classes/Interest.html",[0,0.096,2,2.206,3,0.228,4,0.199,5,0.199,7,0.627,8,1.125,9,0.668,10,2.813,11,0.796,12,3.029,13,0.798,14,2.813,16,0.199,17,0.5,20,1.689,21,1.464,28,0.311,29,0.019,30,1.026,31,0.347,43,2.981,45,2.136,47,2.741,58,2.591,62,0.276,63,0.936,87,0.012,88,0.015,89,0.012,148,1.175,166,1.117,171,1.181,373,2.981,1156,3.674,1159,2.6,1278,4.036,1279,5.253,1280,5.253,1281,4.096,1282,4.519,1283,2.94,1284,2.94]],["title/classes/Interest-1.html",[0,0.047,21,0.665,1191,1.373]],["body/classes/Interest-1.html",[0,0.102,2,1.882,3,0.194,4,0.17,5,0.17,7,0.535,8,1.159,9,0.769,10,2.97,11,0.841,12,2.917,13,0.8,14,2.97,16,0.17,17,0.453,20,1.108,21,1.522,28,0.282,29,0.019,30,1.138,31,0.314,43,2.67,45,1.401,47,2.564,58,2.545,62,0.291,63,0.944,73,1.357,87,0.011,88,0.014,89,0.011,148,1.176,159,1.337,166,1.351,171,1.294,186,2.691,261,1.984,275,1.057,373,2.67,556,0.749,801,3.446,803,2.849,1012,2.307,1039,2.849,1040,2.849,1159,3.147,1283,3.221,1284,3.221,1285,2.888,1286,4.025,1287,4.482,1288,4.482,1289,4.447,1290,4.447,1291,2.973,1292,4.025,1293,4.025,1294,2.888,1295,3.135,1296,2.849,1297,4.447,1298,3.221,1299,3.135,1300,3.135,1301,2.888,1302,2.684,1303,2.684,1304,2.355]],["title/classes/InterestByUser.html",[0,0.056,1281,2.397]],["body/classes/InterestByUser.html",[0,0.095,2,2.157,3,0.223,4,0.195,5,0.195,7,0.613,8,1.116,9,0.659,10,2.775,11,0.824,12,3.035,13,0.8,14,2.775,16,0.195,17,0.493,20,1.27,21,1.101,28,0.331,29,0.019,30,1.016,31,0.37,43,3.033,45,2.115,47,2.748,58,2.566,62,0.272,63,0.931,87,0.012,88,0.015,89,0.012,148,1.303,166,1.239,171,1.409,373,2.958,1156,4.732,1159,3.349,1278,3.946,1281,4.541,1282,5.393,1283,3.508,1284,3.508,1305,5.137,1306,5.137,1307,5.137]],["title/injectables/InterestService.html",[103,0.499,250,1.739]],["body/injectables/InterestService.html",[0,0.05,3,0.144,4,0.126,5,0.126,7,0.748,8,0.942,9,0.78,11,0.807,12,2.869,13,0.798,15,1.978,16,0.126,17,0.371,20,1.609,21,1.527,25,0.616,26,0.748,28,0.268,29,0.019,30,0.5,31,0.366,35,1.063,38,1.294,45,1.858,47,2.668,62,0.144,63,0.866,71,2.006,83,1.555,87,0.008,88,0.011,89,0.008,103,0.633,105,1.146,108,0.633,109,2.527,118,0.961,119,1.865,120,3.515,122,0.842,123,1.77,124,1.405,125,2.821,126,3.325,127,1.879,128,1.63,129,2.733,130,2.821,131,2.637,134,1.438,135,2.958,136,1.584,137,2.958,138,2.476,139,1.385,140,2.476,143,2.476,144,0.893,145,3.005,146,2.378,147,3.294,148,1.331,151,2.872,152,2.495,155,2.476,156,2.203,157,2.476,159,1.405,166,1.045,176,0.68,177,0.648,179,1.059,180,1.545,181,1.978,182,0.666,183,0.35,184,1.865,185,1.649,188,0.994,192,1.865,193,1.865,194,1.751,195,0.824,196,3.221,197,2.332,198,1.092,199,1.751,200,1.751,201,1.329,202,1.264,203,1.751,204,1.995,205,1.995,206,1.767,207,1.399,208,1.219,210,0.786,213,0.863,216,2.33,250,2.931,261,2.42,275,1.289,277,1.649,281,2.038,824,2.332,889,2.33,1281,2.148,1302,2.821,1303,2.821,1304,2.872,1308,2.56,1309,4.702,1310,4.053,1311,3.619,1312,3.619,1313,4.053,1314,5.111,1315,4.712,1316,4.053,1317,3.332,1318,4.156,1319,3.619,1320,3.332,1321,4.053,1322,3.332,1323,4.053,1324,3.332,1325,3.332,1326,4.053,1327,2.148,1328,3.332,1329,4.712,1330,3.332,1331,3.332,1332,2.56,1333,3.332,1334,3.332]],["title/guards/IsLogginInGuardService.html",[751,2.601,776,2.601]],["body/guards/IsLogginInGuardService.html",[0,0.083,3,0.239,4,0.209,5,0.209,16,0.209,25,0.541,26,0.657,28,0.27,29,0.019,31,0.357,62,0.239,87,0.013,88,0.015,89,0.013,103,0.878,108,0.878,118,0.969,122,0.74,144,0.698,182,0.782,183,0.579,195,1.362,201,2.197,202,2.09,207,2.313,230,1.568,251,3.136,296,1.568,359,2.09,369,1.496,751,4.573,753,5.356,761,6.425,777,3.853,779,3.853,780,4.232,781,2.862,782,4.739,787,4.739,789,2.439,790,2.09,791,2.439,792,3.299,1012,1.895,1071,4.232,1335,5.998,1336,3.551,1337,4.739,1338,4.739]],["title/classes/JwtModel.html",[0,0.056,189,2.081]],["body/classes/JwtModel.html",[0,0.088,2,2.45,3,0.253,4,0.221,5,0.221,7,0.696,8,1.072,9,0.613,10,2.583,11,0.654,12,2.327,13,0.613,14,2.583,16,0.221,17,0.532,28,0.286,29,0.018,30,1.016,31,0.319,62,0.253,87,0.014,88,0.016,89,0.014,189,3.997,1263,4.53,1339,5.02,1340,5.835]],["title/components/ListActivitiesEvaluateComponent.html",[220,0.444,562,0.963]],["body/components/ListActivitiesEvaluateComponent.html",[0,0.04,1,2.659,3,0.114,4,0.099,5,0.099,7,0.569,8,0.841,9,0.754,11,0.793,13,0.77,15,2.228,16,0.099,17,0.312,25,0.588,26,0.569,28,0.279,29,0.019,30,0.595,31,0.349,35,1.163,38,1.181,43,1.663,56,2.788,61,2.788,62,0.114,63,0.81,68,1.429,71,1.075,73,1.251,74,1.47,75,1.362,76,2.504,81,2.769,83,1.897,87,0.006,88,0.009,89,0.006,104,2.989,108,0.532,118,0.933,122,0.64,123,1.026,124,1.421,128,1.181,134,1.222,136,0.89,139,1.243,144,0.604,148,1.284,159,1.421,160,3.558,165,4.373,166,1.092,171,0.89,174,3.711,177,1.032,179,1.346,180,1.866,182,0.747,183,0.276,188,0.783,191,1.573,206,1.625,208,0.77,210,1.636,213,0.68,220,0.569,221,0.68,222,1.238,223,0.861,224,0.861,225,1.562,226,0.861,230,1.127,231,1.639,232,0.861,233,2.378,234,2.163,235,1.298,237,1.298,246,1.825,259,2.387,268,2.058,275,1.507,296,1.356,301,2.371,302,2.371,303,2.769,304,2.769,305,2.371,306,2.216,313,2.769,322,2.116,323,2.116,326,1.851,332,3.333,336,3.711,337,3.041,341,1.851,349,0.996,358,1.573,363,1.163,364,1.103,365,1.163,366,1.163,367,1.103,368,1.163,369,1.441,374,1.546,375,1.753,464,1.163,476,1.047,478,1.047,479,1.047,480,1.579,481,1.916,482,1.362,483,1.502,484,0.948,485,1.047,486,0.996,487,1.47,488,1.753,489,1.693,490,1.228,491,1.3,492,1.38,494,1.753,497,1.103,499,0.996,500,1.502,508,1.96,511,1.163,529,3.177,541,3.918,544,0.783,545,1.298,546,1.298,547,0.861,548,0.861,549,0.861,550,0.713,551,0.861,552,0.68,553,1.421,554,1.298,555,0.68,556,0.661,557,0.861,558,0.68,559,1.298,560,0.713,561,0.821,562,1.609,563,2.141,564,0.861,565,0.68,566,0.861,567,0.68,568,0.861,569,0.68,570,0.68,571,0.861,572,0.68,573,1.298,574,0.713,575,0.821,576,0.861,577,0.68,578,0.861,579,0.68,580,0.783,581,0.68,582,0.783,583,0.861,584,0.68,585,0.747,586,0.861,587,0.861,623,1.47,624,1.38,720,4.576,781,2.425,789,1.163,790,0.996,791,1.163,824,1.96,848,3.42,849,3.42,856,2.552,857,2.552,858,2.552,859,2.552,860,2.552,861,2.552,862,2.552,863,2.552,864,2.552,865,3.42,866,2.371,867,2.552,868,2.552,869,2.371,870,2.552,877,1.837,888,2.769,901,2.552,907,3.041,916,2.769,918,1.693,951,1.693,960,2.685,997,1.163,1015,3.075,1019,2.216,1033,1.693,1052,2.552,1104,1.693,1110,3.041,1114,3.409,1121,2.017,1123,2.371,1124,2.371,1125,2.216,1126,2.08,1127,2.216,1137,2.216,1138,1.38,1145,1.837,1146,2.017,1147,2.017,1148,1.573,1150,1.47,1151,3.041,1191,2.83,1233,2.769,1234,2.769,1236,2.769,1341,4.217,1342,2.259,1343,3.959,1344,4.766,1345,3.959,1346,4.1,1347,4.766,1348,4.766,1349,4.766,1350,3.959,1351,3.041,1352,3.959,1353,2.626,1354,5.984,1355,3.959,1356,2.626,1357,3.959,1358,3.959,1359,3.041,1360,2.626,1361,3.041,1362,2.769,1363,2.626,1364,2.626,1365,2.626,1366,3.959,1367,3.959,1368,3.959,1369,2.259,1370,2.626,1371,2.626,1372,2.626,1373,2.626,1374,2.259,1375,2.017,1376,2.017,1377,2.626,1378,2.626,1379,3.959,1380,3.959,1381,2.626,1382,2.626,1383,3.406,1384,3.959,1385,3.959,1386,2.626,1387,2.626,1388,2.017,1389,2.259,1390,1.837,1391,2.259,1392,5.984,1393,2.259,1394,5.148,1395,2.626,1396,2.626,1397,2.259,1398,2.626,1399,2.626,1400,2.259,1401,2.626,1402,2.626,1403,2.626,1404,2.626,1405,2.626,1406,2.626,1407,2.626,1408,2.626,1409,2.626,1410,2.626,1411,2.626,1412,2.626,1413,2.259,1414,2.259,1415,2.626,1416,2.626,1417,2.626,1418,2.626,1419,3.406,1420,3.406,1421,2.626,1422,2.626,1423,2.626,1424,3.661,1425,2.259,1426,2.259,1427,2.259,1428,3.406,1429,3.041,1430,2.259,1431,2.259,1432,2.259,1433,2.017]],["title/components/ListCitiesComponent.html",[220,0.444,565,0.963]],["body/components/ListCitiesComponent.html",[0,0.044,3,0.125,4,0.109,5,0.109,16,0.109,17,0.334,19,2.819,20,1.048,25,0.679,26,0.663,28,0.322,29,0.019,31,0.402,62,0.125,75,2.26,87,0.007,88,0.01,89,0.007,108,0.57,118,0.746,122,0.746,144,0.876,176,1.134,177,1.08,182,0.752,183,0.303,208,0.979,210,1.666,213,1.099,220,0.601,221,0.746,222,1.326,223,0.944,224,0.944,225,0.944,226,0.944,230,1.207,231,1.732,232,0.944,233,2.409,234,2.191,235,1.391,237,1.391,246,1.91,248,3.169,249,3.254,252,2.688,253,3.169,257,2.93,267,1.093,268,2.487,296,1.991,302,1.725,338,3.252,339,2.107,345,1.426,346,1.275,347,2.015,349,1.093,360,1.093,361,2.645,362,1.725,369,1.607,371,2.734,372,2.492,374,1.878,375,1.275,415,2.843,435,2.967,445,3.313,449,2.93,455,2.229,462,2.374,463,2.229,464,2.621,476,1.149,477,1.21,478,1.149,479,1.149,480,1.692,481,1.531,482,0.991,483,1.609,484,1.04,485,1.149,486,1.093,499,2.245,500,2.107,519,2.015,526,1.725,544,0.859,545,1.391,546,1.391,547,0.944,548,0.944,549,0.944,550,0.782,551,0.944,552,0.746,553,1.502,554,1.391,555,0.746,556,0.481,557,0.944,558,0.746,559,1.391,560,0.782,561,0.901,562,0.746,563,1.207,564,0.944,565,1.439,566,0.944,567,0.746,568,0.944,569,0.746,570,0.746,571,0.944,572,0.746,573,1.391,574,0.782,575,0.901,576,0.944,577,0.746,578,0.944,579,0.746,580,0.859,581,0.746,582,0.859,583,0.944,584,0.746,585,0.82,586,0.944,587,0.944,664,4.127,673,5.162,768,5.152,817,3.258,829,2.478,833,2.213,1068,3.015,1072,1.725,1098,2.213,1099,1.612,1100,1.514,1137,2.818,1138,1.514,1150,2.818,1239,2.54,1240,1.725,1261,2.478,1268,2.213,1341,4.757,1434,2.478,1435,5.035,1436,4.242,1437,5.035,1438,5.035,1439,5.035,1440,5.035,1441,5.035,1442,4.778,1443,4.778,1444,5.554,1445,5.554,1446,5.554,1447,4.778,1448,3.884,1449,3.649,1450,4.242,1451,2.881,1452,4.242,1453,2.881,1454,2.881,1455,4.242,1456,2.881,1457,2.881,1458,2.881,1459,2.881,1460,2.881,1461,2.881,1462,2.881,1463,3.649,1464,2.881,1465,4.242,1466,2.881,1467,2.881,1468,2.881,1469,2.881,1470,2.881,1471,2.881,1472,2.881,1473,2.881,1474,2.881,1475,2.881,1476,4.331,1477,2.881,1478,5.554,1479,4.242,1480,2.881,1481,5.035,1482,2.967,1483,2.881,1484,5.035,1485,4.242,1486,2.881,1487,4.242,1488,2.015,1489,2.881,1490,2.015,1491,2.881,1492,2.881,1493,5.093,1494,2.881,1495,2.478,1496,2.881,1497,4.242,1498,5.035,1499,2.881,1500,2.881,1501,2.881,1502,2.881,1503,2.881,1504,2.881,1505,2.881,1506,4.242,1507,5.554,1508,5.554,1509,5.554,1510,2.015,1511,2.015]],["title/components/ListInterestComponent.html",[220,0.444,567,0.963]],["body/components/ListInterestComponent.html",[0,0.034,3,0.098,4,0.086,5,0.086,7,0.421,8,0.965,9,0.745,11,0.683,13,0.745,16,0.086,17,0.278,20,0.872,21,1.536,25,0.615,26,0.585,28,0.288,29,0.019,31,0.387,35,1.184,38,1.197,47,2.574,62,0.098,63,0.621,68,1.273,71,0.957,75,2.153,87,0.005,88,0.008,89,0.005,108,0.474,118,0.862,122,0.658,124,1.817,127,1.27,128,1.681,134,1.151,136,0.793,139,1.288,140,3.2,144,0.826,148,1.042,152,1.48,156,1.649,159,0.673,166,1.071,171,1.369,176,1.001,177,0.953,179,1.102,182,0.683,183,0.237,206,1.53,208,0.843,210,1.584,213,0.913,220,0.518,221,0.585,222,1.102,223,0.74,224,0.74,225,0.74,226,0.74,230,1.003,231,1.492,232,0.74,233,2.323,234,2.113,235,1.156,237,1.156,245,3.766,246,1.686,248,3.015,250,2.753,252,2.558,253,3.015,255,1.853,256,1.561,257,2.914,258,1.853,259,2.429,261,2.771,265,1.745,266,2.495,267,1.645,268,2.421,269,1.745,270,1.745,271,1.745,272,2.292,273,2.17,274,1.561,275,1.562,276,1.973,277,1.745,278,1.973,281,2.126,284,2.789,287,1.649,288,1.649,289,1.649,290,1.745,291,1.745,294,2.292,295,1.273,296,1.886,301,2.111,302,1.352,312,1.973,320,1.973,322,1.955,323,1.406,326,1.649,331,1.118,338,3.015,339,1.859,341,2.848,342,2.848,343,3.154,345,1.118,346,1,348,1.352,349,0.856,360,0.856,361,2.279,362,1.352,369,1.444,371,2.272,372,2.147,373,2.233,374,1.771,375,1,405,1.735,406,1.735,407,3.766,415,2.711,435,2.821,445,2.976,449,2.632,455,1.92,462,1.973,463,1.853,464,2.354,476,0.901,477,0.948,478,0.901,479,0.901,480,1.406,481,1.273,482,0.777,483,1.337,484,0.815,485,0.901,486,0.856,499,2.017,500,1.859,519,1.579,526,1.352,528,2.744,544,0.673,545,1.156,546,1.156,547,0.74,548,0.74,549,0.74,550,0.613,551,0.74,552,0.585,553,1.294,554,1.156,555,0.585,556,0.377,557,0.74,558,0.585,559,1.156,560,0.613,561,0.706,562,0.585,563,1.003,564,0.74,565,0.585,566,0.74,567,1.525,568,0.74,569,0.585,570,0.585,571,0.74,572,0.585,573,1.156,574,0.613,575,0.706,576,0.74,577,0.585,578,0.74,579,0.585,580,0.673,581,0.585,582,0.673,583,0.74,584,0.585,585,0.642,586,0.74,587,0.74,664,3.926,679,4.986,824,1.745,900,2.272,904,3.632,908,3.632,1068,2.597,1072,1.352,1098,1.735,1099,1.264,1100,1.186,1137,2.744,1138,1.186,1150,2.428,1239,2.111,1240,1.352,1268,1.735,1296,1.745,1311,2.708,1312,2.708,1318,3.429,1319,2.708,1332,1.735,1341,4.594,1442,4.217,1443,4.217,1447,4.217,1448,3.429,1449,3.033,1463,3.033,1476,3.731,1482,2.466,1488,1.579,1490,1.579,1495,1.942,1510,1.579,1511,1.579,1512,1.942,1513,4.338,1514,3.526,1515,4.338,1516,4.338,1517,4.338,1518,4.338,1519,4.338,1520,4.902,1521,4.902,1522,1.942,1523,3.526,1524,2.466,1525,2.708,1526,2.258,1527,2.258,1528,2.258,1529,2.466,1530,2.708,1531,3.526,1532,2.258,1533,2.258,1534,2.258,1535,2.258,1536,2.258,1537,2.258,1538,2.258,1539,2.258,1540,2.258,1541,2.258,1542,2.258,1543,4.902,1544,2.258,1545,2.258,1546,2.258,1547,2.258,1548,2.258,1549,3.526,1550,2.258,1551,4.338,1552,2.258,1553,3.526,1554,2.258,1555,3.526,1556,2.258,1557,2.258,1558,2.258,1559,4.574,1560,1.942,1561,2.258,1562,4.338,1563,2.258,1564,2.258,1565,2.258,1566,2.258,1567,2.258,1568,2.258,1569,3.526,1570,3.526,1571,4.902,1572,4.902,1573,4.902]],["title/components/ListUserComponent.html",[220,0.444,569,0.963]],["body/components/ListUserComponent.html",[0,0.041,3,0.118,4,0.103,5,0.103,7,0.582,8,0.857,9,0.784,11,0.546,13,0.773,16,0.103,17,0.321,25,0.569,26,0.582,28,0.239,29,0.019,31,0.332,35,1.18,38,1.218,62,0.118,63,0.819,68,1.47,71,1.106,73,0.643,75,1.401,83,1.159,87,0.006,88,0.01,89,0.006,108,0.547,118,0.951,122,0.655,123,1.055,124,1.928,127,1.055,134,1.239,136,1.216,139,1.051,144,0.618,148,1.123,152,1.71,159,0.813,166,1.216,171,1.513,176,0.557,177,0.53,179,0.916,182,0.754,183,0.287,187,1.275,206,1.795,208,0.53,210,1.611,213,0.706,220,0.582,221,0.706,222,1.273,223,0.894,224,0.894,225,0.894,226,0.894,230,1.159,231,1.676,232,0.894,233,2.391,234,2.175,235,1.335,237,1.335,246,1.86,251,2.715,252,2.715,253,3.2,256,2.394,259,2.815,262,2.14,263,2.016,264,2.14,265,2.016,266,2.687,267,1.849,268,2.224,269,2.016,270,2.016,271,2.016,272,2.528,273,2.394,274,1.803,275,1.587,276,2.279,277,2.016,278,2.279,281,1.81,287,1.904,288,1.904,289,1.904,290,2.016,291,2.016,294,2.528,295,1.47,296,1.538,312,2.279,322,2.156,323,2.421,326,1.904,331,1.35,334,2.14,349,1.034,359,1.034,360,1.034,363,1.207,364,1.145,365,1.207,366,1.207,367,1.145,368,1.207,369,1.708,374,1.648,375,1.207,435,2.715,445,2.279,449,2.016,455,1.207,462,1.526,463,1.433,464,1.803,476,1.087,477,1.145,478,1.087,479,1.087,480,1.624,481,1.47,482,1.401,483,1.545,484,1.47,485,1.087,486,1.034,488,1.207,490,1.904,491,2.016,492,2.14,499,1.034,500,1.545,508,1.35,511,1.207,526,1.633,544,0.813,545,1.335,546,1.335,547,0.894,548,0.894,549,0.894,550,0.74,551,0.894,552,0.706,553,1.454,554,1.335,555,0.706,556,1.205,557,0.894,558,0.706,559,1.335,560,0.74,561,0.852,562,0.706,563,1.159,564,0.894,565,0.706,566,0.894,567,0.706,568,0.894,569,1.63,570,0.706,571,0.894,572,0.706,573,1.335,574,0.74,575,0.852,576,0.894,577,0.706,578,0.894,579,0.706,580,0.813,581,0.706,582,0.813,583,0.894,584,0.706,585,1.159,586,0.894,587,0.894,664,4.167,681,4.399,781,2.452,789,1.207,790,1.034,791,1.207,824,2.016,900,2.625,908,2.625,997,1.207,1012,1.676,1015,3.113,1017,3.872,1019,3.52,1027,1.904,1033,1.757,1034,2.346,1039,2.016,1040,1.35,1068,1.633,1072,1.633,1092,1.907,1099,1.526,1100,1.433,1113,2.095,1116,4.193,1117,3.503,1121,2.095,1123,2.439,1124,2.439,1125,2.279,1126,2.14,1127,2.279,1137,2.279,1138,1.433,1145,1.907,1148,2.439,1150,1.526,1239,1.633,1240,1.633,1291,2.279,1294,2.625,1296,2.413,1341,4.054,1362,2.848,1388,2.095,1482,1.907,1488,1.907,1490,1.907,1510,3.781,1511,1.907,1524,2.848,1525,3.128,1529,2.848,1530,3.128,1574,4.193,1575,4.193,1576,4.072,1577,3.128,1578,4.072,1579,4.072,1580,2.727,1581,4.072,1582,2.727,1583,3.128,1584,4.072,1585,2.727,1586,4.651,1587,3.503,1588,4.651,1589,3.503,1590,2.727,1591,2.095,1592,2.346,1593,4.153,1594,2.727,1595,2.727,1596,4.874,1597,2.727,1598,4.651,1599,2.727,1600,2.727,1601,2.727,1602,2.727,1603,2.727,1604,2.727,1605,2.727,1606,2.727,1607,4.072,1608,3.503,1609,3.503,1610,3.503,1611,4.072,1612,3.503,1613,2.346,1614,4.072,1615,2.727,1616,4.072,1617,2.346,1618,2.727,1619,2.727,1620,3.503,1621,2.346]],["title/injectables/LocalStorageService.html",[103,0.499,781,1.411]],["body/injectables/LocalStorageService.html",[0,0.06,3,0.171,4,0.15,5,0.15,7,0.632,8,0.839,9,0.783,11,0.852,13,0.628,16,0.15,25,0.52,26,0.632,28,0.193,29,0.019,30,1,31,0.383,35,1.295,36,4.905,38,1.067,62,0.171,63,0.949,71,1.734,73,1.7,87,0.009,88,0.013,89,0.009,103,0.711,105,1.358,108,0.711,109,2.48,118,1.051,122,0.711,123,1.868,134,1.511,139,0.767,144,0.923,146,1.736,166,1.123,171,0.888,179,1.191,182,0.594,183,0.415,195,0.976,201,1.574,202,1.497,203,2.074,206,1.438,208,1.241,274,1.748,275,1.506,296,1.817,312,2.964,320,3.837,328,5.116,342,2.986,344,3.574,374,1.734,781,2.266,790,2.7,853,3.704,893,4.116,894,4.116,905,2.209,1012,2.196,1114,3.824,1125,2.209,1126,3.74,1127,2.209,1263,4.637,1291,2.986,1318,3.704,1622,5.468,1623,3.032,1624,5.295,1625,6.386,1626,6.386,1627,6.386,1628,5.493,1629,5.295,1630,3.948,1631,5.295,1632,3.948,1633,5.295,1634,5.295,1635,3.948,1636,3.948,1637,3.948,1638,3.948,1639,5.295,1640,5.295,1641,3.948,1642,3.948,1643,3.396,1644,3.396,1645,3.396,1646,3.032,1647,3.396,1648,3.948,1649,3.948,1650,3.948,1651,3.948,1652,5.295,1653,6.386,1654,5.295,1655,3.948,1656,3.948,1657,3.948]],["title/components/LoginComponent.html",[220,0.444,570,0.963]],["body/components/LoginComponent.html",[0,0.039,3,0.11,4,0.096,5,0.096,7,0.461,8,1.003,9,0.783,11,0.764,13,0.77,16,0.096,17,0.304,25,0.513,26,0.461,28,0.256,29,0.019,30,0.581,31,0.361,35,1.325,38,1.199,62,0.11,63,0.864,68,1.885,73,1.394,83,1.486,87,0.006,88,0.009,89,0.006,108,0.519,118,0.918,122,0.519,123,1.353,124,2.005,127,1.002,128,1.764,134,1.293,136,0.869,139,1.15,144,0.712,148,0.966,166,1.246,171,1.593,176,0.955,177,0.909,179,1.174,182,0.727,183,0.268,195,0.629,206,1.761,208,0.495,210,1.231,213,0.659,220,0.623,221,0.659,222,1.209,223,0.835,224,0.835,225,0.835,226,0.835,230,1.1,231,1.608,232,0.835,233,2.367,234,2.153,235,1.268,237,1.268,241,3.27,246,1.796,248,3.134,251,2.659,252,2.659,253,3.134,255,2.032,256,1.712,257,2.78,258,2.032,259,2.779,262,2.032,263,1.914,264,2.032,265,1.914,266,2.312,267,1.774,268,2.178,269,1.914,270,1.914,271,2.927,272,1.808,273,1.712,274,2.312,275,1.559,276,2.923,277,1.914,278,2.164,280,2.316,281,1.833,282,2.705,284,2.927,285,2.164,286,2.164,287,1.808,288,1.808,289,1.808,290,1.914,291,1.914,292,2.492,294,1.808,295,1.885,296,1.683,318,2.97,320,2.164,322,2.358,323,2.358,331,1.914,339,0.965,341,1.808,342,2.765,345,1.26,346,1.127,349,0.965,356,1.955,359,0.965,360,0.965,363,1.127,364,1.069,365,1.127,366,1.127,367,1.069,368,1.127,369,1.719,371,1.641,372,1.914,374,1.525,415,1.865,434,2.705,435,2.358,436,1.78,437,1.78,439,1.78,441,1.78,455,1.127,476,1.015,477,1.963,478,1.015,479,1.015,480,1.015,481,1.688,482,0.875,483,1.467,484,1.396,485,1.865,486,0.965,490,1.19,491,1.26,492,2.032,493,3.653,494,2.486,495,1.808,496,2.315,497,1.963,499,1.467,500,1.981,509,2.164,511,1.127,528,2.164,544,0.759,545,1.268,546,1.268,547,0.835,548,0.835,549,0.835,550,0.691,551,0.835,552,0.659,553,1.395,554,1.268,555,0.659,556,0.872,557,0.835,558,0.659,559,1.268,560,0.691,561,0.796,562,0.659,563,1.1,564,0.835,565,0.659,566,0.835,567,0.659,568,0.835,569,0.659,570,1.592,571,0.835,572,0.659,573,1.268,574,0.691,575,0.796,576,0.835,577,0.659,578,0.835,579,0.659,580,0.759,581,0.659,582,0.759,583,0.835,584,0.659,585,0.724,586,0.835,587,0.835,616,2.923,709,1.955,758,3.62,762,2.492,781,2.402,788,4.012,789,1.127,790,0.965,791,1.127,794,3.439,808,2.97,847,4.012,877,1.78,891,2.705,893,2.492,894,2.492,903,2.492,997,1.127,1001,1.641,1012,1.932,1027,1.808,1043,1.955,1071,1.955,1096,1.78,1114,2.316,1123,2.316,1124,2.316,1125,2.164,1126,2.032,1127,2.164,1140,3.326,1167,2.19,1206,1.78,1239,2.316,1240,2.316,1291,2.442,1298,2.923,1336,1.641,1338,2.19,1390,1.78,1433,1.955,1448,3.653,1529,2.705,1593,1.955,1658,2.19,1659,4.676,1660,3.867,1661,4.676,1662,4.676,1663,5.222,1664,4.492,1665,3.867,1666,2.545,1667,5.222,1668,3.867,1669,2.97,1670,2.545,1671,3.867,1672,3.326,1673,2.545,1674,3.326,1675,2.545,1676,3.867,1677,3.867,1678,3.867,1679,3.867,1680,2.545,1681,3.867,1682,3.867,1683,3.326,1684,3.867,1685,3.867,1686,2.545,1687,3.867,1688,5.222,1689,3.867,1690,2.545,1691,3.326,1692,4.314,1693,3.326,1694,2.545,1695,4.676,1696,2.545,1697,2.19,1698,3.867,1699,2.545,1700,2.545,1701,2.19,1702,2.545,1703,2.545,1704,3.867,1705,2.545,1706,2.545,1707,2.545,1708,2.545,1709,3.867,1710,2.19,1711,3.867,1712,3.867,1713,3.867,1714,3.867,1715,3.326,1716,2.545]],["title/components/MapComponent.html",[220,0.444,572,0.963]],["body/components/MapComponent.html",[0,0.069,3,0.198,4,0.173,5,0.173,16,0.173,17,0.459,25,0.573,29,0.019,31,0.369,62,0.198,87,0.011,88,0.014,89,0.011,108,0.783,118,1.129,144,0.739,182,0.654,183,0.481,195,1.131,210,1.594,213,1.185,220,0.766,221,1.185,222,1.823,223,1.5,224,1.5,225,1.5,226,1.5,230,1.659,231,2.208,232,1.5,233,2.535,234,2.306,235,1.912,237,1.912,246,2.325,296,1.924,350,3.199,351,2.948,369,1.938,374,1.836,375,3.252,377,3.199,378,2.739,379,3.199,380,3.199,381,3.199,382,3.199,383,3.199,477,1.921,482,2.006,484,2.105,494,2.025,495,2.139,497,1.921,509,2.56,544,1.364,545,1.912,546,1.912,547,1.5,548,1.5,549,1.5,550,1.242,551,1.5,552,1.185,553,1.914,554,1.912,555,1.185,556,0.764,557,1.5,558,1.185,559,1.912,560,1.242,561,1.43,562,1.185,563,1.659,564,1.5,565,1.185,566,1.5,567,1.185,568,1.5,569,1.185,570,1.185,571,1.5,572,1.751,573,1.912,574,1.242,575,1.43,576,1.5,577,1.185,578,1.5,579,1.185,580,1.364,581,1.185,582,1.364,583,1.5,584,1.185,585,1.302,586,1.5,587,1.5,617,3.199,960,2.839,997,2.025,1096,3.199,1104,2.948,1107,3.514,1414,3.935,1717,3.935,1718,5.522,1719,5.016,1720,6.76,1721,5.831,1722,4.574,1723,4.574,1724,4.574,1725,3.935,1726,4.574,1727,3.935,1728,3.935,1729,3.935,1730,3.935,1731,4.574,1732,4.574,1733,4.574,1734,4.574,1735,4.574]],["title/components/MenuBarComponent.html",[220,0.444,574,1.01]],["body/components/MenuBarComponent.html",[0,0.043,3,0.123,4,0.107,5,0.107,7,0.5,8,0.873,9,0.767,11,0.733,13,0.747,16,0.107,17,0.33,25,0.578,26,0.5,28,0.288,29,0.019,30,0.957,31,0.365,35,0.97,38,1.24,62,0.123,63,0.884,68,1.513,83,0.807,87,0.007,88,0.01,89,0.007,108,0.563,109,1.715,118,0.969,122,0.563,123,1.086,124,2.026,127,1.086,128,1.25,134,1.257,139,1.143,144,0.632,148,1.178,166,1.25,171,1.239,176,0.579,177,0.551,182,0.69,183,0.298,206,1.597,210,1.299,213,0.734,220,0.595,221,0.734,222,1.311,223,0.929,224,0.929,225,0.929,226,0.929,230,1.193,231,1.715,232,0.929,233,2.404,234,2.187,235,1.374,237,1.374,246,1.895,251,2.675,252,2.469,259,2.664,262,2.203,263,2.075,264,2.203,265,2.469,266,2.82,267,2.09,268,2.611,269,2.469,270,2.469,271,3.047,272,1.96,273,1.856,275,1.299,281,1.25,296,1.673,322,1.672,323,1.672,339,1.075,341,1.96,342,1.96,344,2.346,349,1.075,359,1.075,360,1.075,363,1.255,364,1.19,365,1.255,366,1.255,367,1.19,368,1.255,369,1.354,374,1.496,415,1.989,477,1.19,481,1.024,483,1.075,486,1.075,490,1.326,491,1.403,495,1.326,496,2.075,497,1.19,499,1.075,500,1.075,508,2.075,511,2.208,541,2.987,544,0.845,545,1.374,546,1.374,547,0.929,548,0.929,549,0.929,550,0.77,551,0.929,552,0.734,553,1.488,554,1.374,555,0.734,556,0.7,557,0.929,558,0.734,559,1.374,560,0.77,561,0.886,562,0.734,563,1.568,564,0.929,565,0.734,566,0.929,567,0.734,568,0.929,569,0.734,570,0.734,571,0.929,572,0.734,573,1.374,574,1.73,575,2.088,576,0.929,577,0.734,578,0.929,579,0.734,580,1.488,581,0.734,582,0.845,583,0.929,584,0.734,585,0.807,586,0.929,587,0.929,592,4.233,593,4.741,600,2.439,601,2.439,643,5.219,765,1.827,768,3.22,780,2.178,781,2.48,789,1.255,790,1.075,791,1.255,792,1.698,852,2.178,853,2.932,869,1.698,960,1.76,997,1.856,1012,2.191,1027,1.96,1043,3.22,1099,1.587,1100,1.49,1104,1.827,1114,4.176,1123,2.51,1124,2.51,1125,2.346,1126,2.203,1127,2.346,1148,1.698,1189,3.606,1274,2.439,1291,3.123,1336,1.827,1383,3.606,1390,1.983,1394,2.439,1413,2.439,1424,2.178,1429,2.178,1575,3.606,1583,3.22,1628,4.741,1691,3.606,1692,4.233,1710,2.439,1736,5.844,1737,2.439,1738,4.988,1739,4.988,1740,4.192,1741,4.988,1742,4.988,1743,4.192,1744,4.192,1745,4.192,1746,4.192,1747,4.192,1748,4.192,1749,2.835,1750,4.192,1751,4.192,1752,4.192,1753,4.192,1754,2.835,1755,4.192,1756,2.835,1757,4.192,1758,5.511,1759,4.192,1760,4.192,1761,2.835,1762,4.192,1763,2.835,1764,4.192,1765,2.835,1766,2.835,1767,2.835,1768,2.835,1769,2.835,1770,4.192,1771,4.988,1772,2.835,1773,2.835,1774,6.974,1775,4.192,1776,4.192,1777,4.192,1778,4.192,1779,4.192,1780,2.835,1781,2.439,1782,2.835,1783,2.835,1784,6.37,1785,4.988,1786,6.54,1787,2.835,1788,2.835,1789,2.835,1790,2.835,1791,4.192,1792,2.835,1793,2.835]],["title/injectables/MockActivityService.html",[103,0.499,1794,2.857]],["body/injectables/MockActivityService.html",[0,0.033,1,2.313,3,0.094,4,0.082,5,0.082,7,0.84,9,0.65,11,0.817,13,0.786,15,2.861,16,0.129,17,0.269,18,3.929,19,2.617,20,1.77,21,1.406,22,3.929,23,3.929,24,5.041,25,0.716,26,0.804,27,5.041,28,0.235,29,0.019,30,0.326,31,0.387,35,1.014,38,1.258,45,1.631,58,1.819,62,0.094,63,0.907,65,4.589,70,5.041,71,1.752,73,1.622,75,2.257,76,1.14,78,1.796,81,3.876,86,3.876,87,0.005,88,0.008,89,0.005,92,3.46,103,0.459,104,3.068,105,0.746,107,2.94,108,0.459,109,2.366,110,3.355,111,4.126,112,3.355,113,4.989,114,4.126,115,4.126,116,4.126,117,4.126,122,0.905,123,1.095,127,1.557,129,2.014,132,3.637,134,1.227,135,2.523,136,1.618,137,2.523,138,1.796,139,1.168,140,1.796,141,2.532,142,2.957,143,1.14,144,0.872,145,2.964,146,2.075,147,2.81,148,1.231,149,3.637,151,1.14,152,0.911,153,3.637,155,1.14,156,1.015,157,1.14,159,1.261,160,2.222,161,3.637,163,1.867,165,1.667,166,0.918,167,3.637,168,3.637,170,1.667,171,0.488,172,3.637,174,2.391,175,2.94,176,0.979,177,0.933,178,1.867,179,0.488,180,0.711,181,0.911,182,0.538,183,0.228,188,0.647,191,1.3,195,1.045,208,1.168,295,1.732,306,2.685,343,2.685,374,0.928,378,2.047,457,3.355,528,1.215,556,0.362,1191,2.568,1192,3.325,1195,2.626,1346,3.637,1374,1.867,1794,2.626,1795,5.645,1796,3.672,1797,1.215,1798,4.228,1799,4.228,1800,2.17,1801,2.17,1802,2.17,1803,2.17,1804,2.17,1805,3.418,1806,2.17,1807,2.17,1808,2.17,1809,2.17,1810,2.17,1811,2.17,1812,2.17,1813,2.17,1814,2.17,1815,2.17,1816,2.17,1817,6.562,1818,6.009,1819,6.009,1820,6.345,1821,4.797,1822,4.797,1823,6.009,1824,4.797,1825,4.797,1826,4.797,1827,4.797,1828,4.797,1829,4.797,1830,4.797,1831,4.797,1832,6.009,1833,4.797,1834,4.797,1835,6.009,1836,6.329,1837,6.329,1838,6.562,1839,6.562,1840,6.562,1841,4.797,1842,4.797,1843,4.797,1844,4.797,1845,4.797,1846,4.797,1847,4.797,1848,4.797,1849,4.797,1850,4.797,1851,4.797,1852,4.797,1853,4.797,1854,6.009,1855,4.797,1856,4.797,1857,4.797,1858,4.797,1859,6.009,1860,4.797,1861,4.797,1862,4.797,1863,5.542,1864,1.667,1865,3.418,1866,3.418,1867,3.418,1868,3.418,1869,3.418,1870,4.797,1871,3.418,1872,3.418,1873,3.418,1874,2.17,1875,3.418,1876,3.418,1877,2.17,1878,2.17,1879,2.17,1880,2.17,1881,2.17,1882,2.626,1883,3.355,1884,1.867,1885,2.17,1886,2.17,1887,1.667,1888,2.17,1889,2.17,1890,2.17,1891,2.17,1892,2.17,1893,2.17,1894,2.17,1895,2.17,1896,1.867,1897,2.17,1898,2.17,1899,2.17,1900,2.17,1901,2.17,1902,1.667,1903,2.17,1904,2.17,1905,2.17,1906,2.94,1907,2.17,1908,2.17,1909,2.17,1910,2.17,1911,2.17,1912,2.17,1913,2.17,1914,2.17,1915,2.17,1916,2.17,1917,2.17,1918,2.17,1919,2.17,1920,2.17,1921,2.17,1922,2.17,1923,2.17]],["title/injectables/MockAuthService.html",[103,0.499,1924,2.857]],["body/injectables/MockAuthService.html",[0,0.071,3,0.205,4,0.179,5,0.179,7,0.71,9,0.756,11,0.667,16,0.179,17,0.468,25,0.672,26,0.816,28,0.345,29,0.019,30,0.709,31,0.385,35,1.156,38,1.22,62,0.205,63,0.825,71,1.856,78,3.125,87,0.011,88,0.014,89,0.011,92,3.645,103,0.799,105,1.623,108,0.799,109,2.352,122,0.918,123,1.541,127,1.541,134,1.214,135,2.497,136,1.337,137,2.497,138,3.125,139,1.156,143,3.125,144,0.866,145,2.974,146,1.95,147,2.781,148,1.1,166,1.285,171,1.061,176,0.963,177,0.917,179,1.061,180,1.547,181,1.981,182,0.79,183,0.496,186,3.365,187,2.207,188,1.407,189,2.641,190,3.3,208,1.266,281,1.407,295,1.704,556,1.142,758,4.407,762,4.407,794,4.028,796,5.116,798,5.602,800,5.116,801,2.826,802,5.602,803,3.562,805,3.3,806,4.059,807,4.059,1263,3.561,1598,4.059,1796,3.645,1797,2.641,1864,3.625,1924,4.569,1925,5.602,1926,4.719,1927,4.719,1928,4.719,1929,4.719,1930,4.719,1931,4.059,1932,4.059,1933,4.719,1934,4.719,1935,4.719,1936,4.719,1937,4.719]],["title/injectables/MockCityService.html",[103,0.499,1938,2.857]],["body/injectables/MockCityService.html",[0,0.06,3,0.171,4,0.149,5,0.149,7,0.712,9,0.72,11,0.715,13,0.67,16,0.2,17,0.416,19,2.904,20,1.8,25,0.727,26,0.817,28,0.259,29,0.019,30,0.591,31,0.398,35,0.765,38,1.269,40,4.511,45,1.231,47,1.422,62,0.171,63,0.499,71,1.9,78,2.778,87,0.009,88,0.013,89,0.009,92,3.724,103,0.71,105,1.354,108,0.71,109,2.447,122,0.92,123,1.546,127,1.653,129,1.653,134,1.302,135,2.679,136,1.574,137,2.679,138,2.069,139,1.24,140,2.069,141,3.166,143,2.069,144,0.901,145,3.022,146,2.181,147,2.983,148,1.18,151,2.069,152,2.22,155,2.069,156,1.841,157,2.069,159,1.174,176,1.079,177,1.028,179,0.885,180,1.291,181,1.653,182,0.715,183,0.414,188,1.174,195,1.307,208,1.24,249,3.738,260,2.754,295,2.155,343,3.34,374,1.435,457,4.174,814,4.547,815,5.487,816,5.487,817,4.9,818,6.021,820,5.134,822,5.134,824,1.949,825,5.134,828,3.387,833,3.025,1191,2.642,1192,2.778,1493,4.547,1796,3.834,1797,2.204,1820,4.547,1882,3.025,1883,4.174,1884,3.387,1887,3.025,1896,3.387,1902,3.025,1906,4.547,1938,4.061,1939,5.893,1940,5.968,1941,3.937,1942,3.937,1943,3.937,1944,3.937,1945,3.937,1946,3.937,1947,3.937,1948,3.937,1949,5.286,1950,3.387,1951,3.937,1952,3.937,1953,3.937,1954,3.937,1955,3.937,1956,3.937,1957,3.937,1958,3.937,1959,3.937,1960,3.937,1961,3.937,1962,3.937,1963,3.937,1964,3.937]],["title/injectables/MockInterestService.html",[103,0.499,1965,2.857]],["body/injectables/MockInterestService.html",[0,0.057,3,0.163,4,0.143,5,0.143,7,0.747,9,0.727,11,0.8,12,2.696,13,0.75,15,1.58,16,0.194,17,0.403,20,1.801,21,1.547,25,0.68,26,0.825,28,0.251,29,0.019,30,0.565,31,0.398,35,0.731,38,1.248,45,1.602,47,2.631,62,0.163,63,0.793,71,1.911,78,2.693,83,1.07,87,0.009,88,0.012,89,0.009,92,3.783,103,0.688,105,1.294,108,0.688,109,2.483,122,0.929,123,1.51,127,1.697,129,2.152,134,1.337,135,2.751,136,1.473,137,2.751,138,1.976,139,1.273,140,1.976,143,1.976,144,0.905,145,3.026,146,2.216,147,3.063,148,1.25,151,1.976,152,2.152,155,1.976,156,1.759,157,1.976,159,1.122,166,0.901,176,1.047,177,0.996,179,0.846,180,1.233,181,1.58,182,0.758,183,0.395,187,1.759,188,1.122,195,1.267,208,1.217,250,3.338,261,1.665,275,0.887,281,1.867,295,2.105,316,2.631,343,3.263,373,2.838,374,1.392,794,2.105,803,1.862,824,1.862,1191,2.581,1192,2.693,1302,2.253,1303,2.253,1304,1.976,1309,4.409,1310,5.386,1311,4.809,1312,4.809,1313,4.409,1314,5.95,1316,5.015,1318,3.585,1319,4.479,1321,5.015,1323,3.236,1326,3.236,1327,2.425,1332,2.89,1393,4.409,1397,4.409,1559,4.409,1796,3.783,1797,2.105,1882,2.89,1883,4.078,1887,2.89,1902,2.89,1931,3.236,1965,3.937,1966,5.815,1967,5.015,1968,3.236,1969,3.762,1970,3.762,1971,3.762,1972,3.762,1973,3.762,1974,3.762,1975,3.762,1976,3.762,1977,3.762,1978,3.762,1979,3.762,1980,3.762,1981,3.762,1982,3.762,1983,3.762,1984,3.762,1985,3.236,1986,3.762,1987,3.762,1988,3.762,1989,3.762,1990,5.126,1991,3.762,1992,3.762]],["title/injectables/MockRolService.html",[103,0.499,1993,2.857]],["body/injectables/MockRolService.html",[0,0.079,3,0.225,4,0.197,5,0.197,9,0.547,13,0.664,16,0.197,17,0.497,20,1.749,28,0.309,29,0.019,30,0.781,31,0.387,38,1.055,62,0.225,63,0.659,78,3.318,87,0.012,88,0.015,89,0.012,92,3.535,103,0.848,105,1.789,108,0.848,109,2.172,129,2.184,134,1.062,135,2.184,136,1.169,137,2.184,139,1.011,144,0.8,145,2.822,159,1.551,176,1.29,177,1.228,179,1.169,180,1.705,181,2.184,182,0.793,183,0.547,188,1.551,208,1.011,275,1.226,1012,2.433,1017,4.341,1027,2.432,1032,3.995,1191,2.796,1192,3.318,1304,2.732,1796,3.807,1797,2.91,1864,3.995,1993,4.852,1994,5.852,1995,5.433,1996,6.416,1997,5.2,1998,5.2,1999,6.086,2000,5.433,2001,5.433,2002,4.474,2003,5.2,2004,5.2,2005,5.2]],["title/injectables/MockUserService.html",[103,0.499,2006,2.857]],["body/injectables/MockUserService.html",[0,0.054,3,0.153,4,0.134,5,0.134,7,0.728,9,0.673,11,0.778,13,0.516,16,0.134,17,0.387,20,1.832,21,1.053,25,0.682,26,0.828,28,0.276,29,0.019,30,0.531,31,0.4,35,0.687,38,1.231,45,1.906,62,0.153,63,0.812,71,1.847,73,0.834,78,2.58,87,0.008,88,0.012,89,0.008,92,3.712,103,0.66,105,1.216,108,0.66,109,2.453,122,0.932,123,0.916,127,1.66,129,2.37,134,1.308,135,2.691,136,1.441,137,2.691,139,1.246,144,0.904,145,3.024,146,2.174,147,2.996,148,1.185,151,1.857,152,1.484,155,1.857,156,1.653,157,1.857,159,1.054,166,1.267,176,1.152,177,1.097,179,0.795,180,1.159,181,1.484,182,0.684,183,0.372,187,1.653,188,1.054,198,2.174,208,1.246,281,1.819,295,1.773,316,2.473,343,2.749,364,2.062,373,2.561,556,1.176,765,3.93,960,2.561,1012,2.281,1015,3.486,1019,1.979,1039,3.283,1040,3.283,1047,2.716,1156,4.265,1159,3.018,1166,3.041,1191,2.7,1192,3.204,1291,3.101,1296,1.75,1400,4.225,1577,4.684,1591,2.716,1609,3.041,1610,3.041,1796,3.882,1797,1.979,1883,2.473,1932,5.246,1950,3.041,1968,3.041,2000,5.246,2001,5.705,2006,3.773,2007,5.967,2008,5.643,2009,4.225,2010,5.246,2011,5.246,2012,5.246,2013,5.852,2014,4.855,2015,3.535,2016,4.855,2017,3.535,2018,4.855,2019,3.535,2020,4.855,2021,3.535,2022,3.535,2023,3.535,2024,3.535,2025,3.535,2026,3.535,2027,3.535,2028,6.632,2029,6.632,2030,6.632,2031,4.911,2032,3.041,2033,4.911,2034,4.911,2035,3.041,2036,3.535,2037,3.535,2038,3.535,2039,3.535,2040,3.535,2041,3.535,2042,4.911,2043,3.535,2044,3.535,2045,3.535,2046,3.535,2047,3.535]],["title/injectables/NotificationService.html",[103,0.499,616,2.081]],["body/injectables/NotificationService.html",[0,0.073,3,0.209,4,0.183,5,0.183,7,0.577,8,0.957,9,0.725,11,0.773,13,0.787,16,0.183,17,0.475,25,0.475,26,0.577,28,0.295,29,0.019,30,1.087,31,0.377,35,0.939,38,1.152,62,0.209,73,1.423,83,1.718,87,0.011,88,0.014,89,0.011,103,0.811,105,1.662,108,0.811,118,1.158,122,0.649,134,1.408,136,1.357,139,1.341,141,3.615,144,0.765,166,0.85,171,1.086,176,0.987,177,0.939,182,0.738,183,0.508,201,1.927,202,1.833,203,2.539,206,1.639,252,2.029,256,2.672,267,1.833,274,2.915,277,2.392,295,2.179,296,1.962,334,3.804,349,1.833,360,1.833,435,3.118,447,3.712,448,5.057,449,3.583,464,3.053,616,3.685,1669,5.453,1672,6.228,2048,4.157,2049,6.896,2050,6.036,2051,4.832,2052,6.036,2053,6.036,2054,4.832,2055,6.036,2056,6.036,2057,4.832,2058,4.832,2059,4.832,2060,4.157]],["title/components/RecommendationComponent.html",[220,0.444,577,0.963]],["body/components/RecommendationComponent.html",[0,0.061,3,0.279,4,0.153,5,0.153,11,0.602,13,0.564,16,0.153,17,0.423,21,1.294,25,0.593,26,0.481,28,0.328,29,0.019,31,0.377,43,2.254,58,2.036,62,0.175,87,0.01,88,0.013,89,0.01,108,0.721,118,0.709,122,0.541,144,0.511,166,0.944,176,1.233,177,1.174,182,0.752,183,0.424,207,1.692,210,1.518,213,1.044,220,0.72,221,1.044,222,1.679,223,1.321,224,1.321,225,1.321,226,1.321,230,1.528,231,2.077,232,1.321,233,2.505,234,2.279,235,1.76,237,1.76,246,2.215,250,3.225,268,2.372,296,1.147,306,3.005,348,2.413,369,1.094,374,1.748,406,3.096,476,1.607,478,1.607,479,1.607,480,2.141,481,2.18,482,1.386,483,2.036,484,1.455,486,1.528,487,2.255,488,2.377,490,1.884,491,1.995,492,2.117,494,2.85,495,1.884,496,1.995,497,2.254,499,1.528,500,2.036,507,3.215,509,2.255,511,2.377,544,1.202,545,1.76,546,1.76,547,1.321,548,1.321,549,1.321,550,1.094,551,1.321,552,1.044,553,1.801,554,1.76,555,1.044,556,0.673,557,1.321,558,1.044,559,1.76,560,1.094,561,1.26,562,1.044,563,1.528,564,1.321,565,1.044,566,1.321,567,1.044,568,1.321,569,1.044,570,1.044,571,1.321,572,1.044,573,1.76,574,1.094,575,1.26,576,1.321,577,1.668,578,1.321,579,1.044,580,1.92,581,1.044,582,1.202,583,1.321,584,1.044,585,1.147,586,1.321,587,1.321,781,2.67,789,1.784,790,1.528,791,1.784,792,2.413,960,2.254,997,1.784,1058,2.597,1148,2.413,1206,2.819,1263,3.615,1327,2.597,1336,2.597,1522,3.467,1692,4.124,1967,5.769,1985,3.467,2061,3.467,2062,6.038,2063,5.369,2064,6.038,2065,6.038,2066,5.369,2067,4.03,2068,4.03,2069,4.03,2070,4.03,2071,4.03,2072,4.03,2073,4.03,2074,5.369,2075,5.369,2076,5.369,2077,5.369,2078,5.369,2079,5.369,2080,5.369,2081,5.369,2082,5.369,2083,5.369,2084,5.369,2085,4.03,2086,3.467,2087,5.369,2088,4.03,2089,4.03,2090,4.03]],["title/components/RecommendationMapComponent.html",[220,0.444,579,0.963]],["body/components/RecommendationMapComponent.html",[0,0.03,1,2.687,3,0.085,4,0.074,5,0.074,7,0.633,8,0.919,9,0.768,11,0.755,13,0.781,15,2.924,16,0.15,17,0.248,22,1.175,23,1.175,25,0.57,26,0.592,28,0.284,29,0.019,30,0.474,31,0.364,35,1.243,38,1.213,48,2.424,56,2.381,61,2.381,62,0.085,63,0.869,68,1.139,73,1.367,74,1.098,75,1.708,76,2.609,77,2.424,83,1.586,86,2.207,87,0.005,88,0.007,89,0.005,104,2.119,108,0.424,118,0.797,122,0.667,123,0.817,124,1.582,127,0.817,128,1.481,131,1.098,134,1.305,136,1.38,139,1.243,144,0.672,146,1.297,148,0.584,152,1.903,156,1.475,159,1.352,160,3.143,166,1.172,170,3.814,171,1.116,174,2.207,176,0.808,177,0.769,179,1.38,180,1.628,182,0.747,183,0.206,187,0.918,188,0.585,191,1.175,195,1.12,206,1.763,208,0.881,210,1.25,213,0.508,217,1.688,220,0.472,221,0.508,222,0.986,223,0.643,224,0.643,225,1.297,226,0.643,230,0.898,231,1.361,232,0.643,233,2.267,234,2.062,235,1.034,237,1.034,246,1.559,248,2.243,249,3.046,250,2.711,255,2.381,256,1.397,257,2.458,258,1.658,259,2.549,260,2.207,261,1.397,266,1.397,268,1.559,272,1.475,273,1.397,275,1.552,281,1.481,284,1.562,286,1.766,287,1.475,288,1.475,289,1.475,294,1.475,296,1.509,301,1.889,302,1.889,303,2.207,304,2.207,305,1.889,312,1.766,314,2.424,320,1.098,322,1.258,323,1.258,325,5.27,326,2.119,334,1.658,338,1.562,339,0.744,341,1.475,342,1.475,343,1.766,344,1.766,345,0.971,346,0.869,347,1.373,348,1.175,349,0.744,350,1.373,351,1.265,356,3.481,358,1.175,369,1.574,372,0.971,374,1.763,375,2.566,379,1.373,380,1.373,381,1.373,382,1.373,383,1.373,415,1.578,452,1.373,464,0.869,476,0.783,478,0.783,479,0.783,480,1.258,481,2.013,482,1.559,483,1.501,484,1.139,485,0.783,486,0.744,488,0.869,490,0.918,491,0.971,492,1.031,494,1.752,496,0.971,497,0.824,499,1.501,500,1.719,503,1.265,508,0.971,511,1.397,529,2.714,541,1.175,544,0.585,545,1.034,546,1.034,547,0.643,548,0.643,549,0.643,550,0.533,551,0.643,552,0.508,553,1.18,554,1.034,555,0.508,556,0.829,557,0.643,558,0.508,559,1.034,560,0.533,561,0.614,562,0.508,563,0.898,564,0.643,565,0.508,566,0.643,567,0.508,568,0.643,569,0.508,570,0.508,571,0.643,572,0.508,573,1.034,574,0.533,575,0.614,576,0.643,577,0.508,578,0.643,579,1.444,580,1.871,581,0.508,582,0.585,583,0.643,584,0.508,585,0.558,586,0.643,587,0.643,617,1.373,623,1.098,624,1.031,730,4.712,781,2.199,789,0.869,790,0.744,791,0.869,805,2.207,824,2.869,848,2.921,849,2.921,851,3.17,856,2.034,857,2.034,858,2.034,859,2.034,860,2.034,861,2.034,862,2.034,863,2.034,864,2.034,865,2.034,866,1.889,867,2.034,868,2.034,869,1.889,870,2.034,877,1.373,899,4.795,901,2.034,918,1.265,922,1.373,951,1.265,960,2.635,997,1.752,1015,2.869,1019,1.766,1033,1.265,1110,3.039,1114,3.338,1123,1.889,1124,1.889,1125,2.536,1126,1.658,1127,1.766,1137,2.214,1138,1.031,1145,1.373,1146,1.508,1147,1.508,1148,1.889,1150,1.766,1151,2.424,1191,2.006,1233,3.17,1234,2.207,1235,2.714,1236,2.207,1351,2.424,1359,2.424,1361,2.424,1362,2.207,1375,1.508,1376,1.508,1389,1.688,1390,1.373,1391,2.714,1419,3.404,1420,2.714,1424,2.424,1425,1.688,1426,1.688,1427,1.688,1428,2.714,1429,2.424,1430,1.688,1431,1.688,1432,1.688,1433,1.508,1524,2.207,1683,2.714,1718,3.404,1719,2.714,1725,1.688,1727,1.688,1728,1.688,1729,1.688,1730,1.688,1781,1.688,2091,5.795,2092,1.688,2093,3.957,2094,3.957,2095,3.957,2096,3.957,2097,3.957,2098,3.957,2099,3.957,2100,3.155,2101,3.155,2102,3.155,2103,4.532,2104,1.963,2105,5.797,2106,3.155,2107,3.957,2108,3.155,2109,3.155,2110,3.155,2111,1.963,2112,3.155,2113,3.155,2114,5.797,2115,3.155,2116,3.155,2117,4.532,2118,3.155,2119,3.155,2120,4.532,2121,1.963,2122,3.155,2123,3.155,2124,1.963,2125,2.714,2126,3.155,2127,6.14,2128,1.963,2129,3.155,2130,1.963,2131,1.963,2132,3.155,2133,3.155,2134,3.155,2135,1.963,2136,1.963,2137,3.155,2138,1.963,2139,1.963,2140,1.963,2141,1.963,2142,1.963,2143,1.963,2144,3.155,2145,1.963,2146,1.963,2147,1.963,2148,1.963,2149,1.963,2150,1.963,2151,1.963,2152,1.963,2153,3.155,2154,1.963,2155,1.963,2156,3.155,2157,3.155,2158,3.155,2159,3.155,2160,3.155,2161,4.532,2162,4.532,2163,3.155,2164,3.155,2165,3.155,2166,3.957,2167,3.155,2168,3.155,2169,3.155,2170,3.155,2171,1.963,2172,1.963,2173,1.963,2174,1.963,2175,1.963,2176,1.963,2177,3.155,2178,3.155,2179,1.963,2180,1.963,2181,1.963,2182,1.963,2183,1.963,2184,1.963,2185,1.963,2186,1.963,2187,1.963,2188,1.963,2189,1.963,2190,1.963,2191,1.963,2192,1.963,2193,1.963,2194,1.963,2195,1.963,2196,1.963,2197,1.963,2198,1.963,2199,3.155,2200,3.155,2201,3.155,2202,1.963,2203,1.963,2204,1.963,2205,1.963,2206,1.963,2207,1.963,2208,1.963,2209,1.688,2210,1.963,2211,1.963,2212,1.963,2213,1.963,2214,1.963,2215,1.963]],["title/classes/Rol.html",[0,0.056,1027,1.739]],["body/classes/Rol.html",[0,0.085,2,2.361,3,0.244,4,0.213,5,0.213,7,0.671,8,1.049,9,0.591,10,2.489,11,0.63,12,2.953,13,0.778,14,2.489,16,0.213,17,0.521,20,1.738,28,0.324,29,0.018,30,0.994,31,0.362,43,2.779,45,2.069,58,2.51,62,0.244,63,0.92,87,0.013,88,0.016,89,0.013,1027,3.568,1999,6.05,2216,4.837,2217,5.623,2218,5.623]],["title/injectables/RolService.html",[103,0.499,1017,2.227]],["body/injectables/RolService.html",[0,0.072,3,0.206,4,0.18,5,0.18,7,0.568,8,1.087,9,0.743,13,0.791,16,0.18,17,0.471,21,1.021,25,0.468,26,0.568,28,0.32,29,0.019,30,0.715,31,0.357,35,0.926,38,1.264,62,0.206,63,0.758,83,1.355,87,0.011,88,0.014,89,0.011,103,0.803,105,1.638,108,0.803,109,2.249,118,1.15,119,2.665,120,3.847,122,0.64,123,1.55,124,1.784,125,3.582,126,3.839,127,1.694,128,1.95,129,2.881,130,3.582,131,3.348,134,1.221,135,2.512,136,1.345,137,2.512,139,1.271,144,0.758,145,2.608,146,1.561,159,1.784,176,0.972,177,0.926,179,1.345,180,1.961,181,2.512,182,0.792,183,0.501,184,2.665,185,2.357,188,1.42,192,2.665,193,2.665,194,2.502,195,1.177,196,2.961,197,2.357,198,1.561,199,2.502,200,2.502,201,1.899,202,1.806,203,2.502,204,2.852,205,2.852,206,1.293,207,2,208,0.926,210,1.123,275,1.542,1012,2.249,1017,4.232,1027,2.227,1032,3.658,1304,3.436,1327,3.069,1995,5.626,1996,5.901,2002,5.146,2219,3.658,2220,5.982,2221,4.762,2222,4.762]],["title/guards/RoleGuardService.html",[754,2.601,776,2.601]],["body/guards/RoleGuardService.html",[0,0.08,3,0.229,4,0.2,5,0.2,16,0.2,17,0.416,25,0.627,26,0.761,28,0.312,29,0.019,30,0.793,31,0.348,62,0.229,87,0.013,88,0.015,89,0.013,103,0.856,108,0.856,118,0.929,122,0.856,144,0.669,182,0.768,183,0.555,195,1.576,201,2.107,202,2.004,207,2.218,208,1.24,230,1.503,251,3.142,338,3.156,339,2.004,359,2.004,369,1.435,415,2.107,556,0.882,754,4.46,763,5.464,764,4.545,765,3.405,777,3.695,779,3.695,781,2.806,783,5.486,784,6.119,785,5.892,786,6.119,788,4.059,789,2.339,790,2.004,791,2.339,792,3.164,793,4.059,1012,1.817,1027,2.982,1191,2.339,1249,4.545,1336,3.405,1337,4.545,2223,5.892,2224,5.283,2225,5.283,2226,5.283,2227,6.377,2228,5.283]],["title/components/SignUpComponent.html",[220,0.444,581,0.963]],["body/components/SignUpComponent.html",[0,0.036,3,0.104,4,0.091,5,0.091,7,0.287,8,0.986,9,0.76,11,0.78,13,0.76,16,0.091,17,0.291,21,1.291,25,0.498,26,0.287,28,0.181,29,0.019,31,0.372,35,0.72,38,1.171,62,0.104,63,0.852,68,1.831,73,0.873,75,1.274,87,0.006,88,0.009,89,0.006,108,0.497,118,0.892,122,0.323,123,0.959,124,1.977,127,1.498,128,1.943,134,1.33,136,0.833,139,0.986,144,0.694,148,0.685,166,1.166,171,1.513,176,0.922,177,0.878,179,1.14,182,0.73,183,0.253,195,1.253,198,1.896,206,1.487,208,0.468,210,1.196,213,0.623,220,0.539,221,0.623,222,1.158,223,0.789,224,0.789,225,0.789,226,0.789,230,1.054,231,1.553,232,0.789,233,2.347,234,2.135,235,1.214,237,1.214,245,3.895,246,1.744,247,2.069,248,2.982,250,2.908,251,2.612,255,1.946,256,2.245,257,3.158,258,2.372,259,2.481,261,2.753,262,1.946,263,1.833,264,1.946,268,2.369,274,2.245,275,1.586,280,2.218,281,1.797,282,2.59,284,3.41,285,2.527,286,2.073,287,1.732,288,1.732,289,1.732,290,1.833,291,1.833,292,2.387,294,1.732,295,1.831,296,1.646,306,2.073,320,2.073,322,2.023,323,2.023,326,1.732,327,2.845,331,1.833,334,1.946,339,1.713,341,2.704,342,2.371,345,1.833,346,1.065,348,1.44,352,1.682,359,0.912,363,1.065,364,1.01,365,1.065,366,1.065,367,1.01,368,1.065,369,1.487,371,1.55,372,2.982,373,1.01,374,1.487,377,2.59,378,2.218,393,2.845,405,1.848,415,2.598,435,1.896,455,1.639,456,1.848,476,0.959,477,2.129,478,0.959,479,0.959,480,1.477,481,2.088,482,1.274,483,1.405,484,0.868,485,0.959,486,0.912,487,1.346,488,1.639,489,1.55,494,1.999,495,1.125,496,1.191,497,1.555,507,2.704,508,1.191,509,1.346,511,1.065,528,2.838,544,0.717,545,1.214,546,1.214,547,0.789,548,0.789,549,0.789,550,0.653,551,0.789,552,1.17,553,1.347,554,1.214,555,0.623,556,0.915,557,0.789,558,0.623,559,1.214,560,0.653,561,0.752,562,0.623,563,1.054,564,0.789,565,0.623,566,0.789,567,0.623,568,0.789,569,0.623,570,0.623,571,0.789,572,0.623,573,1.214,574,0.653,575,0.752,576,0.789,577,0.623,578,0.789,579,0.623,580,0.717,581,1.419,582,1.855,583,0.789,584,0.623,585,0.684,586,0.789,587,0.789,616,3.481,639,4.818,709,1.848,758,2.387,762,3.529,793,1.848,794,3.481,805,2.59,808,2.845,895,2.59,897,4.045,900,2.387,904,2.387,960,1.555,986,3.186,997,1.065,1001,3.529,1012,0.827,1035,2.387,1036,1.848,1039,2.235,1040,2.51,1052,1.55,1055,2.845,1056,1.848,1057,1.848,1058,2.387,1059,1.848,1061,1.848,1092,2.59,1120,3.186,1135,2.069,1139,4.362,1141,2.59,1142,2.069,1159,1.191,1165,2.069,1185,1.848,1191,1.639,1192,1.946,1193,2.845,1194,3.186,1195,2.845,1196,3.884,1197,3.186,1198,2.845,1206,1.682,1291,2.371,1298,2.838,1301,1.55,1369,3.186,1448,3.547,1669,2.845,1693,3.186,1697,2.069,1701,2.069,1715,3.186,2060,2.069,2229,5.926,2230,2.069,2231,3.703,2232,4.515,2233,3.703,2234,4.515,2235,4.515,2236,4.515,2237,4.515,2238,5.071,2239,5.071,2240,3.703,2241,2.406,2242,6.22,2243,2.406,2244,2.406,2245,2.406,2246,2.406,2247,3.703,2248,2.406,2249,2.406,2250,2.406,2251,5.071,2252,5.071,2253,3.703,2254,2.406,2255,4.515,2256,3.703,2257,2.406,2258,3.703,2259,3.703,2260,2.406,2261,2.845,2262,2.406,2263,2.406,2264,2.406,2265,3.703,2266,2.069,2267,2.406,2268,2.406,2269,2.406,2270,2.069,2271,2.069,2272,2.406,2273,2.406,2274,2.406,2275,2.406,2276,2.406,2277,2.406,2278,2.406,2279,2.406,2280,2.406,2281,2.406,2282,2.406,2283,2.406,2284,2.069,2285,2.406,2286,2.406,2287,2.406,2288,2.406,2289,2.406,2290,2.406,2291,3.703,2292,2.406,2293,2.406,2294,2.406,2295,2.406,2296,2.406,2297,2.406,2298,2.406,2299,3.703,2300,3.703,2301,3.703,2302,3.703,2303,3.703,2304,3.703,2305,3.703,2306,2.406,2307,2.406,2308,2.406,2309,3.703,2310,2.069,2311,2.406,2312,2.406,2313,2.406,2314,2.406]],["title/components/TableActivitiesComponent.html",[220,0.444,584,0.963]],["body/components/TableActivitiesComponent.html",[0,0.035,1,2.651,3,0.099,4,0.087,5,0.087,7,0.638,8,0.782,9,0.796,11,0.553,13,0.785,15,2.791,16,0.087,17,0.28,19,1.42,21,0.763,25,0.601,26,0.638,28,0.214,29,0.019,31,0.363,35,1.249,38,1.257,56,2.593,61,2.593,62,0.099,63,0.796,68,1.286,71,1.538,73,0.84,74,1.28,75,1.948,83,1.828,87,0.005,88,0.008,89,0.005,104,2.766,108,0.478,110,2.491,112,2.491,118,0.868,122,0.718,124,1.982,127,1.279,128,1.062,129,1.495,134,1.419,136,1.274,139,1.101,144,0.775,148,1.188,152,1.495,159,0.682,160,3.302,166,1.076,171,1.532,179,1.11,180,1.754,182,0.72,183,0.24,206,1.744,208,0.692,210,1.164,213,0.592,220,0.522,221,0.592,222,1.113,223,0.75,224,0.75,225,1.434,226,0.75,230,1.013,231,1.504,232,0.75,233,2.328,234,2.118,235,1.167,237,1.167,246,1.698,251,2.569,252,2.569,253,3.028,256,2.185,259,2.718,262,1.871,263,1.763,264,1.871,265,1.763,266,2.844,267,1.659,268,2.21,269,1.763,270,1.763,271,1.763,272,2.86,273,2.708,274,1.576,275,1.607,276,1.993,277,1.763,278,1.993,281,1.824,287,1.665,288,1.665,289,1.665,290,1.763,291,1.763,294,2.86,295,1.286,296,1.741,312,1.993,320,1.993,322,1.969,323,2.651,326,1.665,331,1.132,334,1.871,349,0.867,358,1.369,359,0.867,360,0.867,363,1.012,364,0.96,365,1.012,366,1.012,367,0.96,368,1.012,369,1.606,374,1.606,375,1.012,435,2.569,444,1.757,445,1.993,449,1.763,455,1.576,462,1.28,463,1.202,464,1.576,471,1.599,472,1.599,473,3.059,476,0.912,478,0.912,479,0.912,480,1.42,481,1.931,482,1.504,483,1.351,484,1.579,485,0.912,486,0.867,488,1.012,499,0.867,500,1.351,508,1.132,526,1.369,544,0.682,545,1.167,546,1.167,547,0.75,548,0.75,549,0.75,550,0.621,551,0.75,552,1.133,553,1.304,554,1.167,555,0.592,556,0.382,557,0.75,558,0.592,559,1.167,560,0.967,561,1.113,562,0.592,563,1.891,564,0.75,565,0.592,566,0.75,567,0.592,568,0.75,569,0.592,570,0.592,571,0.75,572,0.592,573,1.167,574,0.621,575,0.715,576,0.75,577,0.592,578,0.75,579,0.592,580,0.682,581,0.592,582,0.682,583,0.75,584,1.386,585,1.862,586,0.75,587,0.75,623,1.28,624,1.202,658,4.712,659,1.757,664,3.943,692,5.262,693,1.757,696,1.599,824,2.443,836,1.599,837,3.359,838,2.735,848,3.181,849,3.181,856,2.295,857,2.295,858,2.295,859,2.295,860,2.295,861,2.295,862,2.295,863,2.295,864,2.295,865,2.295,866,2.132,867,2.295,868,2.295,869,2.132,870,2.295,898,1.967,901,2.295,903,2.295,951,1.474,998,1.757,999,1.757,1068,1.369,1072,1.369,1099,1.28,1100,1.202,1137,1.993,1138,1.202,1150,1.28,1219,3.762,1221,1.967,1222,3.762,1225,3.063,1226,3.063,1227,3.063,1230,4.246,1233,3.452,1234,2.491,1236,2.491,1237,3.063,1239,1.369,1240,1.369,1296,2.165,1351,2.735,1359,2.735,1361,2.735,1362,2.491,1375,1.757,1376,1.757,1388,1.757,1482,1.599,1488,1.599,1490,1.599,1510,3.741,1511,1.599,1524,3.452,1525,2.735,1529,2.491,1530,2.735,1560,1.967,1574,3.762,1583,3.792,1586,4.246,1587,3.063,1588,4.246,1589,3.063,1592,1.967,1593,3.792,1608,3.063,1612,3.063,1613,1.967,1617,1.967,1620,3.063,1621,1.967,1664,4.246,1674,3.063,2086,1.967,2125,3.063,2284,1.967,2310,1.967,2315,5.795,2316,3.561,2317,4.936,2318,4.936,2319,3.561,2320,2.287,2321,3.561,2322,3.561,2323,3.561,2324,2.287,2325,3.561,2326,2.287,2327,2.287,2328,2.287,2329,2.287,2330,2.287,2331,3.561,2332,2.287,2333,3.561,2334,2.287,2335,2.287,2336,2.287,2337,3.561,2338,2.287,2339,2.287,2340,2.287,2341,2.287,2342,2.287,2343,3.561,2344,2.287,2345,2.287,2346,2.287,2347,2.287,2348,2.287,2349,2.287,2350,2.287,2351,3.561,2352,2.287,2353,2.287,2354,2.287,2355,2.287]],["title/classes/User.html",[0,0.056,556,0.621]],["body/classes/User.html",[0,0.101,2,1.844,3,0.19,4,0.166,5,0.166,7,0.524,8,1.154,9,0.755,10,2.948,11,0.825,12,2.817,13,0.798,14,2.948,16,0.166,17,0.447,20,1.557,21,1.427,28,0.337,29,0.019,30,1.144,31,0.377,43,2.644,45,1.776,47,2.274,58,2.525,62,0.289,63,0.958,73,1.34,87,0.01,88,0.013,89,0.01,148,1.051,159,1.31,166,1.36,171,0.988,186,2.657,261,1.945,275,1.036,373,1.844,556,1.052,801,3.402,803,2.812,1012,2.472,1039,3.296,1040,3.296,1159,2.174,1283,2.458,1284,2.458,1285,2.831,1286,3.072,1289,4.657,1290,4.657,1291,3.224,1292,4.405,1293,4.405,1294,3.662,1295,3.072,1296,2.812,1297,4.405,1298,3.18,1299,3.072,1300,3.072,1301,2.831,1302,2.63,1303,2.63,1304,2.308,2356,4.392,2357,4.392,2358,4.392,2359,4.392,2360,4.392]],["title/classes/UserLogin.html",[0,0.056,186,1.739]],["body/classes/UserLogin.html",[0,0.102,2,1.895,3,0.196,4,0.171,5,0.171,7,0.538,8,1.161,9,0.77,10,2.978,11,0.836,12,2.837,13,0.793,14,2.978,16,0.171,17,0.455,20,1.115,21,1.441,28,0.283,29,0.019,30,1.144,31,0.316,43,2.427,45,1.411,47,2.303,58,2.419,62,0.292,63,0.945,73,1.504,87,0.011,88,0.014,89,0.011,148,1.069,159,1.346,166,1.352,171,1.014,186,3.145,261,1.998,275,1.064,373,1.895,556,0.754,801,3.819,803,2.861,1012,2.313,1039,2.861,1040,2.861,1159,2.233,1283,2.525,1284,2.525,1285,2.908,1286,3.156,1289,4.704,1290,4.704,1291,3.251,1292,4.043,1293,4.043,1294,2.908,1295,4.043,1296,3.157,1297,4.704,1298,3.764,1299,3.156,1300,3.156,1301,2.908,1302,2.702,1303,2.702,1304,2.371,2361,4.512,2362,4.512]],["title/injectables/UserService.html",[103,0.499,1015,1.841]],["body/injectables/UserService.html",[0,0.053,3,0.151,4,0.132,5,0.132,7,0.76,8,0.959,9,0.768,11,0.813,13,0.738,16,0.132,17,0.382,20,1.792,21,0.745,25,0.626,26,0.76,28,0.274,29,0.019,30,0.522,31,0.37,35,0.676,38,1.294,45,2.16,62,0.151,63,0.901,71,1.996,73,1.145,83,0.989,87,0.008,88,0.011,89,0.008,103,0.652,105,1.196,108,0.652,109,2.543,118,0.984,119,1.946,120,3.558,122,0.855,123,1.569,124,1.448,125,2.907,126,3.388,127,1.892,128,1.668,129,2.9,130,2.907,131,2.717,134,1.451,135,2.985,136,1.598,137,2.985,139,1.397,144,0.901,145,3.018,146,2.394,147,3.324,148,1.315,151,2.939,152,2.038,155,2.551,156,2.27,157,2.551,159,1.448,166,1.318,176,0.71,177,0.676,179,1.091,180,1.592,181,2.038,182,0.714,183,0.365,184,1.946,185,1.721,187,1.626,188,1.037,192,1.946,193,1.946,194,1.827,195,0.859,196,3.266,197,1.721,198,1.14,199,1.827,200,1.827,201,1.387,202,1.319,203,1.827,204,2.082,205,2.082,206,1.791,207,1.46,208,1.238,210,0.82,211,4.176,216,2.432,275,0.82,281,2.06,556,1.102,1015,3.152,1019,3.13,1296,2.403,1327,2.241,1577,3.729,1591,3.729,2009,4.812,2010,4.176,2011,4.176,2012,4.176,2013,5.208,2014,4.176,2016,4.176,2018,4.176,2020,4.176,2035,4.176,2363,2.671,2364,4.855,2365,3.477,2366,3.477,2367,3.477,2368,3.477,2369,3.477,2370,3.477,2371,5.593,2372,3.477,2373,3.477]],["title/classes/UserSignUp.html",[0,0.056,803,1.841]],["body/classes/UserSignUp.html",[0,0.1,2,1.792,3,0.185,4,0.162,5,0.162,7,0.509,8,1.147,9,0.761,10,2.915,11,0.834,12,2.795,13,0.801,14,2.915,16,0.162,17,0.439,20,1.055,21,1.53,28,0.349,29,0.019,30,1.151,31,0.39,43,2.341,45,1.334,47,2.242,58,2.498,62,0.286,63,0.949,73,1.464,87,0.01,88,0.013,89,0.01,148,1.149,159,1.663,166,1.357,171,0.959,186,2.607,261,2.468,275,1.315,373,1.792,556,0.713,801,3.719,803,3.259,1012,2.455,1039,3.259,1040,3.259,1159,2.112,1283,2.388,1284,2.388,1285,2.75,1286,2.985,1289,4.606,1290,4.606,1291,3.195,1292,4.344,1293,4.344,1294,2.75,1295,2.985,1296,3.074,1297,4.779,1298,3.685,1299,3.9,1300,3.9,1301,4.003,1302,3.339,1303,3.339,1304,2.929,2374,4.267,2375,4.267,2376,4.267,2377,4.267,2378,4.267,2379,4.267,2380,4.267]],["title/coverage.html",[2381,4.375]],["body/coverage.html",[0,0.111,1,1.549,5,0.147,6,4.024,19,1.549,21,1.123,28,0.19,29,0.019,76,2.041,87,0.009,88,0.012,89,0.009,103,1.008,104,1.816,106,4.024,186,1.816,189,2.174,196,3.452,198,1.274,220,0.903,221,1.006,227,3.342,228,2.717,229,3.342,249,2.041,250,1.816,300,6.304,361,2.041,392,4.633,482,2.643,503,3.376,550,1.055,552,1.006,555,1.006,556,0.99,558,1.006,560,1.055,562,1.006,563,1.491,565,1.006,567,1.006,569,1.006,570,1.006,572,1.006,574,1.055,577,1.006,579,1.006,581,1.006,584,1.006,585,1.105,588,3.342,616,2.174,620,2.984,639,2.717,643,2.984,655,2.717,658,2.717,673,2.717,679,2.717,681,2.717,696,2.717,699,2.717,710,2.717,712,2.717,720,2.717,730,2.717,739,2.984,747,2.717,749,2.984,751,2.717,753,2.984,754,2.717,776,4.146,778,3.342,779,4.146,781,1.473,790,1.987,794,2.174,795,4.024,803,1.923,810,3.342,813,4.024,835,4.146,836,4.146,960,3.137,1007,3.342,1015,1.923,1017,2.326,1027,1.816,1035,2.504,1058,2.504,1095,3.342,1113,4.024,1141,2.717,1207,2.984,1208,4.024,1217,3.342,1243,3.342,1244,2.717,1246,4.024,1278,4.024,1281,2.504,1285,4.089,1308,4.024,1335,3.342,1339,3.342,1341,4.089,1342,3.342,1434,3.342,1512,3.342,1622,4.024,1623,4.024,1646,2.984,1658,3.342,1717,3.342,1736,3.342,1737,3.342,1794,2.984,1795,3.342,1796,3.819,1797,3.819,1924,2.984,1925,3.342,1938,2.984,1939,3.342,1965,2.984,1966,3.342,1993,2.984,1994,3.342,2006,2.984,2007,3.342,2048,3.342,2061,3.342,2091,3.342,2092,3.342,2209,4.506,2216,3.342,2219,4.024,2223,3.342,2229,3.342,2230,3.342,2261,2.984,2315,3.342,2363,4.024,2381,3.342,2382,3.885,2383,3.885,2384,3.885,2385,5.239,2386,5.239,2387,5.927,2388,6.624,2389,3.885,2390,3.885,2391,3.885,2392,5.927,2393,3.885,2394,3.885,2395,3.885,2396,3.885,2397,3.885,2398,3.885,2399,5.239,2400,5.239,2401,5.927,2402,5.239,2403,3.885,2404,3.885,2405,3.885,2406,3.885,2407,6.624,2408,3.885,2409,3.885,2410,3.885,2411,3.885,2412,3.885,2413,3.885,2414,3.885,2415,5.239,2416,3.885,2417,7.328,2418,3.885,2419,3.885,2420,3.885,2421,3.885,2422,3.885,2423,3.885,2424,5.239,2425,5.239,2426,5.239,2427,3.885,2428,3.885,2429,3.885,2430,3.885,2431,3.885,2432,3.885,2433,5.239,2434,3.342,2435,3.342,2436,3.342,2437,3.342,2438,3.342,2439,4.506,2440,3.342,2441,3.885]],["title/dependencies.html",[605,3.13,2442,3.101]],["body/dependencies.html",[29,0.019,87,0.013,88,0.015,89,0.013,183,0.578,188,1.641,267,2.478,273,2.436,346,2.436,351,4.211,352,3.849,353,4.734,359,2.087,360,2.087,529,3.295,605,3.849,607,4.227,623,3.657,624,3.433,703,4.734,704,4.734,1643,4.734,1644,4.734,2443,5.503,2444,7.649,2445,5.503,2446,5.503,2447,5.503,2448,5.503,2449,5.503,2450,5.503,2451,5.503,2452,5.503,2453,5.503,2454,5.503,2455,5.503,2456,5.503,2457,5.503,2458,5.503,2459,5.503,2460,5.503,2461,5.503,2462,5.503,2463,5.503,2464,5.503,2465,6.534,2466,5.503,2467,5.503,2468,5.503,2469,5.503,2470,5.503,2471,5.503,2472,5.503]],["title/miscellaneous/functions.html",[2473,2.169,2474,3.85]],["body/miscellaneous/functions.html",[9,0.797,11,0.726,13,0.754,16,0.205,25,0.532,26,0.647,29,0.018,35,1.053,38,1.081,47,1.957,73,1.278,87,0.013,88,0.015,89,0.013,122,0.728,128,1.931,144,0.909,166,0.953,194,2.847,263,2.682,275,1.278,281,2.065,284,2.682,313,3.79,324,4.662,361,3.638,620,4.163,739,4.974,741,4.662,866,3.245,905,3.033,960,2.275,1035,4.463,1141,4.843,1198,4.163,1283,3.033,1284,3.033,1298,3.033,2261,5.319,2266,4.662,2434,4.662,2435,4.662,2436,4.662,2437,4.662,2473,3.79,2474,4.662,2475,5.419,2476,5.419,2477,5.419,2478,5.419,2479,5.419,2480,7.173,2481,7.173,2482,5.419,2483,5.419,2484,5.419,2485,5.419,2486,5.419,2487,7.173,2488,5.419,2489,5.419,2490,5.419,2491,5.419]],["title/index.html",[16,0.117,2492,3.101,2493,3.101]],["body/index.html",[4,0.207,25,0.536,29,0.015,87,0.013,88,0.015,89,0.013,198,1.787,220,0.828,234,1.626,239,4.689,367,2.289,490,3.521,619,3.813,1101,5.521,1185,4.187,2270,5.971,2494,5.451,2495,6.497,2496,5.451,2497,6.942,2498,5.451,2499,5.451,2500,6.497,2501,7.343,2502,5.451,2503,5.451,2504,5.451,2505,5.451,2506,5.451,2507,5.451,2508,5.451,2509,5.451,2510,5.451,2511,6.942,2512,6.942,2513,5.451,2514,7.343,2515,5.451,2516,5.451,2517,5.451,2518,5.451,2519,5.451,2520,5.451,2521,4.689,2522,6.497,2523,6.497,2524,7.187,2525,5.451,2526,6.497,2527,6.497,2528,5.451,2529,5.451,2530,5.451,2531,5.451,2532,6.942,2533,5.451,2534,5.451,2535,4.187,2536,5.451,2537,5.451,2538,5.451]],["title/modules.html",[604,3.278]],["body/modules.html",[29,0.016,87,0.014,88,0.016,89,0.014,603,4.236,604,3.903,615,3.903,624,3.182,2539,6.056,2540,6.056,2541,6.909,2542,6.056,2543,6.056]],["title/overview.html",[2535,3.907]],["body/overview.html",[2,2.147,29,0.019,87,0.012,88,0.015,89,0.012,105,1.759,221,1.75,222,1.599,544,1.525,550,2.018,552,1.75,555,1.75,558,1.75,560,1.834,562,1.75,565,1.75,567,1.75,569,1.75,570,1.75,572,1.75,574,1.834,577,1.75,579,1.75,581,1.75,584,1.75,602,3.577,603,5.547,604,3.296,605,3.577,606,4.4,607,3.929,608,4.4,609,3.929,610,4.4,611,4.4,612,4.4,613,4.4,614,4.4,615,4.352,616,3.779,617,4.373,618,4.4,619,3.577,745,3.577,777,3.577,1192,2.687,1193,3.929,2271,4.4,2535,3.929,2544,5.114,2545,5.114,2546,5.114]],["title/routes.html",[745,3.557]],["body/routes.html",[29,0.016,87,0.015,88,0.016,89,0.015,745,4.286]],["title/miscellaneous/variables.html",[2473,2.169,2547,3.85]],["body/miscellaneous/variables.html",[11,0.671,16,0.18,28,0.379,29,0.019,30,0.715,63,0.603,73,1.123,83,2.053,87,0.011,88,0.014,89,0.011,106,3.658,126,4.037,128,2.151,139,1.423,176,1.545,177,1.471,192,4.037,193,4.037,194,3.79,196,3.794,197,3.624,198,2.4,199,3.847,200,3.847,274,2.108,339,2.269,415,1.899,655,4.184,737,3.658,790,1.806,795,3.658,813,3.658,905,2.665,1126,2.502,1208,3.658,1244,3.331,1246,3.658,1258,4.097,1263,2.852,1276,4.097,1277,4.097,1308,3.658,1622,3.658,1623,4.595,1645,4.097,1646,4.595,1647,4.097,2032,6.426,2219,3.658,2363,3.658,2438,4.097,2439,5.901,2440,4.097,2473,3.331,2521,5.146,2547,4.097,2548,4.762,2549,4.762,2550,4.762,2551,4.762,2552,4.762,2553,4.762,2554,4.762,2555,4.762,2556,4.762,2557,4.762,2558,4.762]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":960,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockUserService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.1",{"_index":1788,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["0.10.2",{"_index":2472,"title":{},"body":{"dependencies.html":{}}}],["0.16",{"_index":1430,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["0.23",{"_index":1431,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["0.25",{"_index":2149,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["0.5",{"_index":1876,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["0.9",{"_index":1793,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["0/1",{"_index":2388,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2397,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2387,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2392,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2403,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2414,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1191,"title":{"classes/Interest-1.html":{}},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{}}}],["1.0",{"_index":368,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["1.5em",{"_index":1111,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["1.5rem",{"_index":1433,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["1.7.1",{"_index":2462,"title":{},"body":{"dependencies.html":{}}}],["1.99999",{"_index":1875,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["1/1",{"_index":2417,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1198,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/functions.html":{}}}],["10.2.0",{"_index":2498,"title":{},"body":{"index.html":{}}}],["10/10",{"_index":2391,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":2402,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":482,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1059,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["100px",{"_index":2355,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["10px",{"_index":1206,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationComponent.html":{},"components/SignUpComponent.html":{}}}],["11",{"_index":2271,"title":{},"body":{"components/SignUpComponent.html":{},"overview.html":{}}}],["11.2.0",{"_index":2444,"title":{},"body":{"dependencies.html":{}}}],["11.2.3",{"_index":2468,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":2405,"title":{},"body":{"coverage.html":{}}}],["11/12",{"_index":2386,"title":{},"body":{"coverage.html":{}}}],["11/20",{"_index":2398,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2029,"title":{},"body":{"injectables/MockUserService.html":{}}}],["12/13",{"_index":2433,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":1421,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["12rem",{"_index":2214,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["13.0.0",{"_index":2452,"title":{},"body":{"dependencies.html":{}}}],["13/13",{"_index":2406,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2545,"title":{},"body":{"overview.html":{}}}],["15/16",{"_index":2413,"title":{},"body":{"coverage.html":{}}}],["1500",{"_index":454,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["150px",{"_index":1425,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["155",{"_index":2033,"title":{},"body":{"injectables/MockUserService.html":{}}}],["15px",{"_index":1388,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["16",{"_index":2546,"title":{},"body":{"overview.html":{}}}],["16/17",{"_index":2390,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":1108,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["17",{"_index":2544,"title":{},"body":{"overview.html":{}}}],["18",{"_index":2485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["18t00:00:00.000+00:00",{"_index":2030,"title":{},"body":{"injectables/MockUserService.html":{}}}],["19",{"_index":1729,"title":{},"body":{"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["1990",{"_index":1853,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["1].id",{"_index":1887,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{}}}],["1px",{"_index":1106,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["1rem",{"_index":1391,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["2",{"_index":1192,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"components/SignUpComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":2465,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2463,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":2455,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2409,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":2430,"title":{},"body":{"coverage.html":{}}}],["2196f3",{"_index":1790,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["23547b",{"_index":1402,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["250",{"_index":2169,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["256029",{"_index":1408,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["25em",{"_index":1415,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["2px",{"_index":1414,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/MapComponent.html":{}}}],["2rem",{"_index":1432,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["2x.png",{"_index":357,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["3",{"_index":1193,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{},"overview.html":{}}}],["3.1.2",{"_index":2461,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":2460,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2407,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":2431,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2428,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2418,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":2172,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["300px",{"_index":485,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["30px",{"_index":1733,"title":{},"body":{"components/MapComponent.html":{}}}],["33201",{"_index":1863,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["33394",{"_index":1834,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["35",{"_index":2161,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["375px",{"_index":506,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["380px",{"_index":2085,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["390px",{"_index":516,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["3px",{"_index":1424,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["4",{"_index":1194,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["4.0.0",{"_index":2467,"title":{},"body":{"dependencies.html":{}}}],["4.5.3",{"_index":2456,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":2458,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2408,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2420,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2429,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":515,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["401",{"_index":1269,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["40vw",{"_index":505,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["42",{"_index":2415,"title":{},"body":{"coverage.html":{}}}],["43.333333",{"_index":1727,"title":{},"body":{"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["43.524088",{"_index":1821,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["43.544993",{"_index":1868,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["43.549",{"_index":1857,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["45",{"_index":2421,"title":{},"body":{"coverage.html":{}}}],["45vw",{"_index":514,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["480px",{"_index":1005,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["5",{"_index":1195,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/MockActivityService.html":{},"components/SignUpComponent.html":{}}}],["5.15.1",{"_index":2451,"title":{},"body":{"dependencies.html":{}}}],["5.614049",{"_index":1822,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["5.6631",{"_index":1858,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["5.664037",{"_index":1869,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["5.826187",{"_index":2146,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["5/11",{"_index":2422,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2394,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":503,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/RecommendationMapComponent.html":{},"coverage.html":{}}}],["500",{"_index":1495,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["55",{"_index":1095,"title":{},"body":{"components/EditUserAdminComponent.html":{},"coverage.html":{}}}],["56",{"_index":2208,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["5px",{"_index":496,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["5rem",{"_index":1416,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["6",{"_index":377,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserComponent.html":{},"components/MapComponent.html":{},"components/SignUpComponent.html":{}}}],["6.0.0",{"_index":2453,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":2469,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":2423,"title":{},"body":{"coverage.html":{}}}],["6/14",{"_index":2432,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":2410,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2400,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":2427,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1058,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/RecommendationComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["600",{"_index":2210,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["694382",{"_index":1399,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["6px",{"_index":1428,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["7",{"_index":1196,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["7/8",{"_index":2425,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":2310,"title":{},"body":{"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["700",{"_index":1420,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["75",{"_index":2426,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":1242,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["8",{"_index":378,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/MapComponent.html":{},"injectables/MockActivityService.html":{},"components/SignUpComponent.html":{}}}],["8.75",{"_index":2147,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["8/8",{"_index":2411,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2396,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2419,"title":{},"body":{"coverage.html":{}}}],["800px",{"_index":486,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["805b36",{"_index":1411,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["83",{"_index":2393,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2399,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":2424,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2395,"title":{},"body":{"coverage.html":{}}}],["8a5340",{"_index":1396,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["8d8",{"_index":1935,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["9",{"_index":1197,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["9/10",{"_index":2404,"title":{},"body":{"coverage.html":{}}}],["9/21",{"_index":2416,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2401,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":2385,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":2209,"title":{},"body":{"components/RecommendationMapComponent.html":{},"coverage.html":{}}}],["93",{"_index":2412,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":2389,"title":{},"body":{"coverage.html":{}}}],["a.interestid",{"_index":1182,"title":{},"body":{"components/EditUserComponent.html":{}}}],["a[propname",{"_index":1087,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["a[propname].length",{"_index":1076,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["a[propname].slice().sort().every((value",{"_index":1078,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["abre",{"_index":2125,"title":{},"body":{"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["absolute",{"_index":1732,"title":{},"body":{"components/MapComponent.html":{}}}],["acceder",{"_index":1125,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["accept",{"_index":1490,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["acceso",{"_index":853,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"injectables/LocalStorageService.html":{},"components/MenuBarComponent.html":{}}}],["accessors",{"_index":1120,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["act._latlng.lat",{"_index":2188,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["act._latlng.lng",{"_index":2190,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["acti.id",{"_index":1904,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activatedroute",{"_index":847,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/LoginComponent.html":{}}}],["activatedroutesnapshot",{"_index":784,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/RoleGuardService.html":{}}}],["actividad",{"_index":15,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockInterestService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["actividades",{"_index":160,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activities",{"_index":563,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["activities'},{'name",{"_index":554,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activities.component",{"_index":659,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TableActivitiesComponent.html":{}}}],["activities.component.html",{"_index":838,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activities.component.scss",{"_index":837,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activities.component.ts",{"_index":836,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["activities.component.ts:103",{"_index":898,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:131",{"_index":2329,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:140",{"_index":2332,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:158",{"_index":2327,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:167",{"_index":2324,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:176",{"_index":2330,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:186",{"_index":879,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:210",{"_index":902,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:223",{"_index":886,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:240",{"_index":883,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:25",{"_index":1228,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["activities.component.ts:29",{"_index":1221,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:306",{"_index":872,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:32",{"_index":910,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:320",{"_index":882,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:33",{"_index":2334,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:36",{"_index":914,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:37",{"_index":2321,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:40",{"_index":909,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:43",{"_index":1229,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["activities.component.ts:44",{"_index":906,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:48",{"_index":911,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:52",{"_index":912,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{}}}],["activities.component.ts:56",{"_index":915,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:60",{"_index":850,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activities.component.ts:74",{"_index":2328,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities.component.ts:87",{"_index":2326,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activities/add",{"_index":767,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["activities/edit",{"_index":699,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"coverage.html":{}}}],["activities/edit/:id",{"_index":766,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["activities/information",{"_index":696,"title":{},"body":{"modules/AppModule.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["activities/table",{"_index":658,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["activities_valued",{"_index":1383,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/MenuBarComponent.html":{}}}],["activitiesevaluate",{"_index":772,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["activitiesrecommendation",{"_index":2093,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["activitiesselected",{"_index":2094,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["activitiesservice",{"_index":2107,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["activity",{"_index":1,"title":{"classes/Activity.html":{}},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["activity\").setattribute",{"_index":991,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activity'},{'name",{"_index":549,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activity.address",{"_index":1235,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["activity.average}}/5",{"_index":2199,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["activity.city",{"_index":1237,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activity.component",{"_index":719,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["activity.component.html",{"_index":238,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.scss",{"_index":236,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts",{"_index":229,"title":{},"body":{"components/AddActivityComponent.html":{},"coverage.html":{}}}],["activity.component.ts:129",{"_index":319,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:147",{"_index":298,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:158",{"_index":308,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:167",{"_index":279,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:33",{"_index":330,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:37",{"_index":333,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:41",{"_index":329,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:45",{"_index":340,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:49",{"_index":254,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.component.ts:87",{"_index":321,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity.description",{"_index":1234,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activity.get('address",{"_index":1914,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activity.get('city",{"_index":1912,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activity.get('description",{"_index":1908,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activity.get('interest",{"_index":1913,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activity.get('latitude",{"_index":1909,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activity.get('longitude",{"_index":1910,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activity.get('name",{"_index":1907,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activity.id",{"_index":2350,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["activity.interest",{"_index":1236,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activity.latitude",{"_index":2189,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["activity.longitude",{"_index":2166,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["activity.metadataimage.data",{"_index":1376,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activity.metadataimage.mimetype",{"_index":1375,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activity.name",{"_index":1233,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["activity.service",{"_index":1879,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activity/add",{"_index":228,"title":{},"body":{"components/AddActivityComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["activity:10",{"_index":96,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:14",{"_index":101,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:18",{"_index":95,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:22",{"_index":98,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:26",{"_index":99,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:30",{"_index":102,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:34",{"_index":94,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:38",{"_index":97,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:42",{"_index":93,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity:46",{"_index":100,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["activity_added",{"_index":446,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["activity_edited",{"_index":983,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activity_id",{"_index":2179,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["activityid",{"_index":839,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["activityrate",{"_index":175,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["activityrecommended",{"_index":76,"title":{"classes/ActivityRecommended.html":{}},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{},"coverage.html":{}}}],["activityselectedtorate",{"_index":2095,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["activityservice",{"_index":104,"title":{"injectables/ActivityService.html":{}},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["activityservice:103",{"_index":1814,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityservice:26",{"_index":1878,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityservice:38",{"_index":1812,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityservice:47",{"_index":1813,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityservice:56",{"_index":1809,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityservice:65",{"_index":1810,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityservice:76",{"_index":1811,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityservice:85",{"_index":1816,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityservice:94",{"_index":1815,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activitytoadd",{"_index":1885,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["activityurl",{"_index":107,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["actual_component",{"_index":587,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["actualizada",{"_index":157,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["actualizo",{"_index":2269,"title":{},"body":{"components/SignUpComponent.html":{}}}],["add",{"_index":213,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["add_activity",{"_index":470,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["add_activity_error",{"_index":461,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["add_city",{"_index":1506,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["add_interest",{"_index":1570,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["addactivity",{"_index":110,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/MockActivityService.html":{},"components/TableActivitiesComponent.html":{}}}],["addactivity(formdata",{"_index":132,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["addactivitycomponent",{"_index":221,"title":{"components/AddActivityComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addcity",{"_index":815,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["addcity(city",{"_index":820,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["addinterests",{"_index":1310,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["addinterests(interest",{"_index":1316,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["address",{"_index":18,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/MockActivityService.html":{}}}],["addto(map",{"_index":384,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["adicional",{"_index":1230,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["admin",{"_index":765,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditUserAdminComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockUserService.html":{},"guards/RoleGuardService.html":{}}}],["admin'},{'name",{"_index":557,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["admin.component",{"_index":711,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["admin.component.html",{"_index":1009,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.scss",{"_index":1008,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts",{"_index":1007,"title":{},"body":{"components/EditUserAdminComponent.html":{},"coverage.html":{}}}],["admin.component.ts:117",{"_index":1023,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:146",{"_index":1022,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:160",{"_index":1020,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:32",{"_index":1025,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:36",{"_index":1029,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:40",{"_index":1030,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:44",{"_index":1028,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:48",{"_index":1031,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:52",{"_index":1018,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin.component.ts:90",{"_index":1021,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["admin/edit",{"_index":710,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditUserAdminComponent.html":{},"coverage.html":{}}}],["admin/user/edit/:id",{"_index":769,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["admin@email.com",{"_index":2031,"title":{},"body":{"injectables/MockUserService.html":{}}}],["age_invalid",{"_index":1094,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["al",{"_index":171,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["alba",{"_index":364,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockUserService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["alba@email.com",{"_index":1932,"title":{},"body":{"injectables/MockAuthService.html":{},"injectables/MockUserService.html":{}}}],["alguna",{"_index":2117,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["algún",{"_index":904,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/SignUpComponent.html":{}}}],["align",{"_index":511,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["align:center",{"_index":489,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/SignUpComponent.html":{}}}],["almacena",{"_index":179,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["almacenada",{"_index":1639,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["almacenar",{"_index":274,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":2270,"title":{},"body":{"components/SignUpComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":2443,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2445,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2446,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":185,"title":{},"body":{"injectables/ActivityService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":2447,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":183,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":346,"title":{},"body":{"components/AddActivityComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":623,"title":{},"body":{"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":359,"title":{},"body":{"components/AddActivityComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"dependencies.html":{}}}],["antes",{"_index":1901,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["aparición",{"_index":2113,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["api",{"_index":127,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["aplicación",{"_index":271,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["app",{"_index":234,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"index.html":{}}}],["app.component",{"_index":629,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":590,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":625,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":550,"title":{"components/AppComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apple",{"_index":531,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["application/json",{"_index":200,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":603,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":615,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aprops",{"_index":975,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["archivo",{"_index":64,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["arial",{"_index":538,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["array",{"_index":334,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListUserComponent.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["array1sort.every((value",{"_index":1188,"title":{},"body":{"components/EditUserComponent.html":{}}}],["array1sort.length",{"_index":1186,"title":{},"body":{"components/EditUserComponent.html":{}}}],["array2sort.length",{"_index":1187,"title":{},"body":{"components/EditUserComponent.html":{}}}],["array2sorted[index",{"_index":1075,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["artifacts",{"_index":2515,"title":{},"body":{"index.html":{}}}],["asociada",{"_index":61,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["asociado",{"_index":48,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/RecommendationMapComponent.html":{}}}],["assets/images/landscape.png",{"_index":2159,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["asturias",{"_index":1873,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["atob(datauri.split(',')[1",{"_index":961,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["attribution",{"_index":381,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["autenticación",{"_index":808,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["autenticado",{"_index":1114,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["autenticar",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockAuthService.html":{}}}],["autenticarse",{"_index":1295,"title":{},"body":{"classes/Interest-1.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["auth.service",{"_index":1930,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["auth/auth.service",{"_index":1979,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["authguardservice",{"_index":747,"title":{"guards/AuthGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"coverage.html":{}}}],["author",{"_index":363,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["authorities",{"_index":2073,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["authority",{"_index":1741,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["authservice",{"_index":794,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MockAuthService.html":{},"injectables/MockInterestService.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["authservice:25",{"_index":1929,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["authservice:38",{"_index":1927,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["authservice:47",{"_index":1928,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["authtoken",{"_index":1647,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["authurl",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockAuthService.html":{}}}],["auto",{"_index":507,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/RecommendationComponent.html":{},"components/SignUpComponent.html":{}}}],["auto\\9",{"_index":998,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["automatically",{"_index":2506,"title":{},"body":{"index.html":{}}}],["autreq",{"_index":1262,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["aux",{"_index":433,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{}}}],["available",{"_index":2543,"title":{},"body":{"modules.html":{}}}],["average",{"_index":86,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{}}}],["awesome",{"_index":2457,"title":{},"body":{"dependencies.html":{}}}],["ayuda",{"_index":856,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["añadida",{"_index":1896,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{}}}],["añadido",{"_index":1931,"title":{},"body":{"injectables/MockAuthService.html":{},"injectables/MockInterestService.html":{}}}],["añadir",{"_index":140,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{}}}],["año",{"_index":1852,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["años",{"_index":2486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["b",{"_index":885,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["b3e5fc",{"_index":1401,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["b[propname",{"_index":1088,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["b[propname].length",{"_index":1077,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["background",{"_index":1394,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/MenuBarComponent.html":{}}}],["badge",{"_index":1412,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["badge.status",{"_index":1392,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["bar",{"_index":1738,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar'},{'name",{"_index":576,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["bar.component",{"_index":644,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":1740,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.scss",{"_index":1739,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts",{"_index":1737,"title":{},"body":{"components/MenuBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:26",{"_index":1763,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:30",{"_index":1765,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:34",{"_index":1761,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:38",{"_index":1744,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:54",{"_index":1766,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:66",{"_index":1754,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:84",{"_index":1749,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar.component.ts:97",{"_index":1756,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["bar/menu",{"_index":643,"title":{},"body":{"modules/AppModule.html":{},"components/MenuBarComponent.html":{},"coverage.html":{}}}],["basada",{"_index":1713,"title":{},"body":{"components/LoginComponent.html":{}}}],["base64",{"_index":74,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["base64/urlencoded",{"_index":957,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["bearer",{"_index":1266,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["between",{"_index":1511,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["bind(this)).addto(map",{"_index":404,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["birth",{"_index":2313,"title":{},"body":{"components/SignUpComponent.html":{}}}],["birthday_required",{"_index":1093,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["black",{"_index":1735,"title":{},"body":{"components/MapComponent.html":{}}}],["blanco",{"_index":2489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["blinkmacsystemfont",{"_index":533,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["block",{"_index":1000,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{}}}],["bloque",{"_index":2242,"title":{},"body":{"components/SignUpComponent.html":{}}}],["boolean",{"_index":338,"title":{},"body":{"components/AddActivityComponent.html":{},"guards/AuthGuardService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{}}}],["bootstrap",{"_index":607,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/scss/bootstrap",{"_index":1780,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["border",{"_index":1104,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{}}}],["bottom",{"_index":1096,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{}}}],["botón",{"_index":310,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["box",{"_index":1426,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["bprops",{"_index":977,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["browse",{"_index":2541,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":624,"title":{},"body":{"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":634,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":633,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":2514,"title":{},"body":{"index.html":{}}}],["button",{"_index":512,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["button_add_activity_container",{"_index":510,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["button_create_recommendation",{"_index":2087,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["button_edit_activity_container",{"_index":1003,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["button_edit_user_submit",{"_index":1205,"title":{},"body":{"components/EditUserComponent.html":{}}}],["button_edit_user_submit_container",{"_index":1204,"title":{},"body":{"components/EditUserComponent.html":{}}}],["button_return",{"_index":2308,"title":{},"body":{"components/SignUpComponent.html":{}}}],["button_signup",{"_index":2305,"title":{},"body":{"components/SignUpComponent.html":{}}}],["buttonmodule",{"_index":631,"title":{},"body":{"modules/AppModule.html":{}}}],["buttons",{"_index":1098,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["buttonsave",{"_index":1102,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["bytes",{"_index":968,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["bytestring",{"_index":958,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["c4c6c8",{"_index":1109,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["c63737",{"_index":1405,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["c8e6c9",{"_index":1407,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["cabecera",{"_index":196,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cabueñes",{"_index":1830,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["calendarmodule",{"_index":717,"title":{},"body":{"modules/AppModule.html":{}}}],["calle",{"_index":1825,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["cambia",{"_index":873,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["cambiar",{"_index":1757,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["cambio",{"_index":917,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["campo",{"_index":313,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"miscellaneous/functions.html":{}}}],["campos",{"_index":324,"title":{},"body":{"components/AddActivityComponent.html":{},"miscellaneous/functions.html":{}}}],["canactivate",{"_index":763,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"guards/RoleGuardService.html":{}}}],["canactivate(route",{"_index":783,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/RoleGuardService.html":{}}}],["cancel",{"_index":1442,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["canceledit",{"_index":1443,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["card",{"_index":2086,"title":{},"body":{"components/RecommendationComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["cardmodule",{"_index":688,"title":{},"body":{"modules/AppModule.html":{}}}],["carga",{"_index":855,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["cargar",{"_index":326,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["casilla",{"_index":2118,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["caso",{"_index":893,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{}}}],["catalina",{"_index":1856,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["catcherror",{"_index":1261,"title":{},"body":{"interceptors/InterceptorService.html":{},"components/ListCitiesComponent.html":{}}}],["center",{"_index":997,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["centrar",{"_index":1002,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["centro",{"_index":1862,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["cerrar",{"_index":1750,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["cerro",{"_index":1854,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["change",{"_index":2508,"title":{},"body":{"index.html":{}}}],["changeimage",{"_index":842,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["changeimage(event",{"_index":871,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["changemap",{"_index":2100,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["changemap(event",{"_index":2110,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["check",{"_index":1185,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{},"index.html":{}}}],["checkboxactivityrecommendation",{"_index":2204,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["checkboxmodule",{"_index":705,"title":{},"body":{"modules/AppModule.html":{}}}],["child(2",{"_index":521,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["chillida",{"_index":1846,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["chipmodule",{"_index":726,"title":{},"body":{"modules/AppModule.html":{}}}],["ci.id",{"_index":1961,"title":{},"body":{"injectables/MockCityService.html":{}}}],["cimadevilla",{"_index":1861,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["cities",{"_index":768,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ListCitiesComponent.html":{},"components/MenuBarComponent.html":{}}}],["cities'},{'name",{"_index":566,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["cities.component",{"_index":674,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["cities.component.html",{"_index":1436,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.scss",{"_index":1435,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts",{"_index":1434,"title":{},"body":{"components/ListCitiesComponent.html":{},"coverage.html":{}}}],["cities.component.ts:111",{"_index":1457,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:116",{"_index":1458,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:120",{"_index":1453,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:124",{"_index":1456,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:133",{"_index":1461,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:153",{"_index":1454,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:17",{"_index":1467,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:18",{"_index":1468,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:19",{"_index":1472,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:20",{"_index":1470,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:21",{"_index":1471,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:22",{"_index":1469,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:23",{"_index":1452,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:33",{"_index":1460,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:44",{"_index":1464,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:48",{"_index":1459,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:56",{"_index":1462,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities.component.ts:80",{"_index":1466,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["cities/list",{"_index":673,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ListCitiesComponent.html":{},"coverage.html":{}}}],["city",{"_index":19,"title":{"classes/City.html":{}},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["city).pipe",{"_index":1502,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["city.id",{"_index":833,"title":{},"body":{"injectables/CityService.html":{},"components/ListCitiesComponent.html":{},"injectables/MockCityService.html":{}}}],["city.name",{"_index":1493,"title":{},"body":{"components/ListCitiesComponent.html":{},"injectables/MockCityService.html":{}}}],["city.service",{"_index":1953,"title":{},"body":{"injectables/MockCityService.html":{}}}],["cityservice",{"_index":249,"title":{"injectables/CityService.html":{}},"body":{"components/AddActivityComponent.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"injectables/MockCityService.html":{},"components/RecommendationMapComponent.html":{},"coverage.html":{}}}],["cityservice:26",{"_index":1951,"title":{},"body":{"injectables/MockCityService.html":{}}}],["cityservice:38",{"_index":1948,"title":{},"body":{"injectables/MockCityService.html":{}}}],["cityservice:47",{"_index":1945,"title":{},"body":{"injectables/MockCityService.html":{}}}],["cityservice:56",{"_index":1946,"title":{},"body":{"injectables/MockCityService.html":{}}}],["cityservice:66",{"_index":1947,"title":{},"body":{"injectables/MockCityService.html":{}}}],["citytoadd",{"_index":1955,"title":{},"body":{"injectables/MockCityService.html":{}}}],["citytoedit",{"_index":1906,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{}}}],["cityurl",{"_index":814,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["ciudad",{"_index":457,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{}}}],["clase",{"_index":8,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{}}}],["class",{"_index":0,"title":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"classes/City.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"classes/JwtModel.html":{},"classes/Rol.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"classes/City.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"classes/JwtModel.html":{},"classes/Rol.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{},"overview.html":{}}}],["clave",{"_index":1645,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["clearservice",{"_index":2049,"title":{},"body":{"injectables/NotificationService.html":{}}}],["cli",{"_index":2497,"title":{},"body":{"index.html":{}}}],["click",{"_index":2116,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["cluster_appmodule",{"_index":610,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":613,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":611,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":612,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":614,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":2509,"title":{},"body":{"index.html":{}}}],["codificada",{"_index":72,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/EditActivitiesComponent.html":{}}}],["col.header",{"_index":1608,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["color",{"_index":541,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["cols",{"_index":1574,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["column",{"_index":1240,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["columna",{"_index":1587,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["columnas",{"_index":1589,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["command",{"_index":2536,"title":{},"body":{"index.html":{}}}],["compara",{"_index":887,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["comparar",{"_index":896,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["component",{"_index":220,"title":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":548,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["componente",{"_index":323,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["componentes",{"_index":1226,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["components",{"_index":222,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"overview.html":{}}}],["con",{"_index":146,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/InterestService.html":{},"injectables/LocalStorageService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["config",{"_index":592,"title":{},"body":{"components/AppComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/MenuBarComponent.html":{}}}],["confirm",{"_index":2316,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["confirm(activity",{"_index":2322,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["confirmación",{"_index":1525,"title":{},"body":{"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["confirmationservice",{"_index":664,"title":{},"body":{"modules/AppModule.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["confirmdelete",{"_index":1576,"title":{},"body":{"components/ListUserComponent.html":{}}}],["confirmdelete(user",{"_index":1579,"title":{},"body":{"components/ListUserComponent.html":{}}}],["confirmdialogmodule",{"_index":662,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(\"aqui",{"_index":2347,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["console.log(council",{"_index":940,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["console.log(err",{"_index":2284,"title":{},"body":{"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["const",{"_index":195,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["consta",{"_index":1123,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["constructor",{"_index":118,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["constructor(activitiesservice",{"_index":2104,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["constructor(activityservice",{"_index":2320,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["constructor(authservice",{"_index":1666,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(cityservice",{"_index":1451,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["constructor(fb",{"_index":846,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["constructor(formbuilder",{"_index":247,"title":{},"body":{"components/AddActivityComponent.html":{},"components/SignUpComponent.html":{}}}],["constructor(httpclient",{"_index":119,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["constructor(interestservice",{"_index":1522,"title":{},"body":{"components/ListInterestComponent.html":{},"components/RecommendationComponent.html":{}}}],["constructor(localstorageservice",{"_index":1249,"title":{},"body":{"interceptors/InterceptorService.html":{},"guards/RoleGuardService.html":{}}}],["constructor(private",{"_index":207,"title":{},"body":{"injectables/ActivityService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/RecommendationComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":596,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(ref",{"_index":1218,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["constructor(router",{"_index":780,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/IsLogginInGuardService.html":{},"components/MenuBarComponent.html":{}}}],["constructor(translate",{"_index":591,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(userservice",{"_index":1121,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{}}}],["container",{"_index":477,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{}}}],["contaiter",{"_index":1238,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["contenido",{"_index":1328,"title":{},"body":{"injectables/InterestService.html":{}}}],["content",{"_index":1100,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/MenuBarComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["contextos",{"_index":870,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["contiene",{"_index":69,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{}}}],["continuesecondpartform",{"_index":2238,"title":{},"body":{"components/SignUpComponent.html":{}}}],["contrario",{"_index":894,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{}}}],["contraseña",{"_index":1297,"title":{},"body":{"classes/Interest-1.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["control",{"_index":352,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/SignUpComponent.html":{},"dependencies.html":{}}}],["control.markgeocode(resultado",{"_index":947,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["control.options.geocoder.geocode(response2.address",{"_index":943,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["convert",{"_index":956,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["convierte",{"_index":880,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["coordenates",{"_index":1241,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["copy",{"_index":382,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["correcta",{"_index":2258,"title":{},"body":{"components/SignUpComponent.html":{}}}],["correctas",{"_index":1682,"title":{},"body":{"components/LoginComponent.html":{}}}],["correo",{"_index":1289,"title":{},"body":{"classes/Interest-1.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["correspondiente",{"_index":318,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/LoginComponent.html":{}}}],["correspondientes",{"_index":2122,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["council",{"_index":398,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["coverage",{"_index":2381,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cre",{"_index":1224,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["crea",{"_index":280,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["crear",{"_index":255,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["create_recommendation",{"_index":2082,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["credenciales",{"_index":1681,"title":{},"body":{"components/LoginComponent.html":{}}}],["cross",{"_index":860,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["cuando",{"_index":305,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["cuidado",{"_index":2194,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["current",{"_index":1774,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["custom",{"_index":479,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["cuya",{"_index":1362,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["cuyo",{"_index":2120,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["d1",{"_index":1080,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["d1.gettime",{"_index":1085,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["d2",{"_index":1083,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["d2.gettime",{"_index":1086,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["dada",{"_index":1284,"title":{},"body":{"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{},"miscellaneous/functions.html":{}}}],["dadas",{"_index":1303,"title":{},"body":{"classes/Interest-1.html":{},"injectables/InterestService.html":{},"injectables/MockInterestService.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["data",{"_index":75,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["data.filter(p",{"_index":1146,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["data.foreach",{"_index":410,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["datatable",{"_index":1614,"title":{},"body":{"components/ListUserComponent.html":{}}}],["datauri",{"_index":881,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["datauri.split(',')[0].indexof('base64",{"_index":959,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["datauri.split(',')[0].split(':')[1].split(';')[0",{"_index":966,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["datauritoblob",{"_index":843,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["datauritoblob(datauri",{"_index":878,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["dataview",{"_index":1387,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["dataviewmodule",{"_index":722,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":1294,"title":{},"body":{"classes/Interest-1.html":{},"components/ListUserComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["date('1998",{"_index":2028,"title":{},"body":{"injectables/MockUserService.html":{}}}],["date(a[propname]).todatestring",{"_index":1082,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["date(b[propname]?.todatestring",{"_index":1084,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["date(datebirthday.gettime",{"_index":1057,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["date(new",{"_index":1081,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["date(this.edituserform.get('datebirthday').value",{"_index":1054,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["date(this.edituserprofile.get('datebirthday').value",{"_index":1163,"title":{},"body":{"components/EditUserComponent.html":{}}}],["date(this.formgroup.get('datebirthday').value",{"_index":2285,"title":{},"body":{"components/SignUpComponent.html":{}}}],["date(this.user.datebirthday",{"_index":1048,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["date_birth",{"_index":1092,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListUserComponent.html":{},"components/SignUpComponent.html":{}}}],["datebirthday",{"_index":1040,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"classes/Interest-1.html":{},"components/ListUserComponent.html":{},"injectables/MockUserService.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["datebirthday.gettimezoneoffset",{"_index":1056,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["datebirthday.toisostring().split('t')[0",{"_index":1061,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["datos",{"_index":68,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["dd/mm/yyyy",{"_index":1611,"title":{},"body":{"components/ListUserComponent.html":{}}}],["de",{"_index":13,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"miscellaneous/functions.html":{}}}],["dealwithfiles",{"_index":243,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["dealwithfiles(event",{"_index":297,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["declarations",{"_index":606,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decode",{"_index":1644,"title":{},"body":{"injectables/LocalStorageService.html":{},"dependencies.html":{}}}],["decodedtoken",{"_index":1653,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["decodedtoken.roles",{"_index":1656,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["decodedtoken.sub",{"_index":1655,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["decodetoken",{"_index":1624,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["decodetoken(token",{"_index":1631,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["decodifica",{"_index":1633,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["decodificada",{"_index":1634,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["deep",{"_index":491,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["default",{"_index":176,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":10,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"classes/City.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"classes/JwtModel.html":{},"classes/Rol.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["defined",{"_index":31,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{}}}],["del",{"_index":63,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":151,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["deleteactivity",{"_index":111,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["deleteactivity(id",{"_index":149,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["deletecity",{"_index":816,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["deletecity(city",{"_index":822,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["deletefiles",{"_index":244,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["deletefiles(event",{"_index":307,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["deleteinterest",{"_index":1311,"title":{},"body":{"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockInterestService.html":{}}}],["deleteinterest(interest",{"_index":1319,"title":{},"body":{"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockInterestService.html":{}}}],["deleteuser",{"_index":2010,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["deleteuser(id",{"_index":2014,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":605,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":740,"title":{},"body":{"modules/AppModule.html":{}}}],["descripción",{"_index":42,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{}}}],["description_activity",{"_index":472,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["desde",{"_index":1678,"title":{},"body":{"components/LoginComponent.html":{}}}],["desea",{"_index":1530,"title":{},"body":{"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["deshabilita",{"_index":309,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["destruir",{"_index":1674,"title":{},"body":{"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["detail",{"_index":464,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["detail:message",{"_index":451,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["details",{"_index":211,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/UserService.html":{}}}],["detalle",{"_index":2056,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dev",{"_index":2503,"title":{},"body":{"index.html":{}}}],["development",{"_index":2499,"title":{},"body":{"index.html":{}}}],["devolver",{"_index":1223,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["devuelto",{"_index":2256,"title":{},"body":{"components/SignUpComponent.html":{}}}],["devuelve",{"_index":890,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["dialogmodule",{"_index":667,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogservice",{"_index":692,"title":{},"body":{"modules/AppModule.html":{},"components/TableActivitiesComponent.html":{}}}],["dicha",{"_index":1748,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["diferentes",{"_index":869,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["dintintos",{"_index":900,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/SignUpComponent.html":{}}}],["dinámicamente",{"_index":874,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["dinámicos",{"_index":1227,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["direcciones",{"_index":390,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["dirección",{"_index":33,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["direction",{"_index":1239,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["direction:column",{"_index":2089,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["directive",{"_index":547,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["directives",{"_index":586,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2513,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2518,"title":{},"body":{"index.html":{}}}],["display",{"_index":499,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["displayeditdialog",{"_index":1515,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["displayeditpanel",{"_index":1437,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["displaypanelrating",{"_index":2096,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["dist",{"_index":2517,"title":{},"body":{"index.html":{}}}],["distintas",{"_index":335,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["distintos",{"_index":327,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{},"components/SignUpComponent.html":{}}}],["distrito",{"_index":1832,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["div:nth",{"_index":520,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["diálogo",{"_index":1524,"title":{},"body":{"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["document.getelementbyid(\"image",{"_index":990,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["documentation",{"_index":2382,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":225,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["domsanitizer",{"_index":849,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["don",{"_index":1866,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["donde",{"_index":34,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{}}}],["dos",{"_index":888,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{}}}],["dropdown",{"_index":337,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{}}}],["dropdownmodule",{"_index":649,"title":{},"body":{"modules/AppModule.html":{}}}],["dynamic",{"_index":2448,"title":{},"body":{"dependencies.html":{}}}],["dynamicdialogconfig",{"_index":1220,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["dynamicdialogref",{"_index":1219,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["e",{"_index":393,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/SignUpComponent.html":{}}}],["e.geocode.center.lat",{"_index":394,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["e.geocode.center.lng",{"_index":396,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["e.geocode.properties.address.city",{"_index":399,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["e.geocode.properties.address.town",{"_index":400,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["e.geocode.properties.address.village",{"_index":401,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["e2e",{"_index":2529,"title":{},"body":{"index.html":{}}}],["e3utrf1oygpbx0s5zlxdwqha7wwlonmf/9k",{"_index":1837,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["eccfff",{"_index":1398,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["edad",{"_index":2482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["edit",{"_index":553,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["edit_activity_container",{"_index":993,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["edit_activity_error",{"_index":985,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["edit_profile_user",{"_index":1173,"title":{},"body":{"components/EditUserComponent.html":{}}}],["edit_title",{"_index":1089,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["edit_title_activity",{"_index":992,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["editactivities",{"_index":2325,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["editactivitiescomponent",{"_index":552,"title":{"components/EditActivitiesComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editactivitiesform",{"_index":840,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["editactivity",{"_index":112,"title":{},"body":{"injectables/ActivityService.html":{},"components/EditActivitiesComponent.html":{},"injectables/MockActivityService.html":{},"components/TableActivitiesComponent.html":{}}}],["editactivity(activity",{"_index":2323,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["editactivity(id",{"_index":153,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["editada",{"_index":1964,"title":{},"body":{"injectables/MockCityService.html":{}}}],["editado",{"_index":1992,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["editar",{"_index":908,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{}}}],["editcity",{"_index":817,"title":{},"body":{"injectables/CityService.html":{},"components/ListCitiesComponent.html":{},"injectables/MockCityService.html":{}}}],["editcity(city",{"_index":1455,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["editcity(id",{"_index":825,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["editinterest",{"_index":1312,"title":{},"body":{"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockInterestService.html":{}}}],["editinterest(id",{"_index":1321,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["editinterest(interest",{"_index":1531,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["edituser",{"_index":1577,"title":{},"body":{"components/ListUserComponent.html":{},"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["edituser(id",{"_index":2016,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["edituser(user",{"_index":1581,"title":{},"body":{"components/ListUserComponent.html":{}}}],["edituseradmin",{"_index":1584,"title":{},"body":{"components/ListUserComponent.html":{}}}],["edituseradmincomponent",{"_index":555,"title":{"components/EditUserAdminComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editusercomponent",{"_index":558,"title":{"components/EditUserComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["edituserform",{"_index":1010,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["edituserprofile",{"_index":1118,"title":{},"body":{"components/EditUserComponent.html":{}}}],["eduardo",{"_index":1845,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["ejecuta",{"_index":903,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["el",{"_index":11,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["electrónico",{"_index":1290,"title":{},"body":{"classes/Interest-1.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["element",{"_index":546,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["elimina",{"_index":312,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["eliminada",{"_index":1884,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{}}}],["eliminado",{"_index":316,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{}}}],["eliminar",{"_index":152,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["ellipsis",{"_index":524,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["elogio",{"_index":1838,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["elogio.jpg",{"_index":1859,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["email",{"_index":1291,"title":{},"body":{"classes/Interest-1.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockUserService.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["email_user",{"_index":2181,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["emitevent",{"_index":2276,"title":{},"body":{"components/SignUpComponent.html":{}}}],["emoji",{"_index":542,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["en",{"_index":73,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"classes/Interest-1.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["encabezado",{"_index":192,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["encarga",{"_index":203,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/LocalStorageService.html":{},"injectables/NotificationService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["encargado",{"_index":291,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["encargar",{"_index":2132,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["encontrado",{"_index":389,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["encuentra",{"_index":36,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/LocalStorageService.html":{}}}],["encuentre",{"_index":2491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["end",{"_index":1101,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"index.html":{}}}],["endpoint",{"_index":181,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["english",{"_index":1777,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["enlaces",{"_index":1767,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["entidad",{"_index":14,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"classes/City.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"classes/JwtModel.html":{},"classes/Rol.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["entre",{"_index":263,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"miscellaneous/functions.html":{}}}],["enviada",{"_index":147,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["enviado",{"_index":288,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["enviar",{"_index":311,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["environment",{"_index":2439,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envía",{"_index":286,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["erigida",{"_index":1851,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["err",{"_index":455,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"interceptors/InterceptorService.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["err.error.mensaje",{"_index":456,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/SignUpComponent.html":{}}}],["err.error.mensaje.includes(\"ya",{"_index":467,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["err.status",{"_index":1268,"title":{},"body":{"interceptors/InterceptorService.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["error",{"_index":528,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"injectables/MockActivityService.html":{},"components/SignUpComponent.html":{}}}],["error_activity_repeated",{"_index":469,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["error_city_council",{"_index":466,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["error_delete_message",{"_index":1180,"title":{},"body":{"components/EditUserComponent.html":{}}}],["erroraddcity",{"_index":1438,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["erroraddinterest",{"_index":1516,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["erroreditcity",{"_index":1439,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["erroreditinterest",{"_index":1517,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["errormessage",{"_index":387,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["es",{"_index":306,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationComponent.html":{},"components/SignUpComponent.html":{}}}],["escriba",{"_index":386,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["escultor",{"_index":1843,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["escultura",{"_index":1840,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["esculturas",{"_index":1403,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["ese",{"_index":987,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["españa",{"_index":1835,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["especifica",{"_index":67,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{}}}],["est",{"_index":1764,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["estatua",{"_index":1865,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["este",{"_index":2076,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["estén",{"_index":2488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etiqueta",{"_index":876,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["evaluate",{"_index":1343,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate'},{'name",{"_index":564,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["evaluate.component",{"_index":721,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["evaluate.component.html",{"_index":1345,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate.component.scss",{"_index":1344,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate.component.ts",{"_index":1342,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"coverage.html":{}}}],["evaluate.component.ts:102",{"_index":1356,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate.component.ts:29",{"_index":1363,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate.component.ts:33",{"_index":1364,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate.component.ts:37",{"_index":1365,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate.component.ts:41",{"_index":1352,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate.component.ts:69",{"_index":1353,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate.component.ts:91",{"_index":1360,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evaluate/list",{"_index":720,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ListActivitiesEvaluateComponent.html":{},"coverage.html":{}}}],["evaluates",{"_index":1386,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["event",{"_index":302,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["event.checked",{"_index":2173,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["event.files[0",{"_index":413,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["event.value",{"_index":1377,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["evento",{"_index":303,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["example",{"_index":1115,"title":{},"body":{"components/EditUserComponent.html":{}}}],["execute",{"_index":2526,"title":{},"body":{"index.html":{}}}],["existe",{"_index":458,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["expectedrol",{"_index":764,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/RoleGuardService.html":{}}}],["expectedrol.indexof(this.rol",{"_index":2228,"title":{},"body":{"guards/RoleGuardService.html":{}}}],["export",{"_index":62,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{}}}],["exports",{"_index":609,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":78,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{}}}],["extensión",{"_index":66,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{}}}],["eyjhbgcioijiuzuxmij9.eyjzdwiioijhzg1pbkblbwfpbc5jb20ilcjst0xfuyi6iljptevfqurnsu4suk9mrv9vu0vsiiwiawf0ijoxnje5nji2odq1lcjlehaioje2mtk2mza0ndv9.pl_io9pbx38yl2juzxb4uabzfix64n657neg7fhten3dguhtp_iguoze0pabmk55bnw9dftqbsbtdwjqfhhdkq",{"_index":1937,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["eyjhbgcioijiuzuxmij9.eyjzdwiioijhzg1pbkblbwfpbc5jb20ilcjst0xfuyi6iljptevfvvnfuiisimlhdci6mtyxotyynjg0nswizxhwijoxnje5njmwndq1fq.g9lo7n_qfylwn6qusijfo",{"_index":1933,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["f",{"_index":2186,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["f.length",{"_index":2195,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["fa",{"_index":2205,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["fall",{"_index":1693,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["fallos",{"_index":858,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["false",{"_index":415,"title":{},"body":{"components/AddActivityComponent.html":{},"guards/AuthGuardService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":530,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["fb",{"_index":851,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["fecha",{"_index":1292,"title":{},"body":{"classes/Interest-1.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["feedaf",{"_index":1395,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["ffcdd2",{"_index":1404,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["ffd8b2",{"_index":1410,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["ficheros",{"_index":315,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["field",{"_index":1593,"title":{},"body":{"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["fieldset",{"_index":1202,"title":{},"body":{"components/EditUserComponent.html":{}}}],["fielset_edit_user",{"_index":1103,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{}}}],["filename",{"_index":65,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/EditActivitiesComponent.html":{},"injectables/MockActivityService.html":{}}}],["files",{"_index":239,"title":{},"body":{"components/AddActivityComponent.html":{},"index.html":{}}}],["fileupload",{"_index":518,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["fileuploadaddactivity",{"_index":517,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["fileuploadeditactivity",{"_index":1006,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["fileuploadmodule",{"_index":669,"title":{},"body":{"modules/AppModule.html":{}}}],["filter_container",{"_index":2215,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["filterservice",{"_index":2105,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["filtros",{"_index":2108,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["flag",{"_index":2520,"title":{},"body":{"index.html":{}}}],["flex",{"_index":500,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["float",{"_index":2306,"title":{},"body":{"components/SignUpComponent.html":{}}}],["font",{"_index":529,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"dependencies.html":{}}}],["forkjoin",{"_index":918,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["forkjoin([this.activitiesservice.getrecommendedactivities(user[0].id)]).pipe",{"_index":2152,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["forkjoin([this.activityservice.getratedactivities(user[0].id)]).pipe",{"_index":1373,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["forkjoin([this.rolesservice.getroles",{"_index":1041,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["forkjoin([this.userservice.getuser(user[0].id)]).pipe",{"_index":1149,"title":{},"body":{"components/EditUserComponent.html":{}}}],["form",{"_index":1001,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["form_add_activity_container",{"_index":498,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formaddactivity",{"_index":240,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formaddcity",{"_index":1440,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["formaddinterest",{"_index":1518,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["formarray",{"_index":1139,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["formbuilder",{"_index":248,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["formcontrol",{"_index":258,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["formcontrol(0",{"_index":2282,"title":{},"body":{"components/SignUpComponent.html":{}}}],["formcontrol(interest.nameinterest",{"_index":2281,"title":{},"body":{"components/SignUpComponent.html":{}}}],["formdata",{"_index":142,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/MockActivityService.html":{}}}],["formdata).subscribe",{"_index":980,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["formdata.append('address",{"_index":430,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formdata.append('city",{"_index":426,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formdata.append('description",{"_index":420,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formdata.append('image",{"_index":417,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formdata.append('interest",{"_index":428,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formdata.append('latitude",{"_index":422,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formdata.append('longitude",{"_index":424,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formdata.append('name",{"_index":418,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["formdata.get('address",{"_index":1894,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["formdata.get('city",{"_index":1892,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["formdata.get('description",{"_index":1889,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["formdata.get('interest",{"_index":1893,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["formdata.get('latitude",{"_index":1890,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["formdata.get('longitude",{"_index":1891,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["formdata.get('name",{"_index":1888,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["formeditcity",{"_index":1441,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["formeditinterest",{"_index":1519,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["formgroup",{"_index":257,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["formsmodule",{"_index":637,"title":{},"body":{"modules/AppModule.html":{}}}],["formtoratingactivity",{"_index":2097,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["formulario",{"_index":284,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/functions.html":{}}}],["fortawesome/fontawesome",{"_index":2449,"title":{},"body":{"dependencies.html":{}}}],["frame",{"_index":1734,"title":{},"body":{"components/MapComponent.html":{}}}],["free",{"_index":2450,"title":{},"body":{"dependencies.html":{}}}],["fue",{"_index":1676,"title":{},"body":{"components/LoginComponent.html":{}}}],["full",{"_index":760,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["función",{"_index":2480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["function",{"_index":392,"title":{},"body":{"components/AddActivityComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"coverage.html":{}}}],["function(results",{"_index":944,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["functions",{"_index":2474,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":2531,"title":{},"body":{"index.html":{}}}],["generate",{"_index":2511,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2496,"title":{},"body":{"index.html":{}}}],["geocoder",{"_index":353,"title":{},"body":{"components/AddActivityComponent.html":{},"dependencies.html":{}}}],["getactivities",{"_index":113,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["getactivity",{"_index":114,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["getactivity(id",{"_index":161,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["getcities",{"_index":818,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["getemailuser",{"_index":1625,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getimages",{"_index":1210,"title":{},"body":{"injectables/ImagesService.html":{}}}],["getimages(namephoto",{"_index":1212,"title":{},"body":{"injectables/ImagesService.html":{}}}],["getinterest",{"_index":1135,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["getinterestbyuser",{"_index":1313,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["getinterestbyuser(id",{"_index":1323,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["getinterests",{"_index":1314,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["getmessages",{"_index":1663,"title":{},"body":{"components/LoginComponent.html":{}}}],["getratedactivities",{"_index":115,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["getratedactivities(iduser",{"_index":163,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["getratedactivities(user",{"_index":1805,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["getrecommendedactivities",{"_index":116,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["getrecommendedactivities(iduser",{"_index":168,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["getroles",{"_index":1996,"title":{},"body":{"injectables/MockRolService.html":{},"injectables/RolService.html":{}}}],["getrolesuser",{"_index":1626,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getting",{"_index":2492,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":1627,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getuser",{"_index":2011,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["getuser(id",{"_index":2018,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["getuserforadmin",{"_index":2012,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["getuserforadmin(id",{"_index":2020,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["getusers",{"_index":2013,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["gidtd2a_uhhdhlvjhv6ldigga2gtw",{"_index":1936,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["gijón",{"_index":1820,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{}}}],["go",{"_index":2534,"title":{},"body":{"index.html":{}}}],["grandes",{"_index":1849,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["graph",{"_index":2542,"title":{},"body":{"modules.html":{}}}],["greenicon",{"_index":2156,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["greenicon}).addto(this.map).bindpopup(popupcontent",{"_index":2167,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["grid",{"_index":504,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["group",{"_index":1097,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["guard",{"_index":776,"title":{"guards/AuthGuardService.html":{},"guards/IsLogginInGuardService.html":{},"guards/RoleGuardService.html":{}},"body":{"coverage.html":{}}}],["guard.service",{"_index":750,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guard.service.ts",{"_index":779,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/IsLogginInGuardService.html":{},"guards/RoleGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:10",{"_index":2224,"title":{},"body":{"guards/RoleGuardService.html":{}}}],["guard.service.ts:12",{"_index":787,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/IsLogginInGuardService.html":{}}}],["guard.service.ts:14",{"_index":2225,"title":{},"body":{"guards/RoleGuardService.html":{}}}],["guard.service.ts:8",{"_index":782,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/IsLogginInGuardService.html":{}}}],["guard/auth",{"_index":749,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"coverage.html":{}}}],["guarda",{"_index":299,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["guards",{"_index":777,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/IsLogginInGuardService.html":{},"guards/RoleGuardService.html":{},"overview.html":{}}}],["guards/auth",{"_index":748,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/isloggininguard/is",{"_index":752,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/roleguard/role",{"_index":755,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guía",{"_index":1831,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["h1",{"_index":487,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationComponent.html":{},"components/SignUpComponent.html":{}}}],["ha",{"_index":343,"title":{},"body":{"components/AddActivityComponent.html":{},"components/ListInterestComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{}}}],["haber",{"_index":2193,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["hace",{"_index":2115,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["hacer",{"_index":125,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["han",{"_index":388,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["handleautherror",{"_index":1247,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["hay",{"_index":986,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/SignUpComponent.html":{}}}],["header",{"_index":1510,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["headers",{"_index":197,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":484,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["help",{"_index":2532,"title":{},"body":{"index.html":{}}}],["helvetica",{"_index":537,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["hidden",{"_index":523,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["hidedialogcity",{"_index":1444,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["hidedialogeditcity",{"_index":1445,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["hidedialogeditinterest",{"_index":1520,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["hidedialoginterest",{"_index":1521,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["horizontal",{"_index":1782,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["horizonte",{"_index":1839,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["hormigón",{"_index":1841,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["host",{"_index":1781,"title":{},"body":{"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["html",{"_index":545,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["http",{"_index":194,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":2505,"title":{},"body":{"index.html":{}}}],["http://localhost:8090/api/activity",{"_index":178,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["http://localhost:8090/api/auth",{"_index":807,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockAuthService.html":{}}}],["http://localhost:8090/api/city",{"_index":828,"title":{},"body":{"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["http://localhost:8090/api/interest",{"_index":1326,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["http://localhost:8090/api/rol",{"_index":2002,"title":{},"body":{"injectables/MockRolService.html":{},"injectables/RolService.html":{}}}],["http://localhost:8090/api/user",{"_index":2035,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["http://localhost:8090/images",{"_index":1215,"title":{},"body":{"injectables/ImagesService.html":{}}}],["http_interceptors",{"_index":1258,"title":{},"body":{"interceptors/InterceptorService.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":120,"title":{},"body":{"injectables/ActivityService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":653,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1259,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["httphandler",{"_index":1255,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["httpheaders",{"_index":184,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["httpheaders({'content",{"_index":199,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptor",{"_index":1260,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["httprequest",{"_index":1253,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["httptranslateloader",{"_index":739,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httptranslateloader(http",{"_index":741,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["i.nameinterest",{"_index":411,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["i18n",{"_index":1746,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["ia",{"_index":970,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["icon",{"_index":356,"title":{},"body":{"components/AddActivityComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["iconsize",{"_index":2160,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["iconurl",{"_index":2158,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["id",{"_index":20,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"classes/Rol.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{}}}],["identifica",{"_index":1762,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["identificador",{"_index":45,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"classes/Rol.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{}}}],["identifier",{"_index":2383,"title":{},"body":{"coverage.html":{}}}],["idioma",{"_index":1758,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["iduser",{"_index":167,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["ie8",{"_index":999,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["iglesia",{"_index":1824,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["iglesias",{"_index":1393,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockInterestService.html":{}}}],["igual",{"_index":2490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iguales",{"_index":892,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["image",{"_index":473,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["image/jpg",{"_index":1836,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["imagen",{"_index":56,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["imagesservice",{"_index":1207,"title":{"injectables/ImagesService.html":{}},"body":{"injectables/ImagesService.html":{},"coverage.html":{}}}],["imagesurl",{"_index":1209,"title":{},"body":{"injectables/ImagesService.html":{}}}],["img",{"_index":877,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["img_logo",{"_index":1716,"title":{},"body":{"components/LoginComponent.html":{}}}],["imgview",{"_index":2352,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["impide",{"_index":2253,"title":{},"body":{"components/SignUpComponent.html":{}}}],["implements",{"_index":230,"title":{},"body":{"components/AddActivityComponent.html":{},"guards/AuthGuardService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["import",{"_index":182,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":621,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["include",{"_index":478,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["incluir",{"_index":2055,"title":{},"body":{"injectables/NotificationService.html":{}}}],["incluye",{"_index":143,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":341,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{}}}],["info.authorities",{"_index":2080,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["info.nombreusuario",{"_index":2075,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["info.token",{"_index":2077,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["infointerest",{"_index":1154,"title":{},"body":{"components/EditUserComponent.html":{}}}],["infointerest.interestid",{"_index":1157,"title":{},"body":{"components/EditUserComponent.html":{}}}],["infointerest.nameinterest",{"_index":1158,"title":{},"body":{"components/EditUserComponent.html":{}}}],["infointerest.priority",{"_index":1160,"title":{},"body":{"components/EditUserComponent.html":{}}}],["infomessage",{"_index":241,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["información",{"_index":71,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["information",{"_index":561,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["informationactivities",{"_index":2333,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["informationactivitiescomponent",{"_index":560,"title":{"components/InformationActivitiesComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inherited",{"_index":92,"title":{},"body":{"classes/ActivityRecommended.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{}}}],["iniciado",{"_index":2081,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["inicializar",{"_index":322,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["iniciar",{"_index":1695,"title":{},"body":{"components/LoginComponent.html":{}}}],["inicio",{"_index":1691,"title":{},"body":{"components/LoginComponent.html":{},"components/MenuBarComponent.html":{}}}],["initmap",{"_index":1720,"title":{},"body":{"components/MapComponent.html":{}}}],["injectable",{"_index":103,"title":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/LocalStorageService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ActivityService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"injectables/LocalStorageService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":105,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/LocalStorageService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1613,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["input",{"_index":2312,"title":{},"body":{"components/SignUpComponent.html":{}}}],["input_container",{"_index":501,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["inputnumbermodule",{"_index":647,"title":{},"body":{"modules/AppModule.html":{}}}],["inputtextareamodule",{"_index":671,"title":{},"body":{"modules/AppModule.html":{}}}],["inputtextmodule",{"_index":635,"title":{},"body":{"modules/AppModule.html":{}}}],["intenta",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{},"classes/Interest-1.html":{},"injectables/MockAuthService.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["inter.id",{"_index":1988,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["intercept",{"_index":1248,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["intercept(req",{"_index":1252,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["interceptor",{"_index":1243,"title":{"interceptors/InterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptorprovider",{"_index":655,"title":{},"body":{"modules/AppModule.html":{},"interceptors/InterceptorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptors",{"_index":1245,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["interceptors/interceptor.service",{"_index":656,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptorservice",{"_index":1244,"title":{"interceptors/InterceptorService.html":{}},"body":{"interceptors/InterceptorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["intereses",{"_index":261,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"classes/Interest-1.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockInterestService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["interest",{"_index":21,"title":{"classes/Interest.html":{},"classes/Interest-1.html":{}},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{}}}],["interest'},{'name",{"_index":568,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["interest).pipe",{"_index":1566,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component",{"_index":680,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["interest.component.html",{"_index":1514,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.scss",{"_index":1513,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts",{"_index":1512,"title":{},"body":{"components/ListInterestComponent.html":{},"coverage.html":{}}}],["interest.component.ts:101",{"_index":1539,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:105",{"_index":1538,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:129",{"_index":1534,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:134",{"_index":1526,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:144",{"_index":1528,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:175",{"_index":1532,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:183",{"_index":1537,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:204",{"_index":1527,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:208",{"_index":1533,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:24",{"_index":1546,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:28",{"_index":1540,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:32",{"_index":1544,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:36",{"_index":1542,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:40",{"_index":1541,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:44",{"_index":1545,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:48",{"_index":1523,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:79",{"_index":1536,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.component.ts:93",{"_index":1535,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["interest.id",{"_index":1332,"title":{},"body":{"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockInterestService.html":{}}}],["interest.nameinterest",{"_index":1559,"title":{},"body":{"components/ListInterestComponent.html":{},"injectables/MockInterestService.html":{}}}],["interest.service",{"_index":1980,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interest/list",{"_index":679,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ListInterestComponent.html":{},"coverage.html":{}}}],["interestarray",{"_index":2234,"title":{},"body":{"components/SignUpComponent.html":{}}}],["interestarray[i].nameinterest",{"_index":2304,"title":{},"body":{"components/SignUpComponent.html":{}}}],["interestbyuser",{"_index":1281,"title":{"classes/InterestByUser.html":{}},"body":{"classes/Interest.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"coverage.html":{}}}],["interestid",{"_index":1156,"title":{},"body":{"components/EditUserComponent.html":{},"classes/Interest.html":{},"classes/InterestByUser.html":{},"injectables/MockUserService.html":{}}}],["interestlist",{"_index":1967,"title":{},"body":{"injectables/MockInterestService.html":{},"components/RecommendationComponent.html":{}}}],["interests",{"_index":1189,"title":{},"body":{"components/EditUserComponent.html":{},"components/MenuBarComponent.html":{}}}],["interestservice",{"_index":250,"title":{"injectables/InterestService.html":{}},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockInterestService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["interestservice:24",{"_index":1978,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interestservice:36",{"_index":1976,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interestservice:45",{"_index":1972,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interestservice:54",{"_index":1973,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interestservice:63",{"_index":1975,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interestservice:73",{"_index":1974,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interesttoadd",{"_index":1982,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interesttoedit",{"_index":1990,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["interesturl",{"_index":1309,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{}}}],["internacionalización",{"_index":270,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["interés",{"_index":47,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"injectables/CityService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{},"miscellaneous/functions.html":{}}}],["introducidos",{"_index":283,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["iscontinuefail",{"_index":2235,"title":{},"body":{"components/SignUpComponent.html":{}}}],["isequivalent",{"_index":844,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["isequivalent(a",{"_index":884,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["isloggininguardservice",{"_index":751,"title":{"guards/IsLogginInGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/IsLogginInGuardService.html":{},"coverage.html":{}}}],["islogin",{"_index":1742,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["isloginfail",{"_index":1661,"title":{},"body":{"components/LoginComponent.html":{}}}],["isregisterfail",{"_index":2236,"title":{},"body":{"components/SignUpComponent.html":{}}}],["item",{"_index":1389,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["item.label",{"_index":1384,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["item.value.nameinterest",{"_index":1190,"title":{},"body":{"components/EditUserComponent.html":{}}}],["items",{"_index":1390,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["jos",{"_index":1826,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["jquery",{"_index":2459,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":889,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/InterestService.html":{}}}],["json.stringify(array2sort[index",{"_index":1184,"title":{},"body":{"components/EditUserComponent.html":{}}}],["json.stringify(value",{"_index":1183,"title":{},"body":{"components/EditUserComponent.html":{}}}],["justify",{"_index":1099,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/MenuBarComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["jwt",{"_index":1643,"title":{},"body":{"injectables/LocalStorageService.html":{},"dependencies.html":{}}}],["jwt_decode",{"_index":1642,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["jwt_decode(token",{"_index":1657,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["jwtmodel",{"_index":189,"title":{"classes/JwtModel.html":{}},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"classes/JwtModel.html":{},"injectables/MockAuthService.html":{},"coverage.html":{}}}],["karma",{"_index":2528,"title":{},"body":{"index.html":{}}}],["key",{"_index":460,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{}}}],["keydetail",{"_index":1177,"title":{},"body":{"components/EditUserComponent.html":{}}}],["keysummary",{"_index":1175,"title":{},"body":{"components/EditUserComponent.html":{}}}],["keytranslate",{"_index":465,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["l",{"_index":350,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["l.control.geocoder(opciones).on('markgeocode",{"_index":391,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["l.icon",{"_index":2157,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["l.map('map",{"_index":1726,"title":{},"body":{"components/MapComponent.html":{}}}],["l.map('mapactivity').setview([43.333333",{"_index":376,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["l.map('mapactivityedit').setview([response2.latitude",{"_index":937,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["l.map('mapactivityrecommendation",{"_index":2145,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["l.marker([activity.latitude",{"_index":2165,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["l.tilelayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":380,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["la",{"_index":38,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["label",{"_index":1052,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/SignUpComponent.html":{}}}],["laboral",{"_index":1818,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["lang",{"_index":1759,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["langchangeevent",{"_index":1140,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["language",{"_index":1775,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["las",{"_index":83,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockInterestService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["latitud",{"_index":50,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["latitude",{"_index":22,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{}}}],["le",{"_index":1751,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["leaflet",{"_index":351,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{},"dependencies.html":{}}}],["leaflet/dist/images/marker",{"_index":354,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["left",{"_index":495,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/SignUpComponent.html":{}}}],["left_container",{"_index":994,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["legacy",{"_index":775,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["legend",{"_index":544,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"overview.html":{}}}],["legend_fieldset",{"_index":1105,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["letter",{"_index":1422,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["librería",{"_index":266,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["light",{"_index":1785,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["link",{"_index":1791,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["link.active",{"_index":1789,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["link:hover",{"_index":1787,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["list",{"_index":210,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["list/user",{"_index":1333,"title":{},"body":{"injectables/InterestService.html":{}}}],["list_activities",{"_index":2351,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["list_user",{"_index":1607,"title":{},"body":{"components/ListUserComponent.html":{}}}],["lista",{"_index":159,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/CityService.html":{},"classes/Interest-1.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{}}}],["listactivities",{"_index":1346,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{}}}],["listactivitiesevaluatecomponent",{"_index":562,"title":{"components/ListActivitiesEvaluateComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listactivitiesrated",{"_index":1798,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["listbox",{"_index":1026,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["listboxmodule",{"_index":734,"title":{},"body":{"modules/AppModule.html":{}}}],["listcities",{"_index":1940,"title":{},"body":{"injectables/MockCityService.html":{}}}],["listcitiescomponent",{"_index":565,"title":{"components/ListCitiesComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listinterestcomponent",{"_index":567,"title":{"components/ListInterestComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listrecommendedactivities",{"_index":1799,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["listuser",{"_index":1024,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["listusercomponent",{"_index":569,"title":{"components/ListUserComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listusers",{"_index":2008,"title":{},"body":{"injectables/MockUserService.html":{}}}],["literal",{"_index":53,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{}}}],["llamaba",{"_index":1900,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["lo",{"_index":285,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["loadactivities",{"_index":2317,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["loadcities",{"_index":1446,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["loader",{"_index":704,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["loadinterest",{"_index":245,"title":{},"body":{"components/AddActivityComponent.html":{},"components/ListInterestComponent.html":{},"components/SignUpComponent.html":{}}}],["locale_id",{"_index":626,"title":{},"body":{"modules/AppModule.html":{}}}],["localidad",{"_index":40,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"classes/City.html":{},"injectables/CityService.html":{},"injectables/MockCityService.html":{}}}],["localidades",{"_index":260,"title":{},"body":{"components/AddActivityComponent.html":{},"injectables/CityService.html":{},"injectables/MockCityService.html":{},"components/RecommendationMapComponent.html":{}}}],["localizada",{"_index":37,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{}}}],["localstorage",{"_index":1126,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"miscellaneous/variables.html":{}}}],["localstorage.getitem(token_key",{"_index":1650,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":781,"title":{"injectables/LocalStorageService.html":{}},"body":{"guards/AuthGuardService.html":{},"components/EditUserComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{},"coverage.html":{}}}],["log_out",{"_index":1779,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["loggin",{"_index":753,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/IsLogginInGuardService.html":{},"coverage.html":{}}}],["login",{"_index":758,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MockAuthService.html":{},"components/SignUpComponent.html":{}}}],["login'},{'name",{"_index":571,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["login(user",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockAuthService.html":{}}}],["login.component.html",{"_index":1660,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1659,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":630,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":570,"title":{"components/LoginComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1662,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":1628,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/MenuBarComponent.html":{}}}],["longitud",{"_index":52,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["longitude",{"_index":23,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{}}}],["los",{"_index":275,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"classes/Interest-1.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"miscellaneous/functions.html":{}}}],["luis",{"_index":1827,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["lvarez",{"_index":1828,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["map",{"_index":375,"title":{},"body":{"components/AddActivityComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["map'},{'name",{"_index":573,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["map(data",{"_index":1482,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["map.component",{"_index":731,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["map.component.html",{"_index":1719,"title":{},"body":{"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["map.component.scss",{"_index":1718,"title":{},"body":{"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["map.component.ts",{"_index":2092,"title":{},"body":{"components/RecommendationMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:101",{"_index":2121,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:162",{"_index":2111,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:194",{"_index":2124,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:206",{"_index":2131,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:233",{"_index":2130,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:252",{"_index":2128,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:31",{"_index":2135,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:35",{"_index":2136,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:39",{"_index":2141,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:43",{"_index":2142,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:47",{"_index":2139,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:51",{"_index":2140,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:55",{"_index":2138,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map.component.ts:59",{"_index":2106,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["map/map.component",{"_index":657,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["map/recommendation",{"_index":730,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RecommendationMapComponent.html":{},"coverage.html":{}}}],["map_container",{"_index":502,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["map_recommendation",{"_index":2203,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["mapa",{"_index":325,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["mapactivity",{"_index":513,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["mapactivityedit",{"_index":1004,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["mapactivityrecommendation",{"_index":2211,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["mapcomponent",{"_index":572,"title":{"components/MapComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["marcador",{"_index":899,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["marcadores",{"_index":2114,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["margaride",{"_index":1829,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["margin",{"_index":494,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["marker",{"_index":2164,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["markerlist",{"_index":2098,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["marqués",{"_index":1872,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["match",{"_index":1612,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["matching",{"_index":88,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["maux",{"_index":436,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["maux.detail",{"_index":439,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["maux.summary",{"_index":437,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["max",{"_index":996,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{}}}],["maxwidth",{"_index":2168,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["maxzoom",{"_index":1728,"title":{},"body":{"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["mayor",{"_index":2484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["media",{"_index":82,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{}}}],["mensaje",{"_index":295,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["mensajes",{"_index":276,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["menu",{"_index":575,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["menubarcomponent",{"_index":574,"title":{"components/MenuBarComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menubarmodule",{"_index":645,"title":{},"body":{"modules/AppModule.html":{}}}],["mergemap",{"_index":1137,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["mergemap(message",{"_index":1503,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["message",{"_index":435,"title":{},"body":{"components/AddActivityComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["message_error",{"_index":1112,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["message_error_age",{"_index":1200,"title":{},"body":{"components/EditUserComponent.html":{}}}],["message_error_sign_container",{"_index":2311,"title":{},"body":{"components/SignUpComponent.html":{}}}],["message_error_username",{"_index":1201,"title":{},"body":{"components/EditUserComponent.html":{}}}],["message_file_required",{"_index":474,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["message_info_map",{"_index":475,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["message_rate_activity",{"_index":2200,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["message_valuation_container",{"_index":2314,"title":{},"body":{"components/SignUpComponent.html":{}}}],["message_valuation_one",{"_index":2302,"title":{},"body":{"components/SignUpComponent.html":{}}}],["message_valuation_two",{"_index":2303,"title":{},"body":{"components/SignUpComponent.html":{}}}],["messagemodule",{"_index":651,"title":{},"body":{"modules/AppModule.html":{}}}],["messagerateactivity",{"_index":2212,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["messages",{"_index":493,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["messageservice",{"_index":253,"title":{},"body":{"components/AddActivityComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["messagesmodule",{"_index":707,"title":{},"body":{"modules/AppModule.html":{}}}],["metadata",{"_index":232,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["metadataimage",{"_index":24,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/MockActivityService.html":{}}}],["metadatos",{"_index":55,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{}}}],["methods",{"_index":108,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["mime",{"_index":964,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["mimestring",{"_index":965,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["mimetype",{"_index":70,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/MockActivityService.html":{}}}],["min",{"_index":483,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["minpasslength",{"_index":2263,"title":{},"body":{"components/SignUpComponent.html":{}}}],["miscellaneous",{"_index":2473,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["misma",{"_index":131,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["mock.ts",{"_index":1797,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"coverage.html":{}}}],["mock.ts:10",{"_index":1864,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockRolService.html":{}}}],["mock.ts:106",{"_index":1803,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:11",{"_index":1977,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["mock.ts:110",{"_index":1801,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:117",{"_index":1800,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:140",{"_index":1806,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:144",{"_index":1807,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:148",{"_index":1802,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:16",{"_index":1926,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["mock.ts:175",{"_index":1804,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:180",{"_index":1808,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:20",{"_index":1944,"title":{},"body":{"injectables/MockCityService.html":{}}}],["mock.ts:21",{"_index":1997,"title":{},"body":{"injectables/MockRolService.html":{}}}],["mock.ts:22",{"_index":1971,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["mock.ts:24",{"_index":1941,"title":{},"body":{"injectables/MockCityService.html":{}}}],["mock.ts:26",{"_index":1968,"title":{},"body":{"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{}}}],["mock.ts:35",{"_index":1942,"title":{},"body":{"injectables/MockCityService.html":{}}}],["mock.ts:37",{"_index":1969,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["mock.ts:42",{"_index":1943,"title":{},"body":{"injectables/MockCityService.html":{}}}],["mock.ts:44",{"_index":1970,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["mock.ts:46",{"_index":1874,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:47",{"_index":2022,"title":{},"body":{"injectables/MockUserService.html":{}}}],["mock.ts:51",{"_index":2015,"title":{},"body":{"injectables/MockUserService.html":{}}}],["mock.ts:58",{"_index":2019,"title":{},"body":{"injectables/MockUserService.html":{}}}],["mock.ts:62",{"_index":2017,"title":{},"body":{"injectables/MockUserService.html":{}}}],["mock.ts:67",{"_index":1877,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["mock.ts:72",{"_index":2021,"title":{},"body":{"injectables/MockUserService.html":{}}}],["mock.ts:9",{"_index":1950,"title":{},"body":{"injectables/MockCityService.html":{},"injectables/MockUserService.html":{}}}],["mockactivityservice",{"_index":1794,"title":{"injectables/MockActivityService.html":{}},"body":{"injectables/MockActivityService.html":{},"coverage.html":{}}}],["mockauthservice",{"_index":1924,"title":{"injectables/MockAuthService.html":{}},"body":{"injectables/MockAuthService.html":{},"coverage.html":{}}}],["mockcityservice",{"_index":1938,"title":{"injectables/MockCityService.html":{}},"body":{"injectables/MockCityService.html":{},"coverage.html":{}}}],["mockinterestservice",{"_index":1965,"title":{"injectables/MockInterestService.html":{}},"body":{"injectables/MockInterestService.html":{},"coverage.html":{}}}],["mockrolservice",{"_index":1993,"title":{"injectables/MockRolService.html":{}},"body":{"injectables/MockRolService.html":{},"coverage.html":{}}}],["mockuserservice",{"_index":2006,"title":{"injectables/MockUserService.html":{}},"body":{"injectables/MockUserService.html":{},"coverage.html":{}}}],["models/activity",{"_index":191,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{}}}],["models/city",{"_index":829,"title":{},"body":{"injectables/CityService.html":{},"components/ListCitiesComponent.html":{}}}],["models/interest",{"_index":1327,"title":{},"body":{"injectables/InterestService.html":{},"injectables/MockInterestService.html":{},"components/RecommendationComponent.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["models/jwt_model",{"_index":190,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/MockAuthService.html":{}}}],["models/rol",{"_index":1032,"title":{},"body":{"components/EditUserAdminComponent.html":{},"injectables/MockRolService.html":{},"injectables/RolService.html":{}}}],["models/user",{"_index":187,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditUserAdminComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockAuthService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/UserService.html":{}}}],["modifica",{"_index":2112,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["modificada",{"_index":1919,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["modificado",{"_index":2047,"title":{},"body":{"injectables/MockUserService.html":{}}}],["modificar",{"_index":156,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/UserService.html":{}}}],["module",{"_index":602,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":604,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":2533,"title":{},"body":{"index.html":{}}}],["mostradas",{"_index":2058,"title":{},"body":{"injectables/NotificationService.html":{}}}],["mostrados",{"_index":278,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["mostrar",{"_index":294,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["muestra",{"_index":331,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["muestran",{"_index":2137,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["muestre",{"_index":1070,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["multi",{"_index":1277,"title":{},"body":{"interceptors/InterceptorService.html":{},"miscellaneous/variables.html":{}}}],["multiselect",{"_index":2213,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["multiselectmodule",{"_index":732,"title":{},"body":{"modules/AppModule.html":{}}}],["museos",{"_index":1397,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockInterestService.html":{}}}],["método",{"_index":134,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["métodos",{"_index":1124,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["métódo",{"_index":1671,"title":{},"body":{"components/LoginComponent.html":{}}}],["nacimiento",{"_index":1293,"title":{},"body":{"classes/Interest-1.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["name",{"_index":25,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name_activity",{"_index":471,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["name_city",{"_index":1507,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["name_city_repetead",{"_index":1509,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["name_city_required",{"_index":1508,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["name_interest",{"_index":1571,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["name_interest_repetead",{"_index":1573,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["name_interest_required",{"_index":1572,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["name_required",{"_index":1091,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["nameactivity",{"_index":444,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["namecity",{"_index":1484,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["nameinterest",{"_index":373,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"components/ListInterestComponent.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["namephoto",{"_index":1214,"title":{},"body":{"injectables/ImagesService.html":{}}}],["nameuser",{"_index":1066,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["nav",{"_index":1786,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["navbar",{"_index":1784,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["navegación",{"_index":262,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["navegador",{"_index":1127,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["navigate",{"_index":2504,"title":{},"body":{"index.html":{}}}],["necesito",{"_index":2273,"title":{},"body":{"components/SignUpComponent.html":{}}}],["new",{"_index":198,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"injectables/MockUserService.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newitem",{"_index":1155,"title":{},"body":{"components/EditUserComponent.html":{}}}],["next",{"_index":1254,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["next.handle(autreq",{"_index":1273,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["next.handle(autreq).pipe",{"_index":1267,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["ng",{"_index":490,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":627,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":1664,"title":{},"body":{"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["ngoninit",{"_index":246,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["ngx",{"_index":267,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/NotificationService.html":{},"components/TableActivitiesComponent.html":{},"dependencies.html":{}}}],["nofiles",{"_index":242,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["nombre",{"_index":58,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/AddActivityComponent.html":{},"classes/City.html":{},"components/EditActivitiesComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/MockActivityService.html":{},"components/RecommendationComponent.html":{},"classes/Rol.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["nombreusuario",{"_index":2072,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["note",{"_index":2191,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["notificaciones",{"_index":1669,"title":{},"body":{"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SignUpComponent.html":{}}}],["notificación",{"_index":1672,"title":{},"body":{"components/LoginComponent.html":{},"injectables/NotificationService.html":{}}}],["notification",{"_index":1667,"title":{},"body":{"components/LoginComponent.html":{}}}],["notificationservice",{"_index":616,"title":{"injectables/NotificationService.html":{}},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nowrap",{"_index":527,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["nueva",{"_index":141,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/CityService.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/NotificationService.html":{}}}],["nuevas",{"_index":2133,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["nuevo",{"_index":1318,"title":{},"body":{"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/MockInterestService.html":{}}}],["null",{"_index":328,"title":{},"body":{"components/AddActivityComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/LocalStorageService.html":{}}}],["number",{"_index":43,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"classes/City.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationComponent.html":{},"classes/Rol.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["numberrecommendations",{"_index":2064,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["o",{"_index":344,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["object",{"_index":2032,"title":{},"body":{"injectables/MockUserService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(a",{"_index":976,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["object.keys(b",{"_index":978,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["objeto",{"_index":123,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["objetos",{"_index":256,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["obra",{"_index":1848,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["observable",{"_index":145,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["observechanges",{"_index":845,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["observer",{"_index":1899,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["obtener",{"_index":129,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/RolService.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["obtiene",{"_index":320,"title":{},"body":{"components/AddActivityComponent.html":{},"components/ListInterestComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["of(activity",{"_index":1921,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["of(err",{"_index":1271,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["of(this.interestlist",{"_index":1981,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["of(this.listactivities",{"_index":1880,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["of(this.listactivitiesrated",{"_index":1897,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["of(this.listcities",{"_index":1954,"title":{},"body":{"injectables/MockCityService.html":{}}}],["of(this.listrecommendedactivities",{"_index":1898,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["of(this.listusers",{"_index":2038,"title":{},"body":{"injectables/MockUserService.html":{}}}],["of(this.roles",{"_index":2005,"title":{},"body":{"injectables/MockRolService.html":{}}}],["of(this.user",{"_index":2042,"title":{},"body":{"injectables/MockUserService.html":{}}}],["offset",{"_index":1055,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["oneditsubmit",{"_index":1447,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["oninit",{"_index":231,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["onsortchange",{"_index":1350,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["onsortchange(event",{"_index":1355,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["onsubmit",{"_index":1448,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["opciones",{"_index":336,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{}}}],["opción",{"_index":1358,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["opennew",{"_index":2318,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["openpanel",{"_index":1449,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["openpanel($event",{"_index":1463,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["openpaneltorating",{"_index":2101,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["openpaneltorating(activity",{"_index":2123,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["opensecondform",{"_index":2237,"title":{},"body":{"components/SignUpComponent.html":{}}}],["openstreetmap",{"_index":383,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["optional",{"_index":26,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["orden",{"_index":1366,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["ordena",{"_index":1357,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["ordenar",{"_index":1354,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["orderlistmodule",{"_index":677,"title":{},"body":{"modules/AppModule.html":{}}}],["out",{"_index":619,"title":{},"body":{"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":522,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["overview",{"_index":2535,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["oviedo",{"_index":1949,"title":{},"body":{"injectables/MockCityService.html":{}}}],["p",{"_index":492,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["p.email",{"_index":1147,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["p.id",{"_index":1882,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{}}}],["package",{"_index":2442,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":508,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["page",{"_index":2538,"title":{},"body":{"index.html":{}}}],["panel",{"_index":480,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["para",{"_index":139,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":206,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":122,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parque",{"_index":1860,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["parques",{"_index":1409,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["parte",{"_index":2252,"title":{},"body":{"components/SignUpComponent.html":{}}}],["partir",{"_index":282,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["pasar",{"_index":1225,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["password",{"_index":1298,"title":{},"body":{"classes/Interest-1.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{},"miscellaneous/functions.html":{}}}],["passwordconfirm",{"_index":1301,"title":{},"body":{"classes/Interest-1.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["passwordmodule",{"_index":641,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":756,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathimage",{"_index":27,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/MockActivityService.html":{}}}],["pathmatch",{"_index":759,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pelayo",{"_index":1867,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["pelayo.jpg",{"_index":1870,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["permite",{"_index":124,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["personal_info",{"_index":1090,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["personalizados",{"_index":2109,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["peso",{"_index":79,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{}}}],["peticiones",{"_index":126,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["petición",{"_index":137,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["photoimg",{"_index":2162,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["photourl",{"_index":1351,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["photourl(activity",{"_index":1359,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["placeholder",{"_index":385,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["playas",{"_index":1400,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockUserService.html":{}}}],["plaza",{"_index":1871,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["podría",{"_index":2267,"title":{},"body":{"components/SignUpComponent.html":{}}}],["popperjs/core",{"_index":2454,"title":{},"body":{"dependencies.html":{}}}],["popupcontent",{"_index":2163,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["por",{"_index":148,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{}}}],["posibles",{"_index":1368,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["position",{"_index":1731,"title":{},"body":{"components/MapComponent.html":{}}}],["post",{"_index":138,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{}}}],["postrateactivity",{"_index":117,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["postrateactivity(activityrate",{"_index":172,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{}}}],["preferencias",{"_index":1714,"title":{},"body":{"components/LoginComponent.html":{}}}],["prevenir",{"_index":857,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["preview",{"_index":989,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["primeflex",{"_index":2464,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":2466,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":273,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{},"dependencies.html":{}}}],["primeng/api",{"_index":349,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["primeng/button",{"_index":632,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/calendar",{"_index":718,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/card",{"_index":689,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/checkbox",{"_index":706,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/chip",{"_index":727,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/confirmdialog",{"_index":663,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/dataview",{"_index":723,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/dialog",{"_index":668,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/dropdown",{"_index":650,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/dynamicdialog",{"_index":693,"title":{},"body":{"modules/AppModule.html":{},"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["primeng/fileupload",{"_index":670,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/inputnumber",{"_index":648,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/inputtext",{"_index":636,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/inputtextarea",{"_index":672,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/listbox",{"_index":735,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/menubar",{"_index":646,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/message",{"_index":652,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/messages",{"_index":708,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/multiselect",{"_index":733,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/orderlist",{"_index":678,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/password",{"_index":642,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/radiobutton",{"_index":716,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/rating",{"_index":725,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/scrollpanel",{"_index":714,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/steps",{"_index":691,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/table",{"_index":661,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/tabmenu",{"_index":687,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/tabview",{"_index":685,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/tag",{"_index":729,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/toast",{"_index":698,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/toolbar",{"_index":666,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/tooltip",{"_index":695,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/virtualscroller",{"_index":676,"title":{},"body":{"modules/AppModule.html":{}}}],["primengconfig",{"_index":593,"title":{},"body":{"components/AppComponent.html":{},"components/MenuBarComponent.html":{}}}],["primer",{"_index":895,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["primera",{"_index":2251,"title":{},"body":{"components/SignUpComponent.html":{}}}],["priority",{"_index":1159,"title":{},"body":{"components/EditUserComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/MockUserService.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["private",{"_index":369,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["privilegios",{"_index":2079,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["processmessagetranslation",{"_index":1665,"title":{},"body":{"components/LoginComponent.html":{}}}],["processmessagetranslation(messages",{"_index":1685,"title":{},"body":{"components/LoginComponent.html":{}}}],["prod",{"_index":2519,"title":{},"body":{"index.html":{}}}],["produce",{"_index":304,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["producido",{"_index":1543,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["production",{"_index":2521,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":1199,"title":{},"body":{"components/EditUserComponent.html":{}}}],["profile/edit",{"_index":770,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["project",{"_index":2495,"title":{},"body":{"index.html":{}}}],["properties",{"_index":17,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{}}}],["propname",{"_index":1079,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["propocionado",{"_index":272,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["proporciona",{"_index":852,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/MenuBarComponent.html":{}}}],["proporcionada",{"_index":1747,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["proporcionado",{"_index":265,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["proporciones",{"_index":1850,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["protractor",{"_index":2530,"title":{},"body":{"index.html":{}}}],["provide",{"_index":737,"title":{},"body":{"modules/AppModule.html":{},"interceptors/InterceptorService.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":201,"title":{},"body":{"injectables/ActivityService.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"injectables/LocalStorageService.html":{},"injectables/NotificationService.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":608,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["proyectoturismofront",{"_index":2494,"title":{},"body":{"index.html":{}}}],["prueba",{"_index":2034,"title":{},"body":{"injectables/MockUserService.html":{}}}],["public",{"_index":109,"title":{},"body":{"injectables/ActivityService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"injectables/LocalStorageService.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["pueda",{"_index":2126,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["puede",{"_index":2192,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["puntuaciones",{"_index":1302,"title":{},"body":{"classes/Interest-1.html":{},"injectables/InterestService.html":{},"injectables/MockInterestService.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["puntuación",{"_index":1283,"title":{},"body":{"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{},"miscellaneous/functions.html":{}}}],["puntuado",{"_index":1282,"title":{},"body":{"classes/Interest.html":{},"classes/InterestByUser.html":{}}}],["puntúa",{"_index":1286,"title":{},"body":{"classes/Interest-1.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["put",{"_index":155,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["página",{"_index":1753,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["páginas",{"_index":1768,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["que",{"_index":9,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"miscellaneous/functions.html":{}}}],["question_container",{"_index":2090,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["question_number_recommendation",{"_index":2083,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["question_recommendations_container",{"_index":2088,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["question_type_activities_recommendation",{"_index":2084,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["quiere",{"_index":824,"title":{},"body":{"injectables/CityService.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["radiobuttonmodule",{"_index":715,"title":{},"body":{"modules/AppModule.html":{}}}],["radius",{"_index":1413,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/MenuBarComponent.html":{}}}],["rate",{"_index":217,"title":{},"body":{"injectables/ActivityService.html":{},"components/RecommendationMapComponent.html":{}}}],["rateactivity",{"_index":2178,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["ratedactivities",{"_index":219,"title":{},"body":{"injectables/ActivityService.html":{}}}],["rating",{"_index":2144,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["rating_down",{"_index":1371,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["rating_up",{"_index":1372,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["ratingmodule",{"_index":724,"title":{},"body":{"modules/AppModule.html":{}}}],["reactiveformsmodule",{"_index":638,"title":{},"body":{"modules/AppModule.html":{}}}],["realiza",{"_index":135,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["realizada",{"_index":1842,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["realizadas",{"_index":85,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{}}}],["realizar",{"_index":204,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["recomendaciones",{"_index":2134,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["recomendación",{"_index":80,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{}}}],["recomendada",{"_index":77,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/RecommendationMapComponent.html":{}}}],["recomendadas",{"_index":170,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{}}}],["recommedation",{"_index":218,"title":{},"body":{"injectables/ActivityService.html":{}}}],["recommendation",{"_index":580,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["recommendation'},{'name",{"_index":578,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["recommendation.component.html",{"_index":2063,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["recommendation.component.scss",{"_index":2062,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["recommendation/recommendation.component",{"_index":654,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["recommendationcomponent",{"_index":577,"title":{"components/RecommendationComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recommendationmap",{"_index":771,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["recommendationmapcomponent",{"_index":579,"title":{"components/RecommendationMapComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["redirectto",{"_index":757,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirige",{"_index":1583,"title":{},"body":{"components/ListUserComponent.html":{},"components/MenuBarComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["redirigido",{"_index":1677,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirigir",{"_index":292,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["ref",{"_index":1222,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["reference",{"_index":2537,"title":{},"body":{"index.html":{}}}],["registra",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockAuthService.html":{}}}],["registrados",{"_index":1591,"title":{},"body":{"components/ListUserComponent.html":{},"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["registrar",{"_index":805,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockAuthService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["registrarse",{"_index":1299,"title":{},"body":{"classes/Interest-1.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["registro",{"_index":2255,"title":{},"body":{"components/SignUpComponent.html":{}}}],["regresar",{"_index":2247,"title":{},"body":{"components/SignUpComponent.html":{}}}],["relacionadas",{"_index":205,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["relativelinkresolution",{"_index":774,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reload",{"_index":2507,"title":{},"body":{"index.html":{}}}],["removecity",{"_index":1450,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["removecity(city",{"_index":1465,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["removemarkerfrommap",{"_index":2102,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["removemarkerfrommap(activity",{"_index":2129,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["repeat_password",{"_index":2301,"title":{},"body":{"components/SignUpComponent.html":{}}}],["repeatpassword",{"_index":2266,"title":{},"body":{"components/SignUpComponent.html":{},"miscellaneous/functions.html":{}}}],["repetida",{"_index":1300,"title":{},"body":{"classes/Interest-1.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["representan",{"_index":1586,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["req",{"_index":1257,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["req.clone",{"_index":1264,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["req.headers.set('authorization",{"_index":1265,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["reset",{"_index":618,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolve",{"_index":761,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/IsLogginInGuardService.html":{}}}],["respft5vvaflghktofmvphx20nl7b1",{"_index":1934,"title":{},"body":{"injectables/MockAuthService.html":{}}}],["response.filter(user",{"_index":1597,"title":{},"body":{"components/ListUserComponent.html":{}}}],["response1",{"_index":1151,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["response1.foreach",{"_index":927,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["response2",{"_index":926,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["response2.address",{"_index":936,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["response2.city",{"_index":934,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["response2.description",{"_index":931,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["response2.interest",{"_index":935,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["response2.latitude",{"_index":932,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["response2.longitude",{"_index":933,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["response2.name",{"_index":930,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["respuestas",{"_index":193,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["restuser.email",{"_index":1602,"title":{},"body":{"components/ListUserComponent.html":{}}}],["result",{"_index":87,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resultado",{"_index":945,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["resultados",{"_index":130,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{}}}],["results",{"_index":89,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results[0",{"_index":946,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["results[1",{"_index":1045,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["return",{"_index":208,"title":{},"body":{"injectables/ActivityService.html":{},"modules/AppModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["returnfirstpartform",{"_index":2239,"title":{},"body":{"components/SignUpComponent.html":{}}}],["returns",{"_index":144,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rgb(255",{"_index":2207,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["rgba(0",{"_index":1429,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["rgba(0,0,0",{"_index":1792,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["right",{"_index":497,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["right_container",{"_index":995,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["roboto",{"_index":536,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["rol",{"_index":1027,"title":{"classes/Rol.html":{}},"body":{"components/EditUserAdminComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockRolService.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"coverage.html":{}}}],["rol.service",{"_index":2004,"title":{},"body":{"injectables/MockRolService.html":{}}}],["role",{"_index":1594,"title":{},"body":{"components/ListUserComponent.html":{}}}],["role_admin",{"_index":2000,"title":{},"body":{"injectables/MockRolService.html":{},"injectables/MockUserService.html":{}}}],["role_user",{"_index":2001,"title":{},"body":{"injectables/MockRolService.html":{},"injectables/MockUserService.html":{}}}],["roleguardservice",{"_index":754,"title":{"guards/RoleGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/RoleGuardService.html":{},"coverage.html":{}}}],["rolelist",{"_index":1011,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["roles",{"_index":1012,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"classes/Interest-1.html":{},"guards/IsLogginInGuardService.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["roles.includes(\"role_admin",{"_index":1337,"title":{},"body":{"guards/IsLogginInGuardService.html":{},"guards/RoleGuardService.html":{}}}],["rolesservice",{"_index":1016,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["rolname",{"_index":1999,"title":{},"body":{"injectables/MockRolService.html":{},"classes/Rol.html":{}}}],["rolservice",{"_index":1017,"title":{"injectables/RolService.html":{}},"body":{"components/EditUserAdminComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockRolService.html":{},"injectables/RolService.html":{},"coverage.html":{}}}],["rolservice:25",{"_index":2003,"title":{},"body":{"injectables/MockRolService.html":{}}}],["rolservice:37",{"_index":1998,"title":{},"body":{"injectables/MockRolService.html":{}}}],["rolurl",{"_index":1995,"title":{},"body":{"injectables/MockRolService.html":{},"injectables/RolService.html":{}}}],["root",{"_index":202,"title":{},"body":{"injectables/ActivityService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"injectables/ImagesService.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"injectables/LocalStorageService.html":{},"injectables/NotificationService.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":551,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["route",{"_index":788,"title":{},"body":{"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"guards/RoleGuardService.html":{}}}],["route.data.expectedrol",{"_index":2226,"title":{},"body":{"guards/RoleGuardService.html":{}}}],["router",{"_index":251,"title":{},"body":{"components/AddActivityComponent.html":{},"guards/AuthGuardService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["routermodule",{"_index":746,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":773,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":786,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/RoleGuardService.html":{}}}],["routes",{"_index":745,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":628,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":744,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":519,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["run",{"_index":2501,"title":{},"body":{"index.html":{}}}],["running",{"_index":2522,"title":{},"body":{"index.html":{}}}],["rural",{"_index":1833,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["ruta",{"_index":60,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["rxjs",{"_index":188,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"interceptors/InterceptorService.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1138,"title":{},"body":{"components/EditUserComponent.html":{},"interceptors/InterceptorService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["s",{"_index":2272,"title":{},"body":{"components/SignUpComponent.html":{}}}],["sanea",{"_index":1361,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["saneada",{"_index":913,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{}}}],["saneando",{"_index":864,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["sanear",{"_index":901,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["sanitizer",{"_index":848,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["sans",{"_index":539,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["santa",{"_index":1855,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["scaffolding",{"_index":2510,"title":{},"body":{"index.html":{}}}],["score",{"_index":81,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{}}}],["scripting",{"_index":862,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["scrollpanelmodule",{"_index":713,"title":{},"body":{"modules/AppModule.html":{}}}],["se",{"_index":35,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["sea",{"_index":2483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sean",{"_index":866,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{},"miscellaneous/functions.html":{}}}],["second",{"_index":2309,"title":{},"body":{"components/SignUpComponent.html":{}}}],["seemoreinfo",{"_index":2319,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["seemoreinfo(activity",{"_index":2331,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["segoe",{"_index":534,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["segundo",{"_index":897,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["seguridad",{"_index":859,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["seguros",{"_index":867,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["según",{"_index":1683,"title":{},"body":{"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["selecciona",{"_index":409,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["seleccionada",{"_index":907,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{}}}],["seleccionado",{"_index":301,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["selección",{"_index":314,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["selecteditem.label",{"_index":1385,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["selectitem",{"_index":332,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{}}}],["selector",{"_index":233,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["sendform",{"_index":1014,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["sendratingactivity",{"_index":2103,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["separate",{"_index":963,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["ser",{"_index":290,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["serena",{"_index":365,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["serif",{"_index":540,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["serve",{"_index":2502,"title":{},"body":{"index.html":{}}}],["server",{"_index":2500,"title":{},"body":{"index.html":{}}}],["service",{"_index":1796,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"coverage.html":{}}}],["services/activity/activity.service",{"_index":358,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["services/auth/auth.service",{"_index":1697,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["services/city/city.service",{"_index":347,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["services/interest/interest.service",{"_index":348,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["services/local",{"_index":789,"title":{},"body":{"guards/AuthGuardService.html":{},"components/EditUserComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{}}}],["services/message/notification.service",{"_index":709,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["services/rol/rol.service",{"_index":1034,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/ListUserComponent.html":{}}}],["services/user/user.service",{"_index":1033,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["servicio",{"_index":259,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["serán",{"_index":277,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/TableActivitiesComponent.html":{}}}],["sesión",{"_index":1692,"title":{},"body":{"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{}}}],["settimeout",{"_index":452,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["settoken",{"_index":1629,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["settoken(token",{"_index":1640,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["severity",{"_index":447,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/NotificationService.html":{}}}],["severity:'error",{"_index":462,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["severity:'success",{"_index":1068,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["shadow",{"_index":1427,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["shadow.png",{"_index":355,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["si",{"_index":342,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["sido",{"_index":1883,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{}}}],["sign",{"_index":582,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["sign_up",{"_index":1715,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["sign_up_btns",{"_index":2307,"title":{},"body":{"components/SignUpComponent.html":{}}}],["sign_up_successful_message_summary",{"_index":2293,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signup",{"_index":762,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MockAuthService.html":{},"components/SignUpComponent.html":{}}}],["signup(user",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockAuthService.html":{}}}],["signupcomponent",{"_index":581,"title":{"components/SignUpComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sistema",{"_index":1296,"title":{},"body":{"classes/Interest-1.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockUserService.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{}}}],["site",{"_index":861,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["situada",{"_index":1819,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["size",{"_index":1110,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["size:1.5em",{"_index":1203,"title":{},"body":{"components/EditUserComponent.html":{}}}],["sobrar",{"_index":2268,"title":{},"body":{"components/SignUpComponent.html":{}}}],["sobre",{"_index":854,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["solid",{"_index":1107,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/MapComponent.html":{}}}],["son",{"_index":891,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["sortfield",{"_index":1347,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["sortoptions",{"_index":1348,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["sortorder",{"_index":1349,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"index.html":{}}}],["space",{"_index":526,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["spacing",{"_index":1423,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["spanish",{"_index":1776,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["src",{"_index":875,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["src/.../activity.service.ts",{"_index":2551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":2475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.service.ts",{"_index":2552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../city.service.ts",{"_index":2548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../images.service.ts",{"_index":2554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interceptor.service.ts",{"_index":2557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interest.service.ts",{"_index":2553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":2558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rol.service.ts",{"_index":2550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":2549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validatorgreaterthan.directive.ts",{"_index":2476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../validatornonwhitespace.directive.ts",{"_index":2477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../validatorpasswordsame.directive.ts",{"_index":2478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../validatorprioritynumber.directive.ts",{"_index":2479,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/add",{"_index":227,"title":{},"body":{"components/AddActivityComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":743,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":588,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":594,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":595,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":620,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/edit",{"_index":835,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth",{"_index":778,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/guards/isloggininguard/is",{"_index":1335,"title":{},"body":{"guards/IsLogginInGuardService.html":{},"coverage.html":{}}}],["src/app/guards/roleguard/role",{"_index":2223,"title":{},"body":{"guards/RoleGuardService.html":{},"coverage.html":{}}}],["src/app/information",{"_index":1217,"title":{},"body":{"components/InformationActivitiesComponent.html":{},"coverage.html":{}}}],["src/app/interceptors/interceptor.service.ts",{"_index":1246,"title":{},"body":{"interceptors/InterceptorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interceptors/interceptor.service.ts:12",{"_index":1250,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["src/app/interceptors/interceptor.service.ts:19",{"_index":1256,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["src/app/interceptors/interceptor.service.ts:42",{"_index":1251,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["src/app/list",{"_index":1341,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":1658,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:110",{"_index":1670,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:119",{"_index":1680,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:143",{"_index":1673,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:29",{"_index":1694,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:33",{"_index":1690,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":1696,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":1668,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:80",{"_index":1675,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:97",{"_index":1686,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/map/map.component.ts",{"_index":1717,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/map/map.component.ts:11",{"_index":1721,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map.component.ts:15",{"_index":1723,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map.component.ts:19",{"_index":1722,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/menu",{"_index":1736,"title":{},"body":{"components/MenuBarComponent.html":{},"coverage.html":{}}}],["src/app/models/activity.ts",{"_index":6,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"coverage.html":{}}}],["src/app/models/activity.ts:10",{"_index":44,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:14",{"_index":57,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:18",{"_index":41,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:22",{"_index":49,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:26",{"_index":51,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:30",{"_index":59,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:34",{"_index":39,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:38",{"_index":46,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:42",{"_index":32,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:46",{"_index":54,"title":{},"body":{"classes/Activity.html":{}}}],["src/app/models/activity.ts:71",{"_index":91,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["src/app/models/activity.ts:75",{"_index":90,"title":{},"body":{"classes/ActivityRecommended.html":{}}}],["src/app/models/city",{"_index":1952,"title":{},"body":{"injectables/MockCityService.html":{}}}],["src/app/models/city.ts",{"_index":810,"title":{},"body":{"classes/City.html":{},"coverage.html":{}}}],["src/app/models/city.ts:12",{"_index":812,"title":{},"body":{"classes/City.html":{}}}],["src/app/models/city.ts:8",{"_index":811,"title":{},"body":{"classes/City.html":{}}}],["src/app/models/interest.ts",{"_index":1278,"title":{},"body":{"classes/Interest.html":{},"classes/InterestByUser.html":{},"coverage.html":{}}}],["src/app/models/interest.ts:10",{"_index":1279,"title":{},"body":{"classes/Interest.html":{}}}],["src/app/models/interest.ts:14",{"_index":1280,"title":{},"body":{"classes/Interest.html":{}}}],["src/app/models/interest.ts:26",{"_index":1305,"title":{},"body":{"classes/InterestByUser.html":{}}}],["src/app/models/interest.ts:30",{"_index":1306,"title":{},"body":{"classes/InterestByUser.html":{}}}],["src/app/models/interest.ts:34",{"_index":1307,"title":{},"body":{"classes/InterestByUser.html":{}}}],["src/app/models/jwt_model.ts",{"_index":1339,"title":{},"body":{"classes/JwtModel.html":{},"coverage.html":{}}}],["src/app/models/jwt_model.ts:10",{"_index":1340,"title":{},"body":{"classes/JwtModel.html":{}}}],["src/app/models/rol.ts",{"_index":2216,"title":{},"body":{"classes/Rol.html":{},"coverage.html":{}}}],["src/app/models/rol.ts:10",{"_index":2217,"title":{},"body":{"classes/Rol.html":{}}}],["src/app/models/rol.ts:14",{"_index":2218,"title":{},"body":{"classes/Rol.html":{}}}],["src/app/models/user.ts",{"_index":1285,"title":{},"body":{"classes/Interest-1.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{},"coverage.html":{}}}],["src/app/models/user.ts:10",{"_index":2358,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:14",{"_index":2360,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:18",{"_index":2357,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:22",{"_index":2356,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:26",{"_index":2359,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:38",{"_index":2361,"title":{},"body":{"classes/UserLogin.html":{}}}],["src/app/models/user.ts:42",{"_index":2362,"title":{},"body":{"classes/UserLogin.html":{}}}],["src/app/models/user.ts:54",{"_index":2380,"title":{},"body":{"classes/UserSignUp.html":{}}}],["src/app/models/user.ts:58",{"_index":2375,"title":{},"body":{"classes/UserSignUp.html":{}}}],["src/app/models/user.ts:62",{"_index":2374,"title":{},"body":{"classes/UserSignUp.html":{}}}],["src/app/models/user.ts:66",{"_index":2377,"title":{},"body":{"classes/UserSignUp.html":{}}}],["src/app/models/user.ts:70",{"_index":2378,"title":{},"body":{"classes/UserSignUp.html":{}}}],["src/app/models/user.ts:74",{"_index":2379,"title":{},"body":{"classes/UserSignUp.html":{}}}],["src/app/models/user.ts:78",{"_index":2376,"title":{},"body":{"classes/UserSignUp.html":{}}}],["src/app/models/user.ts:90",{"_index":1287,"title":{},"body":{"classes/Interest-1.html":{}}}],["src/app/models/user.ts:94",{"_index":1288,"title":{},"body":{"classes/Interest-1.html":{}}}],["src/app/recommendation",{"_index":2091,"title":{},"body":{"components/RecommendationMapComponent.html":{},"coverage.html":{}}}],["src/app/recommendation/recommendation.component.ts",{"_index":2061,"title":{},"body":{"components/RecommendationComponent.html":{},"coverage.html":{}}}],["src/app/recommendation/recommendation.component.ts:13",{"_index":2068,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["src/app/recommendation/recommendation.component.ts:14",{"_index":2069,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["src/app/recommendation/recommendation.component.ts:15",{"_index":2070,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["src/app/recommendation/recommendation.component.ts:16",{"_index":2066,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["src/app/recommendation/recommendation.component.ts:20",{"_index":2067,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["src/app/services/activity/activity",{"_index":1795,"title":{},"body":{"injectables/MockActivityService.html":{},"coverage.html":{}}}],["src/app/services/activity/activity.service.ts",{"_index":106,"title":{},"body":{"injectables/ActivityService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/activity/activity.service.ts:103",{"_index":164,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/activity/activity.service.ts:26",{"_index":121,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/activity/activity.service.ts:38",{"_index":158,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/activity/activity.service.ts:47",{"_index":162,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/activity/activity.service.ts:56",{"_index":133,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/activity/activity.service.ts:65",{"_index":150,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/activity/activity.service.ts:76",{"_index":154,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/activity/activity.service.ts:85",{"_index":173,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/activity/activity.service.ts:94",{"_index":169,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/app/services/auth/auth",{"_index":1925,"title":{},"body":{"injectables/MockAuthService.html":{},"coverage.html":{}}}],["src/app/services/auth/auth.service.ts",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth/auth.service.ts:25",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:38",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:47",{"_index":804,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/city/city",{"_index":1939,"title":{},"body":{"injectables/MockCityService.html":{},"coverage.html":{}}}],["src/app/services/city/city.service.ts",{"_index":813,"title":{},"body":{"injectables/CityService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/city/city.service.ts:26",{"_index":819,"title":{},"body":{"injectables/CityService.html":{}}}],["src/app/services/city/city.service.ts:38",{"_index":827,"title":{},"body":{"injectables/CityService.html":{}}}],["src/app/services/city/city.service.ts:47",{"_index":821,"title":{},"body":{"injectables/CityService.html":{}}}],["src/app/services/city/city.service.ts:56",{"_index":823,"title":{},"body":{"injectables/CityService.html":{}}}],["src/app/services/city/city.service.ts:66",{"_index":826,"title":{},"body":{"injectables/CityService.html":{}}}],["src/app/services/images/images.service.ts",{"_index":1208,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/images/images.service.ts:13",{"_index":1211,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/app/services/images/images.service.ts:17",{"_index":1213,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/app/services/interest/interest",{"_index":1966,"title":{},"body":{"injectables/MockInterestService.html":{},"coverage.html":{}}}],["src/app/services/interest/interest.service.ts",{"_index":1308,"title":{},"body":{"injectables/InterestService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/interest/interest.service.ts:24",{"_index":1315,"title":{},"body":{"injectables/InterestService.html":{}}}],["src/app/services/interest/interest.service.ts:36",{"_index":1325,"title":{},"body":{"injectables/InterestService.html":{}}}],["src/app/services/interest/interest.service.ts:45",{"_index":1317,"title":{},"body":{"injectables/InterestService.html":{}}}],["src/app/services/interest/interest.service.ts:54",{"_index":1320,"title":{},"body":{"injectables/InterestService.html":{}}}],["src/app/services/interest/interest.service.ts:63",{"_index":1324,"title":{},"body":{"injectables/InterestService.html":{}}}],["src/app/services/interest/interest.service.ts:73",{"_index":1322,"title":{},"body":{"injectables/InterestService.html":{}}}],["src/app/services/local",{"_index":1622,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/message/notification.service.ts",{"_index":2048,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/services/message/notification.service.ts:18",{"_index":2050,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/message/notification.service.ts:27",{"_index":2054,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/message/notification.service.ts:36",{"_index":2051,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/rol/rol",{"_index":1994,"title":{},"body":{"injectables/MockRolService.html":{},"coverage.html":{}}}],["src/app/services/rol/rol.service.ts",{"_index":2219,"title":{},"body":{"injectables/RolService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/rol/rol.service.ts:25",{"_index":2220,"title":{},"body":{"injectables/RolService.html":{}}}],["src/app/services/rol/rol.service.ts:37",{"_index":2221,"title":{},"body":{"injectables/RolService.html":{}}}],["src/app/services/user/user",{"_index":2007,"title":{},"body":{"injectables/MockUserService.html":{},"coverage.html":{}}}],["src/app/services/user/user.service.ts",{"_index":2363,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/user/user.service.ts:25",{"_index":2364,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:37",{"_index":2369,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:46",{"_index":2368,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:55",{"_index":2367,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:65",{"_index":2366,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:74",{"_index":2365,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/sign",{"_index":2229,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["src/app/table",{"_index":2315,"title":{},"body":{"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["src/app/validators/validatorgreaterthan.directive.ts",{"_index":2434,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/validators/validatornonwhitespace.directive.ts",{"_index":2435,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/validators/validatorpasswordsame.directive.ts",{"_index":2436,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/validators/validatorprioritynumber.directive.ts",{"_index":2437,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/assets/sass/utility/_mixins.scss",{"_index":476,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":2438,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2440,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["star",{"_index":2206,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["started",{"_index":2493,"title":{"index.html":{}},"body":{}}],["state",{"_index":785,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/RoleGuardService.html":{}}}],["statements",{"_index":2384,"title":{},"body":{"coverage.html":{}}}],["stepsmodule",{"_index":690,"title":{},"body":{"modules/AppModule.html":{}}}],["storage.service",{"_index":791,"title":{},"body":{"guards/AuthGuardService.html":{},"components/EditUserComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{}}}],["storage.service.ts",{"_index":1623,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:17",{"_index":1630,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:25",{"_index":1641,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:34",{"_index":1637,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:41",{"_index":1638,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:49",{"_index":1635,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:59",{"_index":1636,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:70",{"_index":1632,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/local",{"_index":790,"title":{},"body":{"guards/AuthGuardService.html":{},"components/EditUserComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":2516,"title":{},"body":{"index.html":{}}}],["string",{"_index":30,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"injectables/ImagesService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":224,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["styleurls",{"_index":235,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["su",{"_index":1684,"title":{},"body":{"components/LoginComponent.html":{}}}],["subject",{"_index":2370,"title":{},"body":{"injectables/UserService.html":{}}}],["submessage_rate_activity",{"_index":2201,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["subscribe",{"_index":1150,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["subscribe(([response1",{"_index":925,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["success",{"_index":448,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"injectables/NotificationService.html":{}}}],["success(detail",{"_index":2053,"title":{},"body":{"injectables/NotificationService.html":{}}}],["summary",{"_index":449,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/NotificationService.html":{},"components/TableActivitiesComponent.html":{}}}],["support",{"_index":2539,"title":{},"body":{"modules.html":{}}}],["suárez",{"_index":366,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["svg",{"_index":2540,"title":{},"body":{"modules.html":{}}}],["switchlang",{"_index":1743,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["switchlang(lang",{"_index":1755,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["symbol",{"_index":543,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["system",{"_index":532,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["tabla",{"_index":1588,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["table",{"_index":585,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{}}}],["table_recommendation",{"_index":2202,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["tableactivities",{"_index":293,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["tableactivitiescomponent",{"_index":584,"title":{"components/TableActivitiesComponent.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablemodule",{"_index":660,"title":{},"body":{"modules/AppModule.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2441,"title":{},"body":{"coverage.html":{}}}],["tabmenumodule",{"_index":686,"title":{},"body":{"modules/AppModule.html":{}}}],["tabpanel",{"_index":683,"title":{},"body":{"modules/AppModule.html":{}}}],["tabviewmodule",{"_index":684,"title":{},"body":{"modules/AppModule.html":{}}}],["tagmodule",{"_index":728,"title":{},"body":{"modules/AppModule.html":{}}}],["también",{"_index":289,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["tbody",{"_index":1615,"title":{},"body":{"components/ListUserComponent.html":{}}}],["td",{"_index":1617,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["teatros",{"_index":1406,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["template",{"_index":223,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["templateurl",{"_index":237,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["tendr",{"_index":1367,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["tener",{"_index":1745,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["test",{"_index":2525,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2524,"title":{},"body":{"index.html":{}}}],["text",{"_index":488,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["textos",{"_index":1688,"title":{},"body":{"components/LoginComponent.html":{}}}],["th",{"_index":1619,"title":{},"body":{"components/ListUserComponent.html":{}}}],["thead",{"_index":1618,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":920,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["this.activities",{"_index":2337,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.activitiesrecommendation",{"_index":2153,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.activitiesrecommendation.foreach(activity",{"_index":2154,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.activitiesselected.push(activity.name",{"_index":2155,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.activitiesservice.getrecommendedactivities(this.userlogged.id).pipe",{"_index":2185,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.activitiesservice.postrateactivity(rateactivity).pipe",{"_index":2183,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.activity",{"_index":928,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{}}}],["this.activity.metadataimage.data",{"_index":949,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{}}}],["this.activity.metadataimage.mimetype",{"_index":948,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{}}}],["this.activity.pathimage",{"_index":954,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.activityid",{"_index":919,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.activityselectedtorate",{"_index":2176,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.activityselectedtorate.id",{"_index":2180,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.activityservice.addactivity(formdata).subscribe",{"_index":442,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.activityservice.deleteactivity(activity.id).pipe",{"_index":2339,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.activityservice.editactivity(this.activityid",{"_index":979,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.activityservice.getactivities().pipe",{"_index":2340,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.activityservice.getactivities().subscribe",{"_index":2336,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.activityservice.getactivity(this.activityid",{"_index":924,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.authority",{"_index":1771,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.authservice.login(usuario).subscribe(data",{"_index":1707,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.signup(user).subscribe",{"_index":2290,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.cities",{"_index":1478,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.cityservice.addcity(city).pipe",{"_index":1480,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.cityservice.deletecity(city).pipe",{"_index":1491,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.cityservice.editcity(this.formeditcity.get('id').value",{"_index":1501,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.cityservice.getcities().pipe",{"_index":1481,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.cityservice.getcities().subscribe",{"_index":1477,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.cols",{"_index":1592,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["this.config.data",{"_index":1231,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["this.config.data.activity",{"_index":1232,"title":{},"body":{"components/InformationActivitiesComponent.html":{}}}],["this.config.settranslation(res",{"_index":601,"title":{},"body":{"components/AppComponent.html":{},"components/MenuBarComponent.html":{}}}],["this.confirmationservice.confirm",{"_index":1488,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["this.datauritoblob(url",{"_index":953,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.decodetoken(token",{"_index":1654,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.dialogservice.open(informationactivitiescomponent",{"_index":2344,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.display",{"_index":1476,"title":{},"body":{"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["this.displayeditdialog",{"_index":1562,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.displayeditpanel",{"_index":1498,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.displaypanelrating",{"_index":2177,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.editactivitiesform",{"_index":921,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.editactivitiesform.controls['address'].setvalue(e.geocode.name",{"_index":942,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.editactivitiesform.controls['city'].setvalue(council",{"_index":941,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.editactivitiesform.controls['latitude'].setvalue(latitud",{"_index":938,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.editactivitiesform.controls['longitude'].setvalue(longitud",{"_index":939,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.editactivitiesform.get('name').value",{"_index":982,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.editactivitiesform.patchvalue",{"_index":929,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.edituserform",{"_index":1038,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.edituserform.controls['roles'].setvalue(this.user.roles",{"_index":1049,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.edituserform.get(\"roles\").value",{"_index":1062,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.edituserform.get(\"username\").value",{"_index":1060,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.edituserform.get('username').value",{"_index":1067,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.edituserform.patchvalue",{"_index":1046,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.edituserform.valuechanges.subscribe((values",{"_index":1073,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.edituserprofile",{"_index":1143,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.edituserprofile.get(\"username\").value",{"_index":1164,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.edituserprofile.get('interest",{"_index":1162,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.edituserprofile.patchvalue",{"_index":1152,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.edituserprofile.valuechanges.subscribe((values",{"_index":1181,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.email",{"_index":1769,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.erroraddcity",{"_index":1487,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.erroraddinterest",{"_index":1555,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.erroreditcity",{"_index":1497,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.erroreditinterest",{"_index":1569,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.fb.array",{"_index":1144,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.fb.group",{"_index":922,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["this.file",{"_index":952,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.files",{"_index":412,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity",{"_index":370,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.controls['address'].setvalue(e.geocode.name",{"_index":403,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.controls['city'].setvalue(council",{"_index":402,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.controls['latitude'].setvalue(latitud",{"_index":395,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.controls['longitude'].setvalue(longitud",{"_index":397,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.get('address').value",{"_index":431,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.get('city').value",{"_index":427,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.get('description').value",{"_index":421,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.get('latitude').value",{"_index":423,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.get('longitude').value",{"_index":425,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.get('name').value",{"_index":419,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.get('nameinterest').value",{"_index":429,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddactivity.valid",{"_index":416,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.formaddcity",{"_index":1473,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.formaddcity.get('name').value",{"_index":1479,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.formaddcity.reset",{"_index":1485,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.formaddinterest",{"_index":1547,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.formaddinterest.get('name').value",{"_index":1549,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.formaddinterest.reset",{"_index":1553,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.formbuilder.group",{"_index":371,"title":{},"body":{"components/AddActivityComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["this.formeditcity",{"_index":1474,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.formeditcity.get('name').value",{"_index":1500,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.formeditcity.patchvalue",{"_index":1499,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.formeditinterest",{"_index":1548,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.formeditinterest.get('name').value",{"_index":1564,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.formeditinterest.patchvalue",{"_index":1563,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.formgroup",{"_index":2264,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('datebirthday').valid",{"_index":2296,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('email').valid",{"_index":2295,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('email').value",{"_index":2287,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('interest",{"_index":2277,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('name').valid",{"_index":2294,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('name').value",{"_index":2286,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('password').valid",{"_index":2297,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('password').value",{"_index":2288,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('repeatpassword').valid",{"_index":2298,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.get('repeatpassword').value",{"_index":2289,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.setvalue(e",{"_index":2275,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formgroup.valuechanges.subscribe(e",{"_index":2274,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formtoratingactivity",{"_index":2143,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.formtoratingactivity.get('rating').value",{"_index":2182,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.formtoratingactivity.patchvalue",{"_index":2175,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.getmessages",{"_index":1699,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.gettoken",{"_index":1652,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.handleautherror",{"_index":1270,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["this.httpclient.delete(this.activityurl",{"_index":214,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.httpclient.delete(this.cityurl",{"_index":832,"title":{},"body":{"injectables/CityService.html":{}}}],["this.httpclient.delete(this.interesturl",{"_index":1331,"title":{},"body":{"injectables/InterestService.html":{}}}],["this.httpclient.delete(this.userurl",{"_index":2373,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(this.activityurl",{"_index":209,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.httpclient.get(this.cityurl",{"_index":830,"title":{},"body":{"injectables/CityService.html":{}}}],["this.httpclient.get(this.imagesurl",{"_index":1216,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.httpclient.get(this.interesturl",{"_index":1329,"title":{},"body":{"injectables/InterestService.html":{}}}],["this.httpclient.get(this.rolurl",{"_index":2222,"title":{},"body":{"injectables/RolService.html":{}}}],["this.httpclient.get(this.userurl",{"_index":2371,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.post(this.activityurl",{"_index":212,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.httpclient.post(this.authurl",{"_index":809,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(this.cityurl",{"_index":831,"title":{},"body":{"injectables/CityService.html":{}}}],["this.httpclient.post(this.interesturl",{"_index":1330,"title":{},"body":{"injectables/InterestService.html":{}}}],["this.httpclient.put(this.activityurl",{"_index":215,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.httpclient.put(this.cityurl",{"_index":834,"title":{},"body":{"injectables/CityService.html":{}}}],["this.httpclient.put(this.interesturl",{"_index":1334,"title":{},"body":{"injectables/InterestService.html":{}}}],["this.httpclient.put(this.userurl",{"_index":2372,"title":{},"body":{"injectables/UserService.html":{}}}],["this.image",{"_index":950,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{}}}],["this.info",{"_index":2071,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["this.infomessage",{"_index":434,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.infomessage.push(maux",{"_index":441,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.initmap",{"_index":1724,"title":{},"body":{"components/MapComponent.html":{}}}],["this.interest",{"_index":407,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["this.interest.push(control",{"_index":2283,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.interest.push(newitem",{"_index":1161,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.interest.push({label",{"_index":408,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["this.interest.value",{"_index":1165,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["this.interestarray",{"_index":2279,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.interestarray.foreach(interest",{"_index":2280,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.interestlist",{"_index":1985,"title":{},"body":{"injectables/MockInterestService.html":{},"components/RecommendationComponent.html":{}}}],["this.interestlist.filter(p",{"_index":1986,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["this.interestlist.find(inter",{"_index":1987,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["this.interestlist.indexof(updateitem",{"_index":1989,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["this.interestlist.push(interesttoadd",{"_index":1984,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["this.interestlist[index",{"_index":1991,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["this.interestlist[this.interestlist.length",{"_index":1983,"title":{},"body":{"injectables/MockInterestService.html":{}}}],["this.interestservice.addinterests(interest).pipe",{"_index":1550,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.interestservice.deleteinterest(interest).pipe",{"_index":1557,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.interestservice.editinterest(this.formeditinterest.get('id').value",{"_index":1565,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.interestservice.getinterests",{"_index":923,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.interestservice.getinterests().pipe",{"_index":1551,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.interestservice.getinterests().subscribe",{"_index":406,"title":{},"body":{"components/AddActivityComponent.html":{},"components/ListInterestComponent.html":{},"components/RecommendationComponent.html":{}}}],["this.interestservice.getinterests().subscribe(data",{"_index":2278,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.iscontinuefail",{"_index":2300,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.isequivalent(this.activity",{"_index":972,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.isequivalent(this.user",{"_index":1074,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["this.islogin",{"_index":1770,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.isloginfail",{"_index":1709,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isregisterfail",{"_index":2291,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.listactivities",{"_index":1374,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{}}}],["this.listactivities.filter(p",{"_index":1881,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["this.listactivities.find(acti",{"_index":1903,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["this.listactivities.find(p",{"_index":1920,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["this.listactivities.indexof(updateitem",{"_index":1905,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["this.listactivities.push(activitytoadd",{"_index":1895,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["this.listactivities[index",{"_index":1918,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["this.listactivities[this.listactivities.length",{"_index":1886,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["this.listcities",{"_index":1958,"title":{},"body":{"injectables/MockCityService.html":{}}}],["this.listcities.filter(p",{"_index":1959,"title":{},"body":{"injectables/MockCityService.html":{}}}],["this.listcities.find(ci",{"_index":1960,"title":{},"body":{"injectables/MockCityService.html":{}}}],["this.listcities.indexof(updateitem",{"_index":1962,"title":{},"body":{"injectables/MockCityService.html":{}}}],["this.listcities.push(citytoadd",{"_index":1957,"title":{},"body":{"injectables/MockCityService.html":{}}}],["this.listcities[index",{"_index":1963,"title":{},"body":{"injectables/MockCityService.html":{}}}],["this.listcities[this.listcities.length",{"_index":1956,"title":{},"body":{"injectables/MockCityService.html":{}}}],["this.listrecommendedactivities.push(activityrate",{"_index":1922,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["this.listusers",{"_index":2039,"title":{},"body":{"injectables/MockUserService.html":{}}}],["this.listusers.filter(us",{"_index":2040,"title":{},"body":{"injectables/MockUserService.html":{}}}],["this.loadactivities",{"_index":2335,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.loadcities",{"_index":1475,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.loadinterest",{"_index":405,"title":{},"body":{"components/AddActivityComponent.html":{},"components/ListInterestComponent.html":{},"components/SignUpComponent.html":{}}}],["this.localstorageservice.getemailuser",{"_index":1148,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["this.localstorageservice.getrolesuser",{"_index":1336,"title":{},"body":{"guards/IsLogginInGuardService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"guards/RoleGuardService.html":{}}}],["this.localstorageservice.gettoken",{"_index":792,"title":{},"body":{"guards/AuthGuardService.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"guards/RoleGuardService.html":{}}}],["this.localstorageservice.logout",{"_index":1274,"title":{},"body":{"interceptors/InterceptorService.html":{},"components/MenuBarComponent.html":{}}}],["this.localstorageservice.settoken(data.token",{"_index":1708,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform",{"_index":1700,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('email').value",{"_index":1705,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password').value",{"_index":1706,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.map",{"_index":1725,"title":{},"body":{"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["this.map.invalidatesize",{"_index":2171,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.map.removelayer(f[0",{"_index":2198,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.markerlist.filter((act",{"_index":2187,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.markerlist.indexof(f[0",{"_index":2196,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.markerlist.push(marker",{"_index":2170,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.markerlist.splice(index",{"_index":2197,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.message",{"_index":2060,"title":{},"body":{"injectables/NotificationService.html":{},"components/SignUpComponent.html":{}}}],["this.message.push",{"_index":2059,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.messageservice.add({key",{"_index":445,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["this.nofiles",{"_index":414,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.notification.message",{"_index":1704,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.notificationservice.success(\"sign_up_successful_message_detail",{"_index":2292,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.observechanges",{"_index":955,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["this.opensecondform",{"_index":2299,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.processmessagetranslation(this.getmessages",{"_index":1698,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.ref",{"_index":2343,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.ref.close",{"_index":2348,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.ref.onclose.subscribe((activity",{"_index":2346,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.removemarkerfrommap(activity",{"_index":2174,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.removemarkerfrommap(this.activityselectedtorate",{"_index":2184,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.rol",{"_index":2227,"title":{},"body":{"guards/RoleGuardService.html":{}}}],["this.rolelist",{"_index":1050,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.roles",{"_index":1043,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{}}}],["this.roles.includes(\"role_admin",{"_index":1710,"title":{},"body":{"components/LoginComponent.html":{},"components/MenuBarComponent.html":{}}}],["this.roles.map((v",{"_index":1051,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.router.navigate(['/activities",{"_index":453,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["this.router.navigate(['/recommendationmap",{"_index":1338,"title":{},"body":{"guards/IsLogginInGuardService.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['/user",{"_index":1071,"title":{},"body":{"components/EditUserAdminComponent.html":{},"guards/IsLogginInGuardService.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['activities/add",{"_index":2342,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.router.navigate(['login",{"_index":793,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{}}}],["this.router.navigatebyurl('/login",{"_index":1772,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.router.navigatebyurl('activities/edit",{"_index":2349,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.router.navigatebyurl('admin/user/edit",{"_index":1605,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.router.navigatebyurl('login",{"_index":1275,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["this.sanitizer.bypasssecuritytrusturl(url",{"_index":951,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["this.sortfield",{"_index":1380,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["this.sortoptions",{"_index":1370,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["this.sortorder",{"_index":1379,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["this.translate.get('primeng').subscribe(res",{"_index":600,"title":{},"body":{"components/AppComponent.html":{},"components/MenuBarComponent.html":{}}}],["this.translate.use(lang",{"_index":1773,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["this.translateservice.instant(\"error",{"_index":438,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["this.translateservice.instant(\"sign_up_successful_message_detail",{"_index":1703,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.translateservice.instant(\"sign_up_successful_message_summary",{"_index":1702,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.translateservice.instant('activity_add",{"_index":450,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.translateservice.instant('activity_add_message",{"_index":443,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.translateservice.instant('activity_delete_message",{"_index":2341,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.translateservice.instant('activity_edit",{"_index":984,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.translateservice.instant('activity_edit_message",{"_index":981,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["this.translateservice.instant('city_add",{"_index":1486,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.translateservice.instant('city_add_message",{"_index":1483,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.translateservice.instant('city_delete",{"_index":1494,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.translateservice.instant('city_delete_message",{"_index":1492,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.translateservice.instant('city_edit",{"_index":1505,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.translateservice.instant('city_edit_message",{"_index":1504,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.translateservice.instant('city_has_activities",{"_index":1496,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.translateservice.instant('error",{"_index":463,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["this.translateservice.instant('error_activity_repeated",{"_index":468,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["this.translateservice.instant('error_city_council",{"_index":459,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["this.translateservice.instant('error_delete_message",{"_index":1072,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["this.translateservice.instant('info_dialog_title",{"_index":2345,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.translateservice.instant('interest_add",{"_index":1554,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.translateservice.instant('interest_add_message",{"_index":1552,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.translateservice.instant('interest_delete",{"_index":1560,"title":{},"body":{"components/ListInterestComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["this.translateservice.instant('interest_delete_message",{"_index":1558,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.translateservice.instant('interest_edit",{"_index":1568,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.translateservice.instant('interest_edit_message",{"_index":1567,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.translateservice.instant('interest_has_activities",{"_index":1561,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.translateservice.instant('message_delete_activity",{"_index":2338,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["this.translateservice.instant('message_delete_city",{"_index":1489,"title":{},"body":{"components/ListCitiesComponent.html":{}}}],["this.translateservice.instant('message_delete_interest",{"_index":1556,"title":{},"body":{"components/ListInterestComponent.html":{}}}],["this.translateservice.instant('message_delete_user",{"_index":1599,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.translateservice.instant('user_delete",{"_index":1604,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.translateservice.instant('user_delete_message",{"_index":1603,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.translateservice.instant('user_edit",{"_index":1069,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.translateservice.instant('user_edit_message",{"_index":1065,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.translateservice.instant('user_profile_edit",{"_index":1174,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.translateservice.instant('user_profile_edit_message",{"_index":1172,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.translateservice.instant(maux.keydetail",{"_index":1169,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.translateservice.instant(maux.keysummary",{"_index":1168,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.translateservice.instant(message.keytranslate",{"_index":440,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["this.translateservice.onlangchange.subscribe((event",{"_index":1167,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.translateservice.onlangchange.subscribe(event",{"_index":432,"title":{},"body":{"components/AddActivityComponent.html":{}}}],["this.user",{"_index":1044,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["this.user.datebirthday",{"_index":2043,"title":{},"body":{"injectables/MockUserService.html":{}}}],["this.user.interest",{"_index":2044,"title":{},"body":{"injectables/MockUserService.html":{}}}],["this.user.interest.foreach",{"_index":1153,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.user.roles",{"_index":1166,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/MockUserService.html":{}}}],["this.user.username",{"_index":1047,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockUserService.html":{}}}],["this.userid",{"_index":1037,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.userlogged",{"_index":2150,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["this.users",{"_index":1596,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.users.filter(restuser",{"_index":1601,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.userservice.deleteuser(user.id).pipe",{"_index":1600,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.userservice.edituser(this.user.id",{"_index":1170,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.userservice.edituser(this.userid",{"_index":1063,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.userservice.getuser(this.user.id).pipe",{"_index":1179,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.userservice.getuserforadmin(this.userid)]).subscribe(results",{"_index":1042,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["this.userservice.getusers().pipe",{"_index":1145,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["this.userservice.getusers().subscribe(response",{"_index":1595,"title":{},"body":{"components/ListUserComponent.html":{}}}],["this.valueunchanged",{"_index":974,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["throw",{"_index":1272,"title":{},"body":{"interceptors/InterceptorService.html":{}}}],["tiene",{"_index":916,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{}}}],["tiles",{"_index":379,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["tiles.addto(this.map",{"_index":1730,"title":{},"body":{"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["tipo",{"_index":12,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"classes/City.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"classes/JwtModel.html":{},"injectables/MockInterestService.html":{},"classes/Rol.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["tipos",{"_index":1304,"title":{},"body":{"classes/Interest-1.html":{},"injectables/InterestService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/RolService.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["toastmodule",{"_index":697,"title":{},"body":{"modules/AppModule.html":{}}}],["token",{"_index":1263,"title":{},"body":{"interceptors/InterceptorService.html":{},"classes/JwtModel.html":{},"injectables/LocalStorageService.html":{},"injectables/MockAuthService.html":{},"components/RecommendationComponent.html":{},"miscellaneous/variables.html":{}}}],["token_key",{"_index":1646,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toolbar",{"_index":2354,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["toolbarmodule",{"_index":665,"title":{},"body":{"modules/AppModule.html":{}}}],["tooltipmodule",{"_index":694,"title":{},"body":{"modules/AppModule.html":{}}}],["top",{"_index":509,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/RecommendationComponent.html":{},"components/SignUpComponent.html":{}}}],["tr",{"_index":1616,"title":{},"body":{"components/ListUserComponent.html":{}}}],["traduce",{"_index":1687,"title":{},"body":{"components/LoginComponent.html":{}}}],["traducir",{"_index":1689,"title":{},"body":{"components/LoginComponent.html":{}}}],["transform",{"_index":1417,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["translate",{"_index":268,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["translate.addlangs(['en",{"_index":597,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.setdefaultlang('es",{"_index":598,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use('es",{"_index":599,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":360,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/NotificationService.html":{},"components/TableActivitiesComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":703,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":702,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":742,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":700,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":701,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule.forroot",{"_index":736,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":252,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/NotificationService.html":{},"components/TableActivitiesComponent.html":{}}}],["trata",{"_index":1847,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["través",{"_index":1529,"title":{},"body":{"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["tree",{"_index":226,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["true",{"_index":339,"title":{},"body":{"components/AddActivityComponent.html":{},"guards/AuthGuardService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"interceptors/InterceptorService.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2470,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":2074,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["turismo",{"_index":1712,"title":{},"body":{"components/LoginComponent.html":{}}}],["tus",{"_index":2078,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{},"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/City.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"guards/IsLogginInGuardService.html":{},"classes/JwtModel.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":969,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["typeselected",{"_index":2065,"title":{},"body":{"components/RecommendationComponent.html":{}}}],["ui",{"_index":535,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditUserAdminComponent.html":{}}}],["uint8array(bytestring.length",{"_index":971,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["un",{"_index":281,"title":{},"body":{"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockAuthService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":136,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["unescape(datauri.split(',')[1",{"_index":962,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["unit",{"_index":2523,"title":{},"body":{"index.html":{}}}],["universidad",{"_index":1817,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["universidad.jpg",{"_index":1823,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["up",{"_index":2231,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up'},{'name",{"_index":583,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["up.component",{"_index":640,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["up.component.html",{"_index":2233,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.scss",{"_index":2232,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts",{"_index":2230,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:102",{"_index":2260,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:109",{"_index":2243,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:129",{"_index":2245,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:157",{"_index":2241,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:171",{"_index":2246,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:29",{"_index":2248,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:33",{"_index":2249,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:37",{"_index":2254,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:41",{"_index":2257,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:45",{"_index":2250,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:49",{"_index":2240,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:81",{"_index":2244,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up/sign",{"_index":639,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["update",{"_index":216,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/CityService.html":{},"injectables/InterestService.html":{},"injectables/UserService.html":{}}}],["updateitem",{"_index":1902,"title":{},"body":{"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{}}}],["updateitem.metadataimage.data",{"_index":1917,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["updateitem.metadataimage.filename",{"_index":1915,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["updateitem.metadataimage.mimetype",{"_index":1916,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["updateitem.pathimage",{"_index":1911,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["updateuserprofile",{"_index":1119,"title":{},"body":{"components/EditUserComponent.html":{}}}],["uppercase",{"_index":1418,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["url",{"_index":180,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{}}}],["url.createobjecturl(event.files[0",{"_index":988,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["us.id",{"_index":2041,"title":{},"body":{"injectables/MockUserService.html":{}}}],["usar",{"_index":868,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["use",{"_index":2512,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":1276,"title":{},"body":{"interceptors/InterceptorService.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":738,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":556,"title":{"classes/User.html":{}},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"classes/Interest-1.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockUserService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"guards/RoleGuardService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"coverage.html":{}}}],["user'},{'name",{"_index":559,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["user).pipe",{"_index":1171,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user).subscribe",{"_index":1064,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["user.component",{"_index":682,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["user.component.html",{"_index":1117,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListUserComponent.html":{}}}],["user.component.scss",{"_index":1116,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListUserComponent.html":{}}}],["user.component.ts",{"_index":1113,"title":{},"body":{"components/EditUserComponent.html":{},"components/ListUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:104",{"_index":1136,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:112",{"_index":1131,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:119",{"_index":1582,"title":{},"body":{"components/ListUserComponent.html":{}}}],["user.component.ts:159",{"_index":1130,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:173",{"_index":1128,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:29",{"_index":1590,"title":{},"body":{"components/ListUserComponent.html":{}}}],["user.component.ts:30",{"_index":1132,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:33",{"_index":1578,"title":{},"body":{"components/ListUserComponent.html":{}}}],["user.component.ts:34",{"_index":1133,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:38",{"_index":1134,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:42",{"_index":1122,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:70",{"_index":1585,"title":{},"body":{"components/ListUserComponent.html":{}}}],["user.component.ts:71",{"_index":1129,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:88",{"_index":1580,"title":{},"body":{"components/ListUserComponent.html":{}}}],["user.datebirthday",{"_index":1610,"title":{},"body":{"components/ListUserComponent.html":{},"injectables/MockUserService.html":{}}}],["user.email",{"_index":1598,"title":{},"body":{"components/ListUserComponent.html":{},"injectables/MockAuthService.html":{}}}],["user.id",{"_index":1606,"title":{},"body":{"components/ListUserComponent.html":{}}}],["user.interest",{"_index":2045,"title":{},"body":{"injectables/MockUserService.html":{}}}],["user.roles",{"_index":2046,"title":{},"body":{"injectables/MockUserService.html":{}}}],["user.service",{"_index":2037,"title":{},"body":{"injectables/MockUserService.html":{}}}],["user.username",{"_index":1609,"title":{},"body":{"components/ListUserComponent.html":{},"injectables/MockUserService.html":{}}}],["user/edit",{"_index":712,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["user/list",{"_index":681,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ListUserComponent.html":{},"coverage.html":{}}}],["user[0",{"_index":2151,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["user_profile_edit",{"_index":1176,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user_profile_edit_message",{"_index":1178,"title":{},"body":{"components/EditUserComponent.html":{}}}],["userid",{"_index":1013,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["userlogged",{"_index":2099,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["userlogin",{"_index":186,"title":{"classes/UserLogin.html":{}},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"classes/Interest-1.html":{},"injectables/MockAuthService.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{},"coverage.html":{}}}],["username",{"_index":1039,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"classes/Interest-1.html":{},"components/ListUserComponent.html":{},"injectables/MockUserService.html":{},"components/SignUpComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{}}}],["users",{"_index":1575,"title":{},"body":{"components/ListUserComponent.html":{},"components/MenuBarComponent.html":{}}}],["userservice",{"_index":1015,"title":{"injectables/UserService.html":{}},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservice:25",{"_index":2036,"title":{},"body":{"injectables/MockUserService.html":{}}}],["userservice:37",{"_index":2027,"title":{},"body":{"injectables/MockUserService.html":{}}}],["userservice:46",{"_index":2026,"title":{},"body":{"injectables/MockUserService.html":{}}}],["userservice:55",{"_index":2025,"title":{},"body":{"injectables/MockUserService.html":{}}}],["userservice:65",{"_index":2024,"title":{},"body":{"injectables/MockUserService.html":{}}}],["userservice:74",{"_index":2023,"title":{},"body":{"injectables/MockUserService.html":{}}}],["usersignup",{"_index":803,"title":{"classes/UserSignUp.html":{}},"body":{"injectables/AuthService.html":{},"classes/Interest-1.html":{},"injectables/MockAuthService.html":{},"injectables/MockInterestService.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/UserSignUp.html":{},"coverage.html":{}}}],["userurl",{"_index":2009,"title":{},"body":{"injectables/MockUserService.html":{},"injectables/UserService.html":{}}}],["usuario",{"_index":166,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"classes/Interest.html":{},"classes/Interest-1.html":{},"classes/InterestByUser.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockInterestService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/UserSignUp.html":{},"miscellaneous/functions.html":{}}}],["usuarios",{"_index":1019,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"injectables/MockUserService.html":{},"components/RecommendationMapComponent.html":{},"injectables/UserService.html":{}}}],["utiliza",{"_index":269,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["utilizando",{"_index":317,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["utilizar",{"_index":1760,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["v.rolname",{"_index":1053,"title":{},"body":{"components/EditUserAdminComponent.html":{}}}],["vacía",{"_index":2052,"title":{},"body":{"injectables/NotificationService.html":{}}}],["valida",{"_index":2481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validadoragegreaterthan",{"_index":1035,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validadornonwhitespace",{"_index":361,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validadorpasswordsame",{"_index":2261,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validadorprioritynumberofinterest",{"_index":1141,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validatorfn",{"_index":2487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":345,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.email",{"_index":1701,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.minlength(minpasslength",{"_index":2265,"title":{},"body":{"components/SignUpComponent.html":{}}}],["validators.required",{"_index":372,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{}}}],["validators/validatorgreaterthan.directive",{"_index":1036,"title":{},"body":{"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["validators/validatornonwhitespace.directive",{"_index":362,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{}}}],["validators/validatorpasswordsame.directive",{"_index":2262,"title":{},"body":{"components/SignUpComponent.html":{}}}],["validators/validatorprioritynumber.directive",{"_index":1142,"title":{},"body":{"components/EditUserComponent.html":{},"components/SignUpComponent.html":{}}}],["valor",{"_index":905,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["valoraciones",{"_index":84,"title":{},"body":{"classes/Activity.html":{},"classes/ActivityRecommended.html":{}}}],["valoración",{"_index":174,"title":{},"body":{"injectables/ActivityService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{},"components/RecommendationMapComponent.html":{}}}],["valorada",{"_index":1923,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["valoradas",{"_index":165,"title":{},"body":{"injectables/ActivityService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"injectables/MockActivityService.html":{}}}],["valorar",{"_index":2127,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["valores",{"_index":865,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["value",{"_index":177,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/ImagesService.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockAuthService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"injectables/MockRolService.html":{},"injectables/MockUserService.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.indexof",{"_index":1378,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["value.length",{"_index":1382,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["value.substring(1",{"_index":1381,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{}}}],["values",{"_index":973,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["valueunchanged",{"_index":841,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{}}}],["var",{"_index":374,"title":{},"body":{"components/AddActivityComponent.html":{},"components/AppComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/MockActivityService.html":{},"injectables/MockCityService.html":{},"injectables/MockInterestService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["variable",{"_index":300,"title":{},"body":{"components/AddActivityComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2547,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasco",{"_index":1844,"title":{},"body":{"injectables/MockActivityService.html":{}}}],["verificación",{"_index":2119,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}],["version",{"_index":367,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"index.html":{}}}],["vertical",{"_index":1783,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["vez",{"_index":287,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["via",{"_index":2527,"title":{},"body":{"index.html":{}}}],["virtualscrollermodule",{"_index":675,"title":{},"body":{"modules/AppModule.html":{}}}],["vistas",{"_index":264,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["visualiza",{"_index":2259,"title":{},"body":{"components/SignUpComponent.html":{}}}],["visualizar",{"_index":1369,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/SignUpComponent.html":{}}}],["void",{"_index":296,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"interceptors/InterceptorService.html":{},"guards/IsLogginInGuardService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MenuBarComponent.html":{},"injectables/NotificationService.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["vuelta",{"_index":1752,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["weight",{"_index":1419,"title":{},"body":{"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{}}}],["welcome",{"_index":1711,"title":{},"body":{"components/LoginComponent.html":{}}}],["white",{"_index":525,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{}}}],["width",{"_index":481,"title":{},"body":{"components/AddActivityComponent.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListCitiesComponent.html":{},"components/ListInterestComponent.html":{},"components/ListUserComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationComponent.html":{},"components/RecommendationMapComponent.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["window.localstorage.clear",{"_index":1651,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["window.localstorage.removeitem(token_key",{"_index":1648,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["window.localstorage.setitem(token_key",{"_index":1649,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["word",{"_index":1620,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["wrap",{"_index":2353,"title":{},"body":{"components/TableActivitiesComponent.html":{}}}],["wrap:break",{"_index":1621,"title":{},"body":{"components/ListUserComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["write",{"_index":967,"title":{},"body":{"components/EditActivitiesComponent.html":{}}}],["xito",{"_index":1679,"title":{},"body":{"components/LoginComponent.html":{}}}],["xss",{"_index":863,"title":{},"body":{"components/EditActivitiesComponent.html":{},"components/InformationActivitiesComponent.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/RecommendationMapComponent.html":{},"components/TableActivitiesComponent.html":{}}}],["y",{"_index":128,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddActivityComponent.html":{},"injectables/AuthService.html":{},"injectables/CityService.html":{},"components/EditActivitiesComponent.html":{},"components/EditUserAdminComponent.html":{},"components/EditUserComponent.html":{},"injectables/InterestService.html":{},"components/ListActivitiesEvaluateComponent.html":{},"components/ListInterestComponent.html":{},"components/LoginComponent.html":{},"components/MenuBarComponent.html":{},"components/RecommendationMapComponent.html":{},"injectables/RolService.html":{},"components/SignUpComponent.html":{},"components/TableActivitiesComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":2057,"title":{},"body":{"injectables/NotificationService.html":{}}}],["yourperfile",{"_index":1778,"title":{},"body":{"components/MenuBarComponent.html":{}}}],["zone.js",{"_index":2471,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":617,"title":{},"body":{"modules/AppModule.html":{},"components/MapComponent.html":{},"components/RecommendationMapComponent.html":{},"overview.html":{}}}],["zoomsnap",{"_index":2148,"title":{},"body":{"components/RecommendationMapComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Activity.html":{"url":"classes/Activity.html","title":"class - Activity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Activity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/activity.ts\n        \n\n            \n                Description\n            \n            \n                Clase Activity\nClase que define el tipo de entidad Actividad.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                interest\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                metadataImage\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                pathImage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:42\n                            \n                        \n\n                \n                    \n                        Dirección donde se encuentra localizada la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:34\n                            \n                        \n\n                \n                    \n                        Localidad donde se encuentra localizada la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:18\n                            \n                        \n\n                \n                    \n                        Descripción de la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:10\n                            \n                        \n\n                \n                    \n                        Identificador de la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:38\n                            \n                        \n\n                \n                    \n                        Tipo de interés asociado a la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:22\n                            \n                        \n\n                \n                    \n                        Latitud de la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:26\n                            \n                        \n\n                \n                    \n                        Longitud de la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metadataImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:46\n                            \n                        \n\n                \n                    \n                        Metadatos de la imagen\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:14\n                            \n                        \n\n                \n                    \n                        Nombre de la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pathImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:30\n                            \n                        \n\n                \n                    \n                        Ruta donde se encuentra la imagen asociada a la actividad\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Activity {\n  /**\n   * Identificador de la actividad\n   */\n  id: number;\n  /**\n   * Nombre de la actividad\n   */\n  name: string;\n  /**\n   * Descripción de la actividad\n   */\n  description: string;\n  /**\n   * Latitud de la actividad\n   */\n  latitude: number;\n  /**\n   * Longitud de la actividad\n   */\n  longitude: number;\n  /**\n   * Ruta donde se encuentra la imagen asociada a la actividad\n   */\n  pathImage?: string;\n  /**\n   * Localidad donde se encuentra localizada la actividad\n   */\n  city: string;\n  /**\n   * Tipo de interés asociado a la actividad\n   */\n  interest: string;\n  /**\n   * Dirección donde se encuentra localizada la actividad\n   */\n  address: string;\n  /**\n   * Metadatos de la imagen\n   */\n  metadataImage: {\n    /**\n     * Nombre del archivo\n     */\n    filename: string;\n    /**\n     * Tipo de extensión que especifica el tipo de datos que contiene el archivo.\n     */\n    mimeType: string;\n    /**\n     * Información del archivo codificada en Base64\n     */\n    data: string;\n  };\n}\n\n/**\n * Clase ActivityRecommended\n * \n * Clase que define el tipo de entidad Actividad Recomendada.\n */\nexport class ActivityRecommended extends Activity{\n  /**\n   * Peso de la actividad en la recomendación\n   */\n  score: number;\n  /**\n   * Media de las valoraciones realizadas a la actividad\n   */\n  average: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivityRecommended.html":{"url":"classes/ActivityRecommended.html","title":"class - ActivityRecommended","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivityRecommended\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/activity.ts\n        \n\n            \n                Description\n            \n            \n                Clase ActivityRecommended\nClase que define el tipo de entidad Actividad Recomendada.\n\n            \n\n            \n                Extends\n            \n            \n                        Activity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                average\n                            \n                            \n                                score\n                            \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                interest\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                metadataImage\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                pathImage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            average\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:75\n                            \n                        \n\n                \n                    \n                        Media de las valoraciones realizadas a la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity.ts:71\n                            \n                        \n\n                \n                    \n                        Peso de la actividad en la recomendación\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:42\n\n                            \n                        \n\n                \n                    \n                        Dirección donde se encuentra localizada la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:34\n\n                            \n                        \n\n                \n                    \n                        Localidad donde se encuentra localizada la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:18\n\n                            \n                        \n\n                \n                    \n                        Descripción de la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:10\n\n                            \n                        \n\n                \n                    \n                        Identificador de la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:38\n\n                            \n                        \n\n                \n                    \n                        Tipo de interés asociado a la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:22\n\n                            \n                        \n\n                \n                    \n                        Latitud de la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:26\n\n                            \n                        \n\n                \n                    \n                        Longitud de la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metadataImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:46\n\n                            \n                        \n\n                \n                    \n                        Metadatos de la imagen\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:14\n\n                            \n                        \n\n                \n                    \n                        Nombre de la actividad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pathImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Activity\n\n                                \n                            \n                        \n                            \n                                    Defined in         Activity:30\n\n                            \n                        \n\n                \n                    \n                        Ruta donde se encuentra la imagen asociada a la actividad\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Activity {\n  /**\n   * Identificador de la actividad\n   */\n  id: number;\n  /**\n   * Nombre de la actividad\n   */\n  name: string;\n  /**\n   * Descripción de la actividad\n   */\n  description: string;\n  /**\n   * Latitud de la actividad\n   */\n  latitude: number;\n  /**\n   * Longitud de la actividad\n   */\n  longitude: number;\n  /**\n   * Ruta donde se encuentra la imagen asociada a la actividad\n   */\n  pathImage?: string;\n  /**\n   * Localidad donde se encuentra localizada la actividad\n   */\n  city: string;\n  /**\n   * Tipo de interés asociado a la actividad\n   */\n  interest: string;\n  /**\n   * Dirección donde se encuentra localizada la actividad\n   */\n  address: string;\n  /**\n   * Metadatos de la imagen\n   */\n  metadataImage: {\n    /**\n     * Nombre del archivo\n     */\n    filename: string;\n    /**\n     * Tipo de extensión que especifica el tipo de datos que contiene el archivo.\n     */\n    mimeType: string;\n    /**\n     * Información del archivo codificada en Base64\n     */\n    data: string;\n  };\n}\n\n/**\n * Clase ActivityRecommended\n * \n * Clase que define el tipo de entidad Actividad Recomendada.\n */\nexport class ActivityRecommended extends Activity{\n  /**\n   * Peso de la actividad en la recomendación\n   */\n  score: number;\n  /**\n   * Media de las valoraciones realizadas a la actividad\n   */\n  average: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActivityService.html":{"url":"injectables/ActivityService.html","title":"injectable - ActivityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ActivityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/activity/activity.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activityUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addActivity\n                            \n                            \n                                    Public\n                                deleteActivity\n                            \n                            \n                                    Public\n                                editActivity\n                            \n                            \n                                    Public\n                                getActivities\n                            \n                            \n                                    Public\n                                getActivity\n                            \n                            \n                                    Public\n                                getRatedActivities\n                            \n                            \n                                    Public\n                                getRecommendedActivities\n                            \n                            \n                                    Public\n                                postRateActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/activity/activity.service.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor de la clase ActivityService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                objeto que permite hacer peticiones a la API y obtener resultados de la misma\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addActivity(formData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity.service.ts:56\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para añadir una nueva actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    formData\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto FormData que incluye la información de la nueva actividad.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteActivity(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity.service.ts:65\n                \n            \n\n\n            \n                \n                    Método que realiza una petición DELETE para eliminar una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador de la actividad\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editActivity(id, activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity.service.ts:76\n                \n            \n\n\n            \n                \n                    Método que realiza una petición PUT para modificar la información de una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador de la actividad\n\n                                    \n                                \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto actividad con la información actualizada.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getActivities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActivities()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity.service.ts:38\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de actividades.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActivity(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity.service.ts:47\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador de la actividad\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRatedActivities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRatedActivities(idUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity.service.ts:103\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de actividades valoradas por el usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idUser\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRecommendedActivities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecommendedActivities(idUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity.service.ts:94\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de actividades recomendadas al usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idUser\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postRateActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postRateActivity(activityRate)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity.service.ts:85\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para añadir una nueva valoración a una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activityRate\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto con la valoración del usuario a una actividad\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API \n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activityUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/activity'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/activity/activity.service.ts:26\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {UserLogin} from '../../models/user';\nimport {Observable} from 'rxjs';\nimport {JwtModel} from '../../models/jwt_model';\nimport {Activity, ActivityRecommended} from '../../models/activity';\n\n/**\n * Encabezado para las peticiones y respuestas HTTP\n */\nconst cabecera = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clase ActivityService\n * \n * Clase que se encarga de realizar peticiones a la API relacionadas con las actividades.\n */\nexport class ActivityService {\n\n  /**\n   * Almacena la url del endpoint\n   */\n  activityUrl = 'http://localhost:8090/api/activity';\n\n  /**\n   * Constructor de la clase ActivityService\n   * @param httpClient objeto que permite hacer peticiones a la API y obtener resultados de la misma\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Método que realiza una petición GET para obtener la lista de actividades.\n   * @returns el observable con la información enviada por la API\n   */\n  public getActivities(): Observable {\n    return this.httpClient.get(this.activityUrl + '/list', cabecera);\n  }\n  \n  /**\n   * Método que realiza una petición GET para obtener una actividad.\n   * @param id identificador de la actividad\n   * @returns el observable con la información enviada por la API\n   */\n  public getActivity(id): Observable {\n    return this.httpClient.get(this.activityUrl + '/details/' + id, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición POST para añadir una nueva actividad.\n   * @param formData objeto FormData que incluye la información de la nueva actividad.\n   * @returns el observable con la información enviada por la API\n   */\n  public addActivity(formData): Observable {\n    return this.httpClient.post(this.activityUrl + '/add', formData);\n  }\n\n  /**\n   * Método que realiza una petición DELETE para eliminar una actividad.\n   * @param id identificador de la actividad\n   * @returns el observable con la información enviada por la API \n   */\n  public deleteActivity(id): Observable {\n    return this.httpClient.delete(this.activityUrl + '/delete/' + id, cabecera);\n  }\n\n\n  /**\n   * Método que realiza una petición PUT para modificar la información de una actividad.\n   * @param id identificador de la actividad\n   * @param activity objeto actividad con la información actualizada.\n   * @returns el observable con la información enviada por la API \n   */\n  public editActivity(id, activity): Observable {\n    return this.httpClient.put(this.activityUrl + '/update/' + id, activity);\n  }\n\n  /**\n   * Método que realiza una petición POST para añadir una nueva valoración a una actividad.\n   * @param activityRate objeto con la valoración del usuario a una actividad\n   * @returns el observable con la información enviada por la API \n   */\n  public postRateActivity(activityRate): Observable{\n    return this.httpClient.post(this.activityUrl + '/rate', activityRate);\n  }\n\n  /**\n   * Método que realiza una petición GET para obtener la lista de actividades recomendadas al usuario.\n   * @param idUser identificador del usuario\n   * @returns el observable con la información enviada por la API\n   */\n  public getRecommendedActivities(idUser): Observable {\n    return this.httpClient.get(this.activityUrl + '/recommedation/' + idUser, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición GET para obtener la lista de actividades valoradas por el usuario.\n   * @param idUser identificador del usuario\n   * @returns el observable con la información enviada por la API\n   */\n  public getRatedActivities(idUser): Observable {\n    return this.httpClient.get(this.activityUrl + '/ratedActivities/' + idUser, cabecera);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddActivityComponent.html":{"url":"components/AddActivityComponent.html","title":"component - AddActivityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddActivityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-activity/add-activity.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-activity\n            \n\n            \n                styleUrls\n                ./add-activity.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-activity.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                files\n                            \n                            \n                                formAddActivity\n                            \n                            \n                                infoMessage\n                            \n                            \n                                interest\n                            \n                            \n                                noFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActivity\n                            \n                            \n                                dealWithFiles\n                            \n                            \n                                deleteFiles\n                            \n                            \n                                loadInterest\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, cityService: CityService, interestService: InterestService, activityService: ActivityService, router: Router, translateService: TranslateService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-activity/add-activity.component.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor de la clase AddActivityComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Clase que permite crear objetos de la clase FormGroup y FormControl.\n\n                                                        \n                                                \n                                                \n                                                        cityService\n                                                  \n                                                        \n                                                                        CityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de localidades\n\n                                                        \n                                                \n                                                \n                                                        interestService\n                                                  \n                                                        \n                                                                        InterestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de intereses\n\n                                                        \n                                                \n                                                \n                                                        activityService\n                                                  \n                                                        \n                                                                        ActivityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de actividades\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite la navegación entre vistas\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addActivity\n                        \n                        \n                    \n                \n            \n            \n                \naddActivity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-activity/add-activity.component.ts:167\n                \n            \n\n\n            \n                \n                    Método que crea un objeto FormData a partir de los datos introducidos en el formulario y se lo envía a la API.\nUna vez enviado, también será el encargado de redirigir al usuario al component TableActivities y de mostrar un mensaje al usuario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dealWithFiles\n                        \n                        \n                    \n                \n            \n            \n                \ndealWithFiles(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-activity/add-activity.component.ts:147\n                \n            \n\n\n            \n                \n                    Método que guarda en una variable el archivo seleccionado.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Evento que se produce cuando un archivo es seleccionado.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteFiles\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteFiles(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-activity/add-activity.component.ts:158\n                \n            \n\n\n            \n                \n                    Método que deshabilita el botón enviar cuando el usuario elimina el archivo imagen del campo de selección de ficheros.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Evento que se produce cuando un archivo es eliminado utilizando el botón correspondiente.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadInterest\n                        \n                        \n                    \n                \n            \n            \n                \nloadInterest()\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-activity/add-activity.component.ts:129\n                \n            \n\n\n            \n                \n                    Método que obtiene los intereses de la API y los almacena.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-activity/add-activity.component.ts:87\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n  \n      Inicializará el formulario con los campos.\n      Creará el mapa.\n      Cargará los distintos intereses.\n  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            files\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-activity/add-activity.component.ts:41\n                            \n                        \n\n                \n                    \n                        Almacena el archivo imagen seleccionado por el usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formAddActivity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-activity/add-activity.component.ts:33\n                            \n                        \n\n                \n                    \n                        Formulario para añadir una actividad.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            infoMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-activity/add-activity.component.ts:49\n                            \n                        \n\n                \n                    \n                        Almacena el mensaje que se muestra al usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SelectItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-activity/add-activity.component.ts:37\n                            \n                        \n\n                \n                    \n                        Array de objetos SelectItem para almacenar las distintas opciones del componente dropdown de intereses.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noFiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-activity/add-activity.component.ts:45\n                            \n                        \n\n                \n                    \n                        Indica si el usuario ha seleccionado una imagen o la ha eliminado.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {CityService} from '../services/city/city.service';\nimport {InterestService} from '../services/interest/interest.service';\nimport {MessageService, SelectItem} from 'primeng/api';\nimport * as L from 'leaflet';\nimport 'leaflet-control-geocoder';\nimport 'leaflet/dist/images/marker-shadow.png';\nimport 'leaflet/dist/images/marker-icon-2x.png';\nimport {ActivityService} from '../services/activity/activity.service';\nimport {Router} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\nimport {validadorNonwhiteSpace} from '../validators/validatorNonWhiteSpace.directive';\n\n@Component({\n  selector: 'app-add-activity',\n  templateUrl: './add-activity.component.html',\n  styleUrls: ['./add-activity.component.scss']\n})\n/**\n * Clase AddActivityComponent.\n *\n * Clase que permite añadir una nueva actividad.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class AddActivityComponent implements OnInit {\n\n  /**\n   * Formulario para añadir una actividad.\n   */\n  formAddActivity: FormGroup;\n  /**\n   * Array de objetos SelectItem para almacenar las distintas opciones del componente dropdown de intereses.\n   */\n  interest: SelectItem[];\n  /**\n   * Almacena el archivo imagen seleccionado por el usuario.\n   */\n  files = null;\n  /**\n   * Indica si el usuario ha seleccionado una imagen o la ha eliminado.\n   */\n  noFiles: boolean = true;\n  /**\n   * Almacena el mensaje que se muestra al usuario.\n   */\n  infoMessage = [];\n\n  /**\n   * Constructor de la clase AddActivityComponent\n   *\n   * @param formBuilder\n   * Clase que permite crear objetos de la clase FormGroup y FormControl.\n   * @param cityService\n   * Servicio de localidades\n   * @param interestService\n   * Servicio de intereses\n   * @param activityService\n   * Servicio de actividades\n   * @param router\n   * Servicio que permite la navegación entre vistas\n   * @param translateService\n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   * @param messageService\n   * Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private cityService: CityService,\n    private interestService: InterestService,\n    private activityService: ActivityService,\n    private router: Router,\n    private translateService: TranslateService,\n    private messageService: MessageService,\n  ) { }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   *  \n   *      Inicializará el formulario con los campos.\n   *      Creará el mapa.\n   *      Cargará los distintos intereses.\n   *  \n   */\n  ngOnInit(): void {\n    this.formAddActivity = this.formBuilder.group({\n      name: ['', [Validators.required, validadorNonwhiteSpace()]],\n      description: ['', [Validators.required, validadorNonwhiteSpace()]],\n      latitude: ['', [Validators.required]],\n      longitude: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      nameInterest: ['', [Validators.required]],\n      address: ['', Validators.required]\n    });\n\n    var map = L.map('mapActivity').setView([43.333333, -6], 8);\n\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; OpenStreetMap'\n    }).addTo(map);\n\n    var opciones = {\n      placeholder: 'Escriba la dirección...',\n      errorMessage: 'No se han encontrado direcciones'\n    };\n\n    var control = L.Control.geocoder(opciones).on('markgeocode', function (e) {\n\n      var latitud = e.geocode.center.lat;\n      this.formAddActivity.controls['latitude'].setValue(latitud);\n\n      var longitud = e.geocode.center.lng;\n      this.formAddActivity.controls['longitude'].setValue(longitud);\n\n      var council = e.geocode.properties.address.city || e.geocode.properties.address.town || e.geocode.properties.address.village;\n      this.formAddActivity.controls['city'].setValue(council);\n\n      this.formAddActivity.controls['address'].setValue(e.geocode.name);\n    }.bind(this)).addTo(map);\n\n    this.loadInterest();\n  }\n\n  /**\n   * Método que obtiene los intereses de la API y los almacena.\n   */\n  loadInterest(){\n    this.interestService.getInterests().subscribe(\n      data => {\n        this.interest = [];\n        this.interest.push({label: 'Selecciona interés', value: null});\n        data.forEach( i => {\n          this.interest.push({label: i.nameInterest, value: i.nameInterest});\n        });\n      }\n    );\n  }\n\n  /**\n   * Método que guarda en una variable el archivo seleccionado.\n   *\n   * @param event\n   * Evento que se produce cuando un archivo es seleccionado.\n   */\n  dealWithFiles(event){\n    this.files = event.files[0];\n    this.noFiles = false;\n  }\n\n  /**\n   * Método que deshabilita el botón enviar cuando el usuario elimina el archivo imagen del campo de selección de ficheros.\n   *\n   * @param event\n   * Evento que se produce cuando un archivo es eliminado utilizando el botón correspondiente.\n   */\n  deleteFiles(event){\n    this.files = null;\n    this.noFiles = true;\n  }\n\n  /**\n   * Método que crea un objeto FormData a partir de los datos introducidos en el formulario y se lo envía a la API.\n   * Una vez enviado, también será el encargado de redirigir al usuario al component TableActivities y de mostrar un mensaje al usuario.\n   */\n  addActivity(){\n    if (this.files !== null && this.formAddActivity.valid){\n      const formData = new FormData();\n      formData.append('image', this.files);\n      formData.append('name', this.formAddActivity.get('name').value);\n      formData.append('description', this.formAddActivity.get('description').value);\n      formData.append('latitude', this.formAddActivity.get('latitude').value);\n      formData.append('longitude', this.formAddActivity.get('longitude').value);\n      formData.append('city', this.formAddActivity.get('city').value);\n      formData.append('interest', this.formAddActivity.get('nameInterest').value);\n      formData.append('address', this.formAddActivity.get('address').value);\n\n      this.translateService.onLangChange.subscribe(event => {\n        var aux = this.infoMessage;\n        this.infoMessage = [];\n        for (let message of aux){\n          var mAux = message;\n          mAux.summary = this.translateService.instant(\"error\");\n          mAux.detail = this.translateService.instant(message.keyTranslate);\n          this.infoMessage.push(mAux);\n        }\n      });\n\n      this.activityService.addActivity(formData).subscribe(\n        data => {\n\n          var message = this.translateService.instant('activity_add_message',{ 'nameActivity': this.formAddActivity.get('name').value });\n          this.messageService.add({key: 'activity_added', severity: 'success', summary: this.translateService.instant('activity_add'), detail:message});\n\n          setTimeout(() => {\n            this.router.navigate(['/activities']);\n          }, 1500);\n        },\n        err => {\n          if (err.error.mensaje === \"La ciudad no existe\"){\n            var message = this.translateService.instant('error_city_council');\n            this.infoMessage = [\n              { key: 'add_activity_error', severity:'error', summary: this.translateService.instant('error'), detail: message, keyTranslate: 'error_city_council'}\n            ];\n          }\n          else if (err.error.mensaje.includes(\"Ya existe una actividad con el nombre\")){\n            var message = this.translateService.instant('error_activity_repeated');\n            this.infoMessage = [\n              { key: 'add_activity_error', severity:'error', summary: this.translateService.instant('error'), detail: message, keyTranslate: 'error_activity_repeated'}\n            ];\n          }\n        }\n      );\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n  {{ 'add_activity' | translate }}\n  \n  \n    \n      \n        \n          \n            {{ 'name_activity' | translate }}*:\n            \n          \n          \n            {{ 'description_activity' | translate }}*:\n            \n          \n          \n            {{ 'interest' | translate }}*:\n            \n            \n          \n          \n            {{ 'image' | translate }}*:\n            \n            \n            {{ 'message_file_required' | translate }}\n          \n        \n      \n      \n        {{ 'message_info_map' | translate }}*:\n        \n      \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./add-activity.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.add-activity-container {\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n\n  h1{\n    text-align:center;\n  }\n\n  ::ng-deep .p-messages{\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n}\n\n.form_add_activity_container{\n  display: flex;\n}\n\n.input_container, .map_container{\n  width: 50%;\n}\n\n.grid-container{\n  width: 40vw;\n  min-width: 375px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 5px;\n}\n\n.button_add_activity_container{\n  text-align: right;\n\n  ::ng-deep .p-button{\n    margin: 5px;\n  }\n}\n\n#mapActivity{\n  width: 45vw;\n  height: 40vw;\n  min-height: 400px;\n  min-width: 390px;\n}\n\n.fileUploadAddActivity {\n  ::ng-deep .p-fileupload-row{\n    div:nth-child(2) {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n  }\n}\n\n.message-error{\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'add_activity\\' | translate }}                                            {{ \\'name_activity\\' | translate }}*:                                            {{ \\'description_activity\\' | translate }}*:                                            {{ \\'interest\\' | translate }}*:                                                        {{ \\'image\\' | translate }}*:                                    {{ \\'message_file_required\\' | translate }}                                      {{ \\'message_info_map\\' | translate }}*:                                  '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddActivityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, config: PrimeNGConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    PrimeNGConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {PrimeNGConfig} from 'primeng/api';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(public translate: TranslateService, private config: PrimeNGConfig){\n    translate.addLangs(['en', 'es']);\n    translate.setDefaultLang('es');\n    translate.use('es');\n    this.translate.get('primeng').subscribe(res => this.config.setTranslation(res));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddActivityComponent\n\nAddActivityComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddActivityComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditActivitiesComponent\n\nEditActivitiesComponent\n\nAppModule -->\n\nEditActivitiesComponent->AppModule\n\n\n\n\n\nEditUserAdminComponent\n\nEditUserAdminComponent\n\nAppModule -->\n\nEditUserAdminComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nInformationActivitiesComponent\n\nInformationActivitiesComponent\n\nAppModule -->\n\nInformationActivitiesComponent->AppModule\n\n\n\n\n\nListActivitiesEvaluateComponent\n\nListActivitiesEvaluateComponent\n\nAppModule -->\n\nListActivitiesEvaluateComponent->AppModule\n\n\n\n\n\nListCitiesComponent\n\nListCitiesComponent\n\nAppModule -->\n\nListCitiesComponent->AppModule\n\n\n\n\n\nListInterestComponent\n\nListInterestComponent\n\nAppModule -->\n\nListInterestComponent->AppModule\n\n\n\n\n\nListUserComponent\n\nListUserComponent\n\nAppModule -->\n\nListUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nMenuBarComponent\n\nMenuBarComponent\n\nAppModule -->\n\nMenuBarComponent->AppModule\n\n\n\n\n\nRecommendationComponent\n\nRecommendationComponent\n\nAppModule -->\n\nRecommendationComponent->AppModule\n\n\n\n\n\nRecommendationMapComponent\n\nRecommendationMapComponent\n\nAppModule -->\n\nRecommendationMapComponent->AppModule\n\n\n\n\n\nSignUpComponent\n\nSignUpComponent\n\nAppModule -->\n\nSignUpComponent->AppModule\n\n\n\n\n\nTableActivitiesComponent\n\nTableActivitiesComponent\n\nAppModule -->\n\nTableActivitiesComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nAppModule -->\n\nNotificationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddActivityComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            EditActivitiesComponent\n                        \n                        \n                            EditUserAdminComponent\n                        \n                        \n                            EditUserComponent\n                        \n                        \n                            InformationActivitiesComponent\n                        \n                        \n                            ListActivitiesEvaluateComponent\n                        \n                        \n                            ListCitiesComponent\n                        \n                        \n                            ListInterestComponent\n                        \n                        \n                            ListUserComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MapComponent\n                        \n                        \n                            MenuBarComponent\n                        \n                        \n                            RecommendationComponent\n                        \n                        \n                            RecommendationMapComponent\n                        \n                        \n                            SignUpComponent\n                        \n                        \n                            TableActivitiesComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport {APP_INITIALIZER, LOCALE_ID, NgModule} from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport {ButtonModule} from 'primeng/button';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport {PasswordModule} from 'primeng/password';\nimport { MenuBarComponent } from './menu-bar/menu-bar.component';\nimport {MenubarModule} from 'primeng/menubar';\nimport {InputNumberModule} from 'primeng/inputnumber';\n\nimport {DropdownModule} from 'primeng/dropdown';\nimport {MessageModule} from 'primeng/message';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { RecommendationComponent } from './recommendation/recommendation.component';\nimport {interceptorProvider} from './interceptors/interceptor.service';\nimport { MapComponent } from './map/map.component';\nimport { TableActivitiesComponent } from './table-activities/table-activities.component';\nimport {TableModule} from 'primeng/table';\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\nimport {ConfirmationService, Message, MessageService} from 'primeng/api';\nimport {ToolbarModule} from 'primeng/toolbar';\nimport {DialogModule} from 'primeng/dialog';\nimport {FileUploadModule} from 'primeng/fileupload';\nimport {InputTextareaModule} from 'primeng/inputtextarea';\nimport { ListCitiesComponent } from './list-cities/list-cities.component';\nimport {VirtualScrollerModule} from 'primeng/virtualscroller';\nimport {OrderListModule} from 'primeng/orderlist';\nimport { ListInterestComponent } from './list-interest/list-interest.component';\nimport { ListUserComponent } from './list-user/list-user.component';\nimport {TabPanel, TabViewModule} from 'primeng/tabview';\nimport {TabMenuModule} from 'primeng/tabmenu';\nimport {CardModule} from 'primeng/card';\nimport {StepsModule} from 'primeng/steps';\nimport {DialogService} from 'primeng/dynamicdialog';\nimport {TooltipModule} from 'primeng/tooltip';\nimport { InformationActivitiesComponent } from './information-activities/information-activities.component';\nimport {ToastModule} from 'primeng/toast';\nimport { EditActivitiesComponent } from './edit-activities/edit-activities.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport {CheckboxModule} from 'primeng/checkbox';\nimport {MessagesModule} from 'primeng/messages';\nimport {NotificationService} from './services/message/notification.service';\nimport { EditUserAdminComponent } from './edit-user-admin/edit-user-admin.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport {ScrollPanelModule} from 'primeng/scrollpanel';\nimport {RadioButtonModule} from 'primeng/radiobutton';\nimport {CalendarModule} from 'primeng/calendar';\nimport {AddActivityComponent} from './add-activity/add-activity.component';\nimport { ListActivitiesEvaluateComponent } from './list-activities-evaluate/list-activities-evaluate.component';\nimport {DataViewModule} from 'primeng/dataview';\nimport {RatingModule} from 'primeng/rating';\nimport {ChipModule} from 'primeng/chip';\nimport {TagModule} from 'primeng/tag';\nimport {RecommendationMapComponent} from './recommendation-map/recommendation-map.component';\nimport {MultiSelectModule} from 'primeng/multiselect';\nimport {ListboxModule} from 'primeng/listbox';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignUpComponent,\n    MenuBarComponent,\n    RecommendationComponent,\n    MapComponent,\n    TableActivitiesComponent,\n    ListCitiesComponent,\n    ListInterestComponent,\n    ListUserComponent,\n    InformationActivitiesComponent,\n    EditActivitiesComponent,\n    EditUserAdminComponent,\n    EditUserComponent,\n    AddActivityComponent,\n    ListActivitiesEvaluateComponent,\n    RecommendationMapComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ButtonModule,\n    InputTextModule,\n    ReactiveFormsModule,\n    PasswordModule,\n    MenubarModule,\n    InputNumberModule,\n    DropdownModule,\n    MessageModule,\n    TableModule,\n    ConfirmDialogModule,\n    ToolbarModule,\n    DialogModule,\n    FileUploadModule,\n    InputTextareaModule,\n    FormsModule,\n    VirtualScrollerModule,\n    OrderListModule,\n    TabViewModule,\n    TabMenuModule,\n    CardModule,\n    StepsModule,\n    TooltipModule,\n    ToastModule,\n    CheckboxModule,\n    MessagesModule,\n    ScrollPanelModule,\n    RadioButtonModule,\n    CalendarModule,\n    DataViewModule,\n    RatingModule,\n    TagModule,\n    MultiSelectModule,\n    ListboxModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpTranslateLoader,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  providers: [\n    interceptorProvider,\n    ConfirmationService,\n    DialogService,\n    MessageService,\n    NotificationService\n  ],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n\nexport function httpTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {SignUpComponent} from './sign-up/sign-up.component';\nimport {RecommendationComponent} from './recommendation/recommendation.component';\nimport {AuthGuardService} from './guards/auth-guard/auth-guard.service';\nimport {IsLogginInGuardService} from './guards/isLogginInGuard/is-loggin-in-guard.service';\nimport {MapComponent} from './map/map.component';\nimport {TableActivitiesComponent} from './table-activities/table-activities.component';\nimport {ListCitiesComponent} from './list-cities/list-cities.component';\nimport {ListInterestComponent} from './list-interest/list-interest.component';\nimport {ListUserComponent} from './list-user/list-user.component';\nimport {EditUserComponent} from './edit-user/edit-user.component';\nimport {RoleGuardService} from './guards/RoleGuard/role-guard.service';\nimport {EditActivitiesComponent} from './edit-activities/edit-activities.component';\nimport {EditUserAdminComponent} from './edit-user-admin/edit-user-admin.component';\nimport {AddActivityComponent} from './add-activity/add-activity.component';\nimport { ListActivitiesEvaluateComponent } from './list-activities-evaluate/list-activities-evaluate.component';\nimport {RecommendationMapComponent} from './recommendation-map/recommendation-map.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'login', pathMatch: 'full'},\n  {path: 'login', component: LoginComponent, resolve: [IsLogginInGuardService]},\n  {path: 'signup', component: SignUpComponent},\n  {path: 'recommendation', component: RecommendationComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: ['user', 'admin']\n  }},\n  {path: 'map', component: MapComponent},\n  {path: 'activities', component: TableActivitiesComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: 'admin'\n  }},\n  {path: 'activities/edit/:id', component: EditActivitiesComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: 'admin'\n  }},\n  {path: 'activities/add', component: AddActivityComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: 'admin'\n    }},\n  {path: 'cities', component: ListCitiesComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: 'admin'\n    }},\n  {path: 'interest', component: ListInterestComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: 'admin'\n  }},\n  {path: 'user', component: ListUserComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: 'admin'\n  }},\n  {path: 'admin/user/edit/:id', component: EditUserAdminComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: 'admin'\n  }},\n  {path: 'profile/edit', component: EditUserComponent, canActivate: [AuthGuardService]},\n  {path: 'recommendationMap', component: RecommendationMapComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: ['user', 'admin']\n    }\n  },\n  {\n    path: 'activitiesEvaluate', component: ListActivitiesEvaluateComponent,\n    canActivate: [RoleGuardService],\n    data: {\n      expectedRol: ['user', 'admin']\n    }\n  },\n  {path: '**', redirectTo: 'login', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth-guard/auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth-guard/auth-guard.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/auth-guard/auth-guard.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {LocalStorageService} from '../../services/local-storage/local-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(private router: Router, private localStorageService: LocalStorageService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.localStorageService.getToken()){\n      return true;\n    }\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor de la clase AuthService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                objeto que permite hacer peticiones a la API y obtener resultados de la misma\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: UserLogin)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:38\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para autenticar al usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto usuario que incluye la información del usuario que se intenta autenticar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(user: UserSignUp)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:47\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para registrar a un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserSignUp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto usuario que incluye la información del usuario que se registra\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/auth'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {UserLogin, UserSignUp} from '../../models/user';\nimport {JwtModel} from '../../models/jwt_model';\n\n/**\n * Encabezado para las peticiones y respuestas HTTP\n */\nconst cabecera = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clase AuthService\n * \n * Clase que se encarga de realizar peticiones a la API relacionadas con la autenticación.\n */\nexport class AuthService {\n\n  /**\n   * Almacena la url del endpoint\n   */\n  authURL = 'http://localhost:8090/api/auth';\n\n  /**\n   * Constructor de la clase AuthService\n   * @param httpClient objeto que permite hacer peticiones a la API y obtener resultados de la misma\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Método que realiza una petición POST para autenticar al usuario.\n   * @param user objeto usuario que incluye la información del usuario que se intenta autenticar\n   * @returns el observable con la información enviada por la API\n   */\n  public login(user: UserLogin): Observable {\n    return this.httpClient.post(this.authURL + '/login', user, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición POST para registrar a un usuario.\n   * @param user objeto usuario que incluye la información del usuario que se registra\n   * @returns el observable con la información enviada por la API\n   */\n  public signUp(user: UserSignUp): Observable {\n    return this.httpClient.post(this.authURL + '/signup', user, cabecera);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/City.html":{"url":"classes/City.html","title":"class - City","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  City\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/city.ts\n        \n\n            \n                Description\n            \n            \n                Clase que define el tipo de entidad Localidad.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/city.ts:8\n                            \n                        \n\n                \n                    \n                        Identificador de la localidad\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/city.ts:12\n                            \n                        \n\n                \n                    \n                        Nombre de la localidad\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class City {\n  /**\n   * Identificador de la localidad\n   */\n  id: number;\n  /**\n   * Nombre de la localidad\n   */\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CityService.html":{"url":"injectables/CityService.html","title":"injectable - CityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/city/city.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cityURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addCity\n                            \n                            \n                                    Public\n                                deleteCity\n                            \n                            \n                                    Public\n                                editCity\n                            \n                            \n                                    Public\n                                getCities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/city/city.service.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor de la clase CityService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                objeto que permite hacer peticiones a la API y obtener resultados de la misma\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCity(city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/city/city.service.ts:47\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para añadir una nueva localidad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto interés que incluye la información de la nueva localidad\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCity(city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/city/city.service.ts:56\n                \n            \n\n\n            \n                \n                    Método que realiza una petición DELETE para eliminar una localidad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto localidad que se quiere eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editCity(id, city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/city/city.service.ts:66\n                \n            \n\n\n            \n                \n                    Método que realiza una petición PUT para modificar la información de una localidad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador de la localidad\n\n                                    \n                                \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto localidad con la información actualizada. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCities()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/city/city.service.ts:38\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de localidades.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cityURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/city'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/city/city.service.ts:26\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {UserLogin} from '../../models/user';\nimport {Observable} from 'rxjs';\nimport {JwtModel} from '../../models/jwt_model';\nimport {City} from '../../models/city';\n\n/**\n * Encabezado para las peticiones y respuestas HTTP\n */\nconst cabecera = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clase CityService\n * \n * Clase que se encarga de realizar peticiones a la API relacionadas con las localidades.\n */\nexport class CityService {\n\n  /**\n   * Almacena la url del endpoint\n   */\n  cityURL = 'http://localhost:8090/api/city';\n\n  /**\n   * Constructor de la clase CityService\n   * @param httpClient objeto que permite hacer peticiones a la API y obtener resultados de la misma\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Método que realiza una petición GET para obtener la lista de localidades.\n   * @returns el observable con la información enviada por la API\n   */\n  public getCities(): Observable {\n    return this.httpClient.get(this.cityURL + '/list', cabecera);\n  }\n\n  /**\n   * Método que realiza una petición POST para añadir una nueva localidad.\n   * @param city  objeto interés que incluye la información de la nueva localidad\n   * @returns el observable con la información enviada por la API\n   */\n  public addCity(city): Observable {\n    return this.httpClient.post(this.cityURL + '/add', city, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición DELETE para eliminar una localidad.\n   * @param city objeto localidad que se quiere eliminar\n   * @returns el observable con la información enviada por la API\n   */\n  public deleteCity(city): Observable {\n    return this.httpClient.delete(this.cityURL + '/delete/' + city.id, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición PUT para modificar la información de una localidad.\n   * @param id identificador de la localidad\n   * @param city objeto localidad con la información actualizada. \n   * @returns el observable con la información enviada por la API\n   */\n  public editCity(id, city): Observable {\n    return this.httpClient.put(this.cityURL + '/update/' + id, city, cabecera);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditActivitiesComponent.html":{"url":"components/EditActivitiesComponent.html","title":"component - EditActivitiesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditActivitiesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-activities/edit-activities.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-activities\n            \n\n            \n                styleUrls\n                ./edit-activities.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-activities.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activity\n                            \n                            \n                                activityId\n                            \n                            \n                                editActivitiesForm\n                            \n                            \n                                file\n                            \n                            \n                                image\n                            \n                            \n                                infoMessage\n                            \n                            \n                                interest\n                            \n                            \n                                valueUnchanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeImage\n                            \n                            \n                                dataURItoBlob\n                            \n                            \n                                deleteFiles\n                            \n                            \n                                editActivity\n                            \n                            \n                                isEquivalent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                observeChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, interestService: InterestService, activityService: ActivityService, activatedRoute: ActivatedRoute, router: Router, sanitizer: DomSanitizer, translateService: TranslateService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-activities/edit-activities.component.ts:60\n                            \n                        \n\n                \n                    \n                            Constructor de la clase EditActivitiesComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Clase que permite crear objetos de la clase FormGroup y FormControl.\n\n                                                        \n                                                \n                                                \n                                                        interestService\n                                                  \n                                                        \n                                                                        InterestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de intereses\n\n                                                        \n                                                \n                                                \n                                                        activityService\n                                                  \n                                                        \n                                                                        ActivityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de actividades\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Proporciona acceso a la información sobre una ruta asociada a un componente que se carga.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite la navegación entre vistas\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeImage\n                        \n                        \n                    \n                \n            \n            \n                \nchangeImage(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-activities/edit-activities.component.ts:306\n                \n            \n\n\n            \n                \n                    Método que cambia dinámicamente el src de una etiqueta img en el DOM\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Evento que se produce cuando un archivo es seleccionado.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dataURItoBlob\n                        \n                        \n                    \n                \n            \n            \n                \ndataURItoBlob(dataURI: any, fileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-activities/edit-activities.component.ts:186\n                \n            \n\n\n            \n                \n                    Método que convierte la información codificada en base64 en un objeto File.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dataURI\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Url con la información codificada en base64\n\n                                    \n                                \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nombre del archivo\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     File\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteFiles\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteFiles(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-activities/edit-activities.component.ts:320\n                \n            \n\n\n            \n                \n                    Método que deshabilita el botón enviar cuando el usuario elimina el archivo imagen del campo de selección de ficheros.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Evento que se produce cuando un archivo es eliminado utilizando el botón correspondiente.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editActivity\n                        \n                        \n                    \n                \n            \n            \n                \neditActivity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-activities/edit-activities.component.ts:240\n                \n            \n\n\n            \n                \n                    Método que crea un objeto FormData a partir de los datos del formulario y se lo envía a la API.\nUna vez enviado, también será el encargado de redirigir al usuario al componente TableActivities y de mostrar un mensaje al usuario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEquivalent\n                        \n                        \n                    \n                \n            \n            \n                \nisEquivalent(a, b)\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-activities/edit-activities.component.ts:223\n                \n            \n\n\n            \n                \n                    Método que compara dos objetos JSON. Devuelve true si son iguales y false en caso contrario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Primer objeto a comparar.\n\n                                    \n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Segundo objeto a comparar.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-activities/edit-activities.component.ts:103\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n  \n      El id de la actividad.\n      Inicializará el formulario con los datos de la actividad.\n      Creará el mapa con el correspondiente marcador.\n      Cargará los dintintos intereses y la información de la actividad.\n      Saneará la URL de la imagen asociada a la actividad.\n  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            observeChanges\n                        \n                        \n                    \n                \n            \n            \n                \nobserveChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-activities/edit-activities.component.ts:210\n                \n            \n\n\n            \n                \n                    Método que se ejecuta cuando algún valor del formulario cambia.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activity\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-activities/edit-activities.component.ts:44\n                            \n                        \n\n                \n                    \n                        Almacena la actividad seleccionada para editar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activityId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-activities/edit-activities.component.ts:40\n                            \n                        \n\n                \n                    \n                        Almacena el id de la actividad seleccionada para editar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editActivitiesForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-activities/edit-activities.component.ts:32\n                            \n                        \n\n                \n                    \n                        Formulario para editar la información de una actividad.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            file\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-activities/edit-activities.component.ts:48\n                            \n                        \n\n                \n                    \n                        Almacena el archivo imagen.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-activities/edit-activities.component.ts:52\n                            \n                        \n\n                \n                    \n                        Almacena la url de la imagen saneada.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            infoMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-activities/edit-activities.component.ts:60\n                            \n                        \n\n                \n                    \n                        Almacena el mensaje que se muestra al usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SelectItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-activities/edit-activities.component.ts:36\n                            \n                        \n\n                \n                    \n                        Array de objetos SelectItem para almacenar las distintas opciones del componente dropdown de intereses.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueUnchanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-activities/edit-activities.component.ts:56\n                            \n                        \n\n                \n                    \n                        Indica si el formulario tiene algún cambio o no.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MessageService, SelectItem} from 'primeng/api';\nimport {forkJoin} from 'rxjs';\nimport {CityService} from '../services/city/city.service';\nimport {InterestService} from '../services/interest/interest.service';\nimport {ActivityService} from '../services/activity/activity.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport * as L from 'leaflet';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {TranslateService} from '@ngx-translate/core';\nimport {validadorNonwhiteSpace} from '../validators/validatorNonWhiteSpace.directive';\n\n@Component({\n  selector: 'app-edit-activities',\n  templateUrl: './edit-activities.component.html',\n  styleUrls: ['./edit-activities.component.scss']\n})\n/**\n * Clase EditActivitiesComponent\n *\n * Clase que permite editar la información de una actividad.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class EditActivitiesComponent implements OnInit {\n\n  /**\n   * Formulario para editar la información de una actividad.\n   */\n  editActivitiesForm: FormGroup;\n  /**\n   * Array de objetos SelectItem para almacenar las distintas opciones del componente dropdown de intereses.\n   */\n  interest: SelectItem[];\n  /**\n   * Almacena el id de la actividad seleccionada para editar.\n   */\n  activityId;\n  /**\n   * Almacena la actividad seleccionada para editar.\n   */\n  activity;\n  /**\n   * Almacena el archivo imagen.\n   */\n  file;\n  /**\n   * Almacena la url de la imagen saneada.\n   */\n  image;\n  /**\n   * Indica si el formulario tiene algún cambio o no.\n   */\n  valueUnchanged: boolean = true;\n  /**\n   * Almacena el mensaje que se muestra al usuario.\n   */\n  infoMessage = [];\n\n  /**\n   * Constructor de la clase EditActivitiesComponent\n   *\n   * @param fb\n   * Clase que permite crear objetos de la clase FormGroup y FormControl.\n   * @param interestService\n   * Servicio de intereses\n   * @param activityService\n   * Servicio de actividades\n   * @param activatedRoute\n   * Proporciona acceso a la información sobre una ruta asociada a un componente que se carga.\n   * @param router\n   * Servicio que permite la navegación entre vistas\n   * @param sanitizer\n   * Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n   * @param translateService\n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   * @param messageService\n   * Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n   */\n  constructor(\n    private fb: FormBuilder,\n    private interestService: InterestService,\n    private activityService: ActivityService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private sanitizer: DomSanitizer,\n    private translateService: TranslateService,\n    private messageService: MessageService\n  ) { }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   *  \n   *      El id de la actividad.\n   *      Inicializará el formulario con los datos de la actividad.\n   *      Creará el mapa con el correspondiente marcador.\n   *      Cargará los dintintos intereses y la información de la actividad.\n   *      Saneará la URL de la imagen asociada a la actividad.\n   *  \n   */\n  ngOnInit(): void {\n    this.activityId = this.activatedRoute.snapshot.paramMap.get('id');\n\n    this.editActivitiesForm = this.fb.group({\n      name: ['', [Validators.required, validadorNonwhiteSpace()]],\n      description: ['', [Validators.required, validadorNonwhiteSpace()]],\n      latitude: ['', Validators.required],\n      longitude: ['', Validators.required],\n      city: ['', Validators.required],\n      interest: ['', Validators.required],\n      address: ['', Validators.required]\n    });\n\n    forkJoin([\n      this.interestService.getInterests(),\n      this.activityService.getActivity(this.activityId)\n    ]).subscribe(([response1, response2]) => {\n      this.interest = [];\n      response1.forEach( i => {\n        this.interest.push({label: i.nameInterest, value: i.nameInterest});\n      });\n      this.activity = response2;\n      this.editActivitiesForm.patchValue(\n        {\n          name: response2.name,\n          description: response2.description,\n          latitude: response2.latitude,\n          longitude: response2.longitude,\n          city: response2.city,\n          interest: response2.interest,\n          address: response2.address\n        }\n      );\n\n      var map = L.map('mapActivityEdit').setView([response2.latitude, response2.longitude], 8);\n\n      const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap'\n      }).addTo(map);\n\n      var opciones = {\n        placeholder: \"Escriba la dirección...\",\n        errorMessage: \"No se han encontrado direcciones\",\n      };\n\n      var control = L.Control.geocoder(opciones).on('markgeocode', function (e) {\n\n        var latitud = e.geocode.center.lat;\n        this.editActivitiesForm.controls['latitude'].setValue(latitud);\n\n        var longitud = e.geocode.center.lng;\n        this.editActivitiesForm.controls['longitude'].setValue(longitud);\n\n        var council = e.geocode.properties.address.city || e.geocode.properties.address.town || e.geocode.properties.address.village;\n        console.log(council);\n        this.editActivitiesForm.controls['city'].setValue(council);\n\n        this.editActivitiesForm.controls['address'].setValue(e.geocode.name);\n      }.bind(this)).addTo(map);\n\n      control.options.geocoder.geocode(response2.address, function(results) {\n          var resultado = results[0];\n          if (resultado)\n            control.markGeocode(resultado);\n        }\n      );\n\n      var url = 'data:' + this.activity.metadataImage.mimeType + ';base64,' + this.activity.metadataImage.data;\n      this.image = this.sanitizer.bypassSecurityTrustUrl(url);\n\n      this.file = this.dataURItoBlob(url, this.activity.pathImage);\n\n      this.observeChanges();\n    });\n  }\n\n  /**\n   * Método que convierte la información codificada en base64 en un objeto File.\n   * @param dataURI\n   * Url con la información codificada en base64\n   * @param fileName\n   * Nombre del archivo\n   */\n  dataURItoBlob(dataURI: any, fileName: string): File{\n\n    // convert base64/URLEncoded data component to a file\n    var byteString;\n    if (dataURI.split(',')[0].indexOf('base64') >= 0)\n      byteString = atob(dataURI.split(',')[1]);\n    else\n      byteString = unescape(dataURI.split(',')[1]);\n\n    // separate out the mime component\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n    // write the bytes of the string to a typed array\n    var ia = new Uint8Array(byteString.length);\n    for (var i = 0; i  {\n      this.isEquivalent(this.activity, values);\n    });\n  }\n\n  /**\n   * Método que compara dos objetos JSON. Devuelve true si son iguales y false en caso contrario.\n   * @param a\n   * Primer objeto a comparar.\n   * @param b\n   * Segundo objeto a comparar.\n   */\n  isEquivalent(a, b) {\n    this.valueUnchanged = true;\n    var aProps = Object.keys(a);\n    var bProps = Object.keys(b);\n    for (var i = 0; i  {\n      var aux = this.infoMessage;\n      this.infoMessage = [];\n      for (let message of aux){\n        var mAux = message;\n        mAux.summary = this.translateService.instant(\"error\");\n        mAux.detail = this.translateService.instant(message.keyTranslate);\n        this.infoMessage.push(mAux);\n      }\n    });\n\n    this.activityService.editActivity(this.activityId, formData).subscribe(\n      data => {\n\n        var message = this.translateService.instant('activity_edit_message',{ 'nameActivity': this.editActivitiesForm.get('name').value });\n        this.messageService.add({key: 'activity_edited', severity: 'success', summary: this.translateService.instant('activity_edit'), detail: message});\n\n        setTimeout(() => {\n          this.router.navigate(['/activities']);\n        }, 1500);\n      },\n      err => {\n        if (err.error.mensaje === \"La ciudad no existe\"){\n          var message = this.translateService.instant('error_city_council');\n          this.infoMessage = [\n            {\n              key: 'edit_activity_error',\n              severity: 'error',\n              summary: this.translateService.instant('error'),\n              detail: message,\n              keyTranslate: 'error_city_council'\n            }\n          ];\n        }\n        else if (err.error.mensaje.includes(\"Ya hay una actividad con ese nombre\")) {\n          var message = this.translateService.instant('error_activity_repeated');\n          this.infoMessage = [\n            {\n              key: 'edit_activity_error',\n              severity: 'error',\n              summary: this.translateService.instant('error'),\n              detail: message,\n              keyTranslate: 'error_activity_repeated'\n            }\n          ];\n        }\n      }\n    );\n  }\n\n  /**\n   * Método que cambia dinámicamente el src de una etiqueta img en el DOM\n   * @param event\n   * Evento que se produce cuando un archivo es seleccionado.\n   */\n  changeImage(event){\n    if (event.files[0]){\n      var src = URL.createObjectURL(event.files[0]);\n      var preview = document.getElementById(\"image-edit-activity\").setAttribute( 'src', src);\n      this.file = event.files[0];\n      this.valueUnchanged = false;\n    }\n  }\n\n  /**\n   * Método que deshabilita el botón enviar cuando el usuario elimina el archivo imagen del campo de selección de ficheros.\n   * @param event\n   * Evento que se produce cuando un archivo es eliminado utilizando el botón correspondiente.\n   */\n  deleteFiles(event){\n    this.valueUnchanged = true;\n    var url = 'data:' + this.activity.metadataImage.mimeType + ';base64,' + this.activity.metadataImage.data;\n    this.image = this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n}\n\n    \n\n    \n        \n\n\n  {{ 'edit_title_activity' | translate }}\n  \n  \n    \n      \n        \n          \n            {{ 'name_activity' | translate }}*:\n            \n          \n          \n            {{ 'description_activity' | translate }}*:\n            \n          \n          \n            {{ 'interest' | translate }}*:\n            \n            \n          \n          \n            \n              \n            \n            \n            \n          \n        \n      \n      \n        {{ 'message_info_map' | translate }}:*\n        \n      \n    \n    \n      \n    \n  \n\n\n\n\n\n    \n\n    \n                \n                    ./edit-activities.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.edit-activities-panel {\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n\n  h1{\n    text-align:center;\n  }\n\n  ::ng-deep .p-messages{\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n}\n\n.edit_activity_container{\n  display: flex;\n}\n\n.left_container, .right_container{\n  width: 50%;\n}\n\n#image-edit-activity{\n  max-width: 300px;\n  height: auto;\n  text-align: center;\n  width: auto\\9; /* ie8 */\n\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 50%;\n}\n\n.form-edit-activity-container {\n  width: 40vw;\n  min-width: 375px;\n  /*Para centrar*/\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.button_edit_activity_container{\n  text-align: right;\n\n  ::ng-deep .p-button{\n    margin: 5px;\n  }\n}\n\n#mapActivityEdit{\n  width: 45vw;\n  height: 40vw;\n  min-height: 480px;\n  min-width: 390px;\n}\n\n\n.fileUploadEditActivity {\n  ::ng-deep .p-fileupload-row{\n    div:nth-child(2) {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n  }\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'edit_title_activity\\' | translate }}                                            {{ \\'name_activity\\' | translate }}*:                                            {{ \\'description_activity\\' | translate }}*:                                            {{ \\'interest\\' | translate }}*:                                                                                                                                                {{ \\'message_info_map\\' | translate }}:*                                  '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditActivitiesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserAdminComponent.html":{"url":"components/EditUserAdminComponent.html","title":"component - EditUserAdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserAdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-user-admin/edit-user-admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user-admin\n            \n\n            \n                styleUrls\n                ./edit-user-admin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-user-admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editUserForm\n                            \n                            \n                                roleList\n                            \n                            \n                                roles\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                            \n                                valueUnchanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEquivalent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                observeChanges\n                            \n                            \n                                sendForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, userService: UserService, activatedRoute: ActivatedRoute, rolesService: RolService, messageService: MessageService, translateService: TranslateService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-user-admin/edit-user-admin.component.ts:52\n                            \n                        \n\n                \n                    \n                            Constructor de la clase EditUserAdminComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Clase que permite crear objetos de la clase FormGroup y FormControl.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de usuarios\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Proporciona acceso a la información sobre una ruta asociada a un componente que se carga.\n\n                                                        \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de roles\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite la navegación entre vistas\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEquivalent\n                        \n                        \n                    \n                \n            \n            \n                \nisEquivalent(a, b)\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:160\n                \n            \n\n\n            \n                \n                    Método que compara dos objetos JSON. Devuelve true si son iguales y false en caso contrario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Primer objeto a comparar.\n\n                                    \n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Segundo objeto a comparar.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:90\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n\n      El id del usuario.\n      Inicializará el formulario con los datos del usuario.\n      Cargará los dintintos roles y la información del usuario.\n  \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            observeChanges\n                        \n                        \n                    \n                \n            \n            \n                \nobserveChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:146\n                \n            \n\n\n            \n                \n                    Método que se ejecuta cuando algún valor del formulario cambia.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendForm\n                        \n                        \n                    \n                \n            \n            \n                \nsendForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:117\n                \n            \n\n\n            \n                \n                    Método que crea un objeto usuario y se lo envía a la API.\nUna vez enviado, también será el encargado de redirigir al usuario al componente ListUser y de mostrar un mensaje al usuario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editUserForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:32\n                            \n                        \n\n                \n                    \n                        Formulario para editar la información de un usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SelectItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:52\n                            \n                        \n\n                \n                    \n                        Array de objetos SelectItem para almacenar las distintas opciones del componente listbox de roles.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Rol[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:44\n                            \n                        \n\n                \n                    \n                        Array de objetos Rol para almacenar los distintos roles.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:36\n                            \n                        \n\n                \n                    \n                        Almacena el usuario seleccionado para editar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:40\n                            \n                        \n\n                \n                    \n                        Almacena el id del usuario seleccionado para editar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueUnchanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user-admin/edit-user-admin.component.ts:48\n                            \n                        \n\n                \n                    \n                        Indica si el formulario tiene algún cambio o no.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MessageService, SelectItem} from 'primeng/api';\nimport {User} from '../models/user';\nimport {Rol} from '../models/rol';\nimport {UserService} from '../services/user/user.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {RolService} from '../services/rol/rol.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {forkJoin} from 'rxjs';\nimport {validadorAgeGreaterThan} from '../validators/validatorGreaterThan.directive';\nimport {validadorNonwhiteSpace} from '../validators/validatorNonWhiteSpace.directive';\n\n@Component({\n  selector: 'app-edit-user-admin',\n  templateUrl: './edit-user-admin.component.html',\n  styleUrls: ['./edit-user-admin.component.scss']\n})\n/**\n * Clase EditUserAdminComponent\n *\n * Clase que permite editar la información de un usuario.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class EditUserAdminComponent implements OnInit {\n\n  /**\n   * Formulario para editar la información de un usuario.\n   */\n  editUserForm: FormGroup;\n  /**\n   * Almacena el usuario seleccionado para editar.\n   */\n  user: User;\n  /**\n   * Almacena el id del usuario seleccionado para editar.\n   */\n  userId;\n  /**\n   * Array de objetos Rol para almacenar los distintos roles.\n   */\n  roles: Rol[];\n  /**\n   * Indica si el formulario tiene algún cambio o no.\n   */\n  valueUnchanged: boolean = true;\n  /**\n   * Array de objetos SelectItem para almacenar las distintas opciones del componente listbox de roles.\n   */\n  roleList: SelectItem[];\n\n  /**\n   * Constructor de la clase EditUserAdminComponent\n   *\n   * @param fb\n   * Clase que permite crear objetos de la clase FormGroup y FormControl.\n   * @param userService\n   * Servicio de usuarios\n   * @param activatedRoute\n   * Proporciona acceso a la información sobre una ruta asociada a un componente que se carga.\n   * @param rolesService\n   * Servicio de roles\n   * @param messageService\n   * Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n   * @param translateService\n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   * @param router\n   * Servicio que permite la navegación entre vistas\n   */\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private activatedRoute: ActivatedRoute,\n    private rolesService: RolService,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private router: Router\n  ) {}\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   * \n   *      El id del usuario.\n   *      Inicializará el formulario con los datos del usuario.\n   *      Cargará los dintintos roles y la información del usuario.\n   *  \n   */\n  ngOnInit(): void {\n    this.userId = this.activatedRoute.snapshot.paramMap.get('id');\n    this.editUserForm = this.fb.group({\n      userName: ['', [Validators.required, validadorNonwhiteSpace()]],\n      dateBirthday: ['', [Validators.required, validadorAgeGreaterThan()]],\n      roles: ['', Validators.required]\n    });\n\n    forkJoin([this.rolesService.getRoles(), this.userService.getUserForAdmin(this.userId)]).subscribe(results => {\n      this.roles = results[0];\n      this.user = results[1];\n      this.editUserForm.patchValue({\n        userName: this.user.userName,\n        dateBirthday: new Date(this.user.dateBirthday)\n      });\n      this.editUserForm.controls['roles'].setValue(this.user.roles);\n\n      this.roleList = this.roles.map((v) => {return {label: v.rolName, value: v.rolName}})\n\n      this.observeChanges();\n    });\n  }\n\n  /**\n   * Método que crea un objeto usuario y se lo envía a la API.\n   * Una vez enviado, también será el encargado de redirigir al usuario al componente ListUser y de mostrar un mensaje al usuario.\n   */\n  sendForm(){\n    var dateBirthday = new Date(this.editUserForm.get('dateBirthday').value);\n    const offset = dateBirthday.getTimezoneOffset()\n    dateBirthday = new Date(dateBirthday.getTime() - (offset * 60 * 1000))\n\n    var user = {\n      userName: this.editUserForm.get(\"userName\").value,\n      dateBirthday: dateBirthday.toISOString().split('T')[0],\n      roles: this.editUserForm.get(\"roles\").value\n    };\n    this.userService.editUser(this.userId, user).subscribe(\n      data => {\n        var message = this.translateService.instant('user_edit_message',{ 'nameUser': this.editUserForm.get('userName').value });\n        this.messageService.add({key: 'edit-user', severity:'success', summary: this.translateService.instant('user_edit'), detail: message});\n        // Para que se muestre el mensaje\n        setTimeout(() => {\n          this.router.navigate(['/user']);\n        }, 1500);\n      },\n      err => {\n        var message = this.translateService.instant('error_delete_message');\n        this.messageService.add({key: 'edit-user', severity:'error', summary: this.translateService.instant('error'), detail: message});\n      }\n    );\n  }\n\n  /**\n   * Método que se ejecuta cuando algún valor del formulario cambia.\n   */\n  observeChanges() {\n    this.editUserForm.valueChanges.subscribe((values) => {\n      this.isEquivalent(this.user, values);\n    });\n  }\n\n  /**\n   * Método que compara dos objetos JSON. Devuelve true si son iguales y false en caso contrario.\n   *\n   * @param a\n   * Primer objeto a comparar.\n   * @param b\n   * Segundo objeto a comparar.\n   */\n  isEquivalent(a, b) {\n    this.valueUnchanged = true;\n    var aProps = Object.keys(a);\n    var bProps = Object.keys(b);\n    for (var i = 0; i  value === array2Sorted[index]);\n        return a[propName].length === b[propName].length && a[propName].slice().sort().every((value, index) => value === array2Sorted[index]);\n      }\n      else if (propName === \"dateBirthday\"){\n        var d1 = new Date(new Date(a[propName]).toDateString());\n        var d2 = new Date(b[propName]?.toDateString());\n        if (d1.getTime() !== d2.getTime()){\n          this.valueUnchanged = false;\n          return false;\n        }\n      }\n      else{\n        if (a[propName] !== b[propName]) {\n          this.valueUnchanged = false;\n          return false;\n        }\n      }\n    }\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n  {{ 'edit_title' | translate }}\n  \n    \n      \n        {{ 'personal_info' | translate }}\n      \n      \n        {{ 'username' | translate }}*:\n        \n          \n          {{ 'name_required' | translate }}\n        \n      \n      \n        {{ 'date_birth' | translate }}*:\n        \n          \n          {{ 'birthday_required' | translate }}\n          {{ 'age_invalid' | translate }}\n        \n      \n    \n    \n      \n        {{ 'roles' | translate }}\n      \n      \n      \n    \n    \n      \n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./edit-user-admin.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.edit-panel {\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n\n  h1{\n    text-align:center;\n  }\n}\n\n.form-user-container{\n  width: 55%;\n  padding-bottom: 5px;\n  /*Para centrar*/\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 5px;\n}\n\n.group-buttons-edit-user{\n  display: flex;\n  justify-content: flex-end;\n\n  .buttonSave{\n    margin: 5px;\n  }\n}\n\n.fielset_edit_user{\n  border: 0;\n\n  .legend_fieldset{\n    border-bottom: 1px solid;\n    margin-bottom: 16px;\n    border-color: #c4c6c8;\n  }\n\n  legend {\n    font-size: 1.5em;\n  }\n}\n\n.message_error{\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  margin-left: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'edit_title\\' | translate }}                    {{ \\'personal_info\\' | translate }}                    {{ \\'username\\' | translate }}*:                            {{ \\'name_required\\' | translate }}                            {{ \\'date_birth\\' | translate }}*:                            {{ \\'birthday_required\\' | translate }}          {{ \\'age_invalid\\' | translate }}                                    {{ \\'roles\\' | translate }}                                      '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserAdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserComponent.html":{"url":"components/EditUserComponent.html","title":"component - EditUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-user/edit-user.component.ts\n\n\n    \n        Description\n    \n    \n        Clase EditUserComponent\nClase que permite editar la información del usuario autenticado.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user\n            \n\n            \n                styleUrls\n                ./edit-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editUserProfile\n                            \n                            \n                                infoMessage\n                            \n                            \n                                user\n                            \n                            \n                                valueUnchanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEquivalent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                observeChanges\n                            \n                            \n                                updateUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    interest\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, localStorageService: LocalStorageService, fb: FormBuilder, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-user/edit-user.component.ts:42\n                            \n                        \n\n                \n                    \n                            Constructor de la clase EditUserComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de usuarios\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Clase que permite crear objetos de la clase FormGroup y FormControl.\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEquivalent\n                        \n                        \n                    \n                \n            \n            \n                \nisEquivalent(a, b)\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-user/edit-user.component.ts:173\n                \n            \n\n\n            \n                \n                    Método que compara dos objetos JSON. Devuelve true si son iguales y false en caso contrario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Primer objeto a comparar.\n\n                                    \n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Segundo objeto a comparar.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-user/edit-user.component.ts:71\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n\n      Inicializará el formulario con los datos del usuario.\n      Cargará la información del usuario autenticado\n  \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            observeChanges\n                        \n                        \n                    \n                \n            \n            \n                \nobserveChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-user/edit-user.component.ts:159\n                \n            \n\n\n            \n                \n                    Método que se ejecuta cuando algún valor del formulario cambia.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-user/edit-user.component.ts:112\n                \n            \n\n\n            \n                \n                    Método que crea un objeto usuario y se lo envía a la API.\nUna vez enviado, también será el encargado de mostrar un mensaje al usuario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editUserProfile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:30\n                            \n                        \n\n                \n                    \n                        Formulario para editar la información del usuario autenticado.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            infoMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:42\n                            \n                        \n\n                \n                    \n                        Almacena el mensaje que se muestra al usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:34\n                            \n                        \n\n                \n                    \n                        Almacena el usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueUnchanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:38\n                            \n                        \n\n                \n                    \n                        Indica si el formulario tiene algún cambio o no.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        interest\n                    \n                \n\n                \n                    \n                        getinterest()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-user/edit-user.component.ts:104\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../services/user/user.service';\nimport {map, mergeMap} from 'rxjs/operators';\nimport {forkJoin} from 'rxjs';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\nimport {validadorAgeGreaterThan} from '../validators/validatorGreaterThan.directive';\nimport {validadorPriorityNumberOfInterest} from '../validators/validatorPriorityNumber.directive';\nimport {LocalStorageService} from '../services/local-storage/local-storage.service';\nimport {validadorNonwhiteSpace} from '../validators/validatorNonWhiteSpace.directive';\n\n/**\n * Clase EditUserComponent\n *\n * Clase que permite editar la información del usuario autenticado.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n\n  /**\n   * Formulario para editar la información del usuario autenticado.\n   */\n  editUserProfile: FormGroup;\n  /**\n   * Almacena el usuario.\n   */\n  user;\n  /**\n   * Indica si el formulario tiene algún cambio o no.\n   */\n  valueUnchanged: boolean = true;\n  /**\n   * Almacena el mensaje que se muestra al usuario.\n   */\n  infoMessage = [];\n\n  /**\n   * Constructor de la clase EditUserComponent\n   *\n   * @param userService\n   * Servicio de usuarios\n   * @param localStorageService\n   * Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n   * @param fb\n   * Clase que permite crear objetos de la clase FormGroup y FormControl.\n   * @param translateService\n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   */\n  constructor(\n    private userService: UserService,\n    private localStorageService: LocalStorageService,\n    private fb: FormBuilder,\n    private translateService: TranslateService\n  ) { }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   *\n   * \n   *      Inicializará el formulario con los datos del usuario.\n   *      Cargará la información del usuario autenticado\n   *  \n   */\n  ngOnInit(): void {\n    this.editUserProfile = this.fb.group({\n      dateBirthday: ['', [Validators.required, validadorAgeGreaterThan()]],\n      interest: this.fb.array([]),\n      userName: ['', [Validators.required, validadorNonwhiteSpace()]]\n    });\n    this.userService.getUsers().pipe(\n      map (data => data.filter(p => p.email === this.localStorageService.getEmailUser())),\n      mergeMap ( user => {\n        return forkJoin([this.userService.getUser(user[0].id)]).pipe();\n      })\n    ).subscribe(\n      ([response1]) => {\n        this.user = response1;\n        this.editUserProfile.patchValue({\n          userName: this.user.userName,\n          dateBirthday: new Date(this.user.dateBirthday)\n        });\n        this.user.interest.forEach(\n          infoInterest => {\n            var newItem = this.fb.group({\n              interestID: [infoInterest.interestID, Validators.required],\n              nameInterest: [infoInterest.nameInterest, Validators.required],\n              priority: [infoInterest.priority, [Validators.required, validadorPriorityNumberOfInterest()]]\n            });\n            this.interest.push(newItem);\n          }\n        )\n        this.observeChanges();\n      }\n    );\n  }\n\n  get interest(): FormArray {\n    return this.editUserProfile.get('interest') as FormArray;\n  }\n\n  /**\n   * Método que crea un objeto usuario y se lo envía a la API.\n   * Una vez enviado, también será el encargado de mostrar un mensaje al usuario.\n   */\n  updateUserProfile(){\n    var dateBirthday = new Date(this.editUserProfile.get('dateBirthday').value);\n    const offset = dateBirthday.getTimezoneOffset()\n    dateBirthday = new Date(dateBirthday.getTime() - (offset * 60 * 1000))\n    var user = {\n      dateBirthday: dateBirthday.toISOString().split('T')[0],\n      userName: this.editUserProfile.get(\"userName\").value,\n      interest: this.interest.value,\n      roles: this.user.roles\n    };\n    this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n      var aux = this.infoMessage;\n      this.infoMessage = [];\n      for (let message of aux){\n        var mAux = message;\n        mAux.summary = this.translateService.instant(mAux.keySummary);\n        mAux.detail = this.translateService.instant(mAux.keyDetail);\n        this.infoMessage.push(mAux);\n      }\n    });\n    this.userService.editUser(this.user.id, user).pipe(\n      map( data => {\n        this.valueUnchanged = true;\n        var message = this.translateService.instant('user_profile_edit_message');\n        this.infoMessage = [\n          {key: 'edit_profile_user', severity:'success', summary: this.translateService.instant('user_profile_edit'), detail: message, keySummary: 'user_profile_edit' , keyDetail: 'user_profile_edit_message'}\n          ];\n      }),\n      mergeMap( () => {\n        return this.userService.getUser(this.user.id).pipe();\n      })\n    ).subscribe(\n      data => {\n        this.user = data;\n      },\n      (err) => {\n        var message = this.translateService.instant('error_delete_message');\n        this.infoMessage = [\n          { key: 'edit_profile_user', severity:'error', summary: this.translateService.instant('error'), detail: message, keySummary: 'error' , keyDetail: 'error_delete_message'}\n        ];\n      }\n    );\n  }\n\n  /**\n   * Método que se ejecuta cuando algún valor del formulario cambia.\n   */\n  observeChanges() {\n    this.editUserProfile.valueChanges.subscribe((values) => {\n      this.isEquivalent(this.user, values);\n    });\n  }\n\n  /**\n   * Método que compara dos objetos JSON. Devuelve true si son iguales y false en caso contrario.\n   *\n   * @param a\n   * Primer objeto a comparar.\n   * @param b\n   * Segundo objeto a comparar.\n   */\n  isEquivalent(a, b) {\n    this.valueUnchanged = true;\n    var aProps = Object.keys(a);\n    var bProps = Object.keys(b);\n    for (var i = 0; i  (a.interestID  (a.interestID  JSON.stringify(value) === JSON.stringify(array2Sort[index]));\n        if (check === false){\n          this.valueUnchanged = check;\n          return array1Sort.length === array2Sort.length && array1Sort.every((value, index) => JSON.stringify(value) === JSON.stringify(array2Sort[index]));\n        }\n      }\n      else if (propName === \"dateBirthday\"){\n        var d1 = new Date(new Date(a[propName]).toDateString());\n        var d2 = new Date(b[propName]?.toDateString());\n        if (d1.getTime() !== d2.getTime()){\n          this.valueUnchanged = false;\n          return false;\n        }\n      }\n      else{\n        if (a[propName] !== b[propName]) {\n          this.valueUnchanged = false;\n          return false;\n        }\n      }\n    }\n  }\n\n\n}\n\n    \n\n    \n        \n\n  {{ 'edit_title' | translate }}\n  \n  \n    \n      \n        {{ 'personal_info' | translate }}\n      \n      \n        {{'username' | translate}}*:\n        \n          \n          \n        \n      \n      \n        {{ 'date_birth' | translate }}*:\n        \n          \n          \n          \n        \n      \n    \n\n    \n      \n        {{ 'interests' | translate }}\n      \n      \n        \n          {{item.value.nameInterest}}\n            :\n          \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            -->\n\n            \n            \n              0\n            \n\n            \n            \n              1\n            \n\n            \n            \n              2\n            \n\n            \n            \n              3\n            \n\n            \n            \n              4\n            \n\n            \n            \n              5\n            \n\n            \n            \n              6\n            \n\n            \n            \n              7\n            \n\n            \n            \n              8\n            \n\n            \n            \n              9\n            \n\n            \n            \n              10\n            \n\n          \n        \n      \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./edit-user.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.edit-profile-user-panel{\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n\n  h1 {\n    text-align: center;\n  }\n\n  ::ng-deep .p-messages{\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n}\n\n.message_error_age, .message_error_username{\n  margin-left: 5px;\n}\n\n.fieldset{\n  border: 0;\n}\n\n.legend-container{\n  border-bottom: 1px solid;\n  margin-bottom: 16px;\n  border-color: #c4c6c8;\n}\n\nlegend {\n  font-size:1.5em;\n}\n\n.button_edit_user_submit_container{\n  display: flex;\n  justify-content: flex-end;\n\n  .button_edit_user_submit{\n    padding: 5px;\n  }\n}\n\n.form-edit-profile-container{\n  .form-check-label{\n    margin: 10px;\n  }\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'edit_title\\' | translate }}                      {{ \\'personal_info\\' | translate }}                    {{\\'username\\' | translate}}*:                                                        {{ \\'date_birth\\' | translate }}*:                                                                          {{ \\'interests\\' | translate }}                              {{item.value.nameInterest}}            :                                                                                                                                              -->                                      0                                                  1                                                  2                                                  3                                                  4                                                  5                                                  6                                                  7                                                  8                                                  9                                                  10                                                        '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagesService.html":{"url":"injectables/ImagesService.html","title":"injectable - ImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/images/images.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imagesURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/images/images.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImages\n                        \n                        \n                    \n                \n            \n            \n                \ngetImages(namePhoto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/images/images.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namePhoto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imagesURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/images'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/images/images.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Activity} from '../../models/activity';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nconst cabecera = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImagesService {\n\n  imagesURL = 'http://localhost:8090/images';\n\n  constructor(private httpClient: HttpClient) { }\n\n  getImages(namePhoto){\n    return this.httpClient.get(this.imagesURL + '/' + namePhoto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationActivitiesComponent.html":{"url":"components/InformationActivitiesComponent.html","title":"component - InformationActivitiesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InformationActivitiesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/information-activities/information-activities.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-information-activities\n            \n\n            \n                styleUrls\n                ./information-activities.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information-activities.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activity\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                image\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: DynamicDialogRef, config: DynamicDialogConfig, activityService: ActivityService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/information-activities/information-activities.component.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor de la clase InformationActivitiesComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                    DynamicDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite devolver un valor al componente que lo creó.\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    DynamicDialogConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite pasar información a los componentes dinámicos.\n\n                                                        \n                                                \n                                                \n                                                        activityService\n                                                  \n                                                        \n                                                                        ActivityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de actividades.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/information-activities/information-activities.component.ts:52\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n\n      La actividad\n      Saneará la URL de la imagen asociada a la actividad.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Activity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information-activities/information-activities.component.ts:25\n                            \n                        \n\n                \n                    \n                        Almacena la actividad seleccionada.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DynamicDialogConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/information-activities/information-activities.component.ts:43\n                            \n                        \n\n                \n                    \n                        Servicio propocionado por la librería PrimeNG que permite pasar información a los componentes dinámicos.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/information-activities/information-activities.component.ts:29\n                            \n                        \n\n                \n                    \n                        Almacena la url de la imagen saneada.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {DynamicDialogConfig, DynamicDialogRef} from 'primeng/dynamicdialog';\nimport {Activity} from '../models/activity';\nimport {ActivityService} from '../services/activity/activity.service';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-information-activities',\n  templateUrl: './information-activities.component.html',\n  styleUrls: ['./information-activities.component.scss']\n})\n/**\n * Clase InformationActivitiesComponent\n *\n * Clase que muestra información adicional de una actividad.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class InformationActivitiesComponent implements OnInit {\n\n  /**\n   * Almacena la actividad seleccionada.\n   */\n  activity: Activity;\n  /**\n   * Almacena la url de la imagen saneada.\n   */\n  image;\n\n  /**\n   * Constructor de la clase InformationActivitiesComponent\n   *\n   * @param ref\n   * Servicio propocionado por la librería PrimeNG que permite devolver un valor al componente que lo creó.\n   * @param config\n   * Servicio propocionado por la librería PrimeNG que permite pasar información a los componentes dinámicos.\n   * @param activityService\n   * Servicio de actividades.\n   * @param sanitizer\n     Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n   */\n  constructor(private ref: DynamicDialogRef, public config: DynamicDialogConfig, private activityService: ActivityService,  private sanitizer: DomSanitizer) { }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   * \n   *      La actividad\n   *      Saneará la URL de la imagen asociada a la actividad.\n   * \n   */\n  ngOnInit(): void {\n    if (this.config.data){\n      this.activity = this.config.data.activity;\n      var url = 'data:' + this.activity.metadataImage.mimeType + ';base64,' + this.activity.metadataImage.data;\n      this.image = this.sanitizer.bypassSecurityTrustUrl(url);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    {{ 'name_activity' | translate }}\n    {{activity.name}}\n  \n  \n    {{ 'description_activity' | translate }}\n    {{activity.description}}\n  \n  \n    {{ 'address' | translate }}\n    {{activity.address}}\n  \n  \n    {{ 'interest' | translate }}\n    {{activity.interest}}\n  \n  \n    {{ 'city' | translate }}\n    {{activity.city}}\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./information-activities.component.scss\n                \n                .contaiter-info-activities{\n  display: flex;\n  flex-direction: column;\n}\n\n.container-name, .container-description-activity, .container-coordenates, .container-interest, .container-city{\n  display: flex;\n  margin-top: 7px;\n}\n\n.label-container, .content-container{\n  width: 50%;\n}\n\n#image-activity{\n  width: 100%;\n  max-width: 300px;\n  height: auto;\n  text-align: center;\n  width: auto\\9; /* ie8 */\n\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 50%;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'name_activity\\' | translate }}    {{activity.name}}        {{ \\'description_activity\\' | translate }}    {{activity.description}}        {{ \\'address\\' | translate }}    {{activity.address}}        {{ \\'interest\\' | translate }}    {{activity.interest}}        {{ \\'city\\' | translate }}    {{activity.city}}  '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationActivitiesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/InterceptorService.html":{"url":"interceptors/InterceptorService.html","title":"interceptor - InterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  InterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleAuthError\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorageService: LocalStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/interceptor.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleAuthError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleAuthError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interceptors/interceptor.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interceptors/interceptor.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {LocalStorageService} from '../services/local-storage/local-storage.service';\nimport {catchError} from 'rxjs/operators';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class InterceptorService implements HttpInterceptor{\n\n  constructor(\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    let autReq = req;\n\n    const token = this.localStorageService.getToken();\n    if (token != null) {\n      autReq = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + token) });\n      return next.handle(autReq).pipe(\n        catchError(\n          (err) => {\n            if (err.status === 401){\n              this.handleAuthError();\n              return of(err);\n            }\n            throw err;\n          }\n        )\n      )as any;\n    }\n    else{\n      return next.handle(autReq);\n    }\n  }\n\n  private handleAuthError() {\n    this.localStorageService.logOut();\n    this.router.navigateByUrl('login');\n  }\n}\nexport const interceptorProvider = [{provide: HTTP_INTERCEPTORS, useClass: InterceptorService, multi: true}];\n\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Interest.html":{"url":"classes/Interest.html","title":"class - Interest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Interest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interest.ts\n        \n\n            \n                Description\n            \n            \n                Clase Interest\nClase que define el tipo de entidad Interés.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                nameInterest\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/interest.ts:10\n                            \n                        \n\n                \n                    \n                        Identificador del tipo de interés\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/interest.ts:14\n                            \n                        \n\n                \n                    \n                        Nombre del tipo de interés\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Interest {\n  /**\n   * Identificador del tipo de interés\n   */\n  id: number;\n  /**\n   * Nombre del tipo de interés\n   */\n  nameInterest: string;\n}\n\n/**\n * Clase InterestByUser\n * \n * Clase que define el tipo de entidad Interés puntuado por el usuario.\n */\nexport class InterestByUser {\n  /**\n   * Identificador del tipo de interés\n   */\n  interestID: number;\n  /**\n   * Nombre del tipo de interés\n   */\n  nameInterest: string;\n  /**\n   * Puntuación dada por el usuario al tipo de interés\n   */\n  priority: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Interest-1.html":{"url":"classes/Interest-1.html","title":"class - Interest-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Interest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n            \n                Description\n            \n            \n                Clase Interest\nClase que define el tipo de entidad Interés que puntúa el usuario.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nameInterest\n                            \n                            \n                                priority\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:90\n                            \n                        \n\n                \n                    \n                        Nombre del tipo de interés\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:94\n                            \n                        \n\n                \n                    \n                        Puntuación dada por el usuario al tipo de interés\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  /**\n   * Identificador del usuario\n   */\n  id: number;\n  /**\n   * Nombre de usuario\n   */\n  userName: string;\n  /**\n   * Correo electrónico del usuario\n   */\n  email: string;\n  /**\n   * Fecha de nacimiento del usuario\n   */\n  dateBirthday: Date;\n  /**\n   * Roles del usuario\n   */\n  roles: string[];\n}\n\n/**\n * Clase UserLogin\n * \n * Clase que define el tipo de entidad Usuario que intenta autenticarse en el sistema.\n */\nexport class UserLogin {\n  /**\n   * Correo electrónico del usuario\n   */\n  email: string;\n  /**\n   * Contraseña\n   */\n  password: string;\n}\n\n/**\n * Clase UserSignUp\n * \n * Clase que define el tipo de entidad Usuario que intenta registrarse en el sistema.\n */\nexport class UserSignUp {\n  /**\n   *  Nombre de usuario\n   */\n  userName: string;\n  /**\n   * Correo electrónico del usuario\n   */\n  email: string;\n  /**\n   * Fecha de nacimiento del usuario\n   */\n  dateBirthday: string;\n  /**\n   * Contraseña\n   */\n  password: string;\n  /**\n   * Contraseña repetida\n   */\n  passwordConfirm: string;\n  /**\n   * Roles del usuario\n   */\n  roles: string[];\n  /**\n   * Lista de puntuaciones dadas por el usuario a los tipos de intereses\n   */\n  interest: Interest[];\n}\n\n/**\n * Clase Interest\n * \n * Clase que define el tipo de entidad Interés que puntúa el usuario.\n */\nexport class Interest {\n  /**\n   * Nombre del tipo de interés\n   */\n  nameInterest: string;\n  /**\n   * Puntuación dada por el usuario al tipo de interés\n   */\n  priority: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InterestByUser.html":{"url":"classes/InterestByUser.html","title":"class - InterestByUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InterestByUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/interest.ts\n        \n\n            \n                Description\n            \n            \n                Clase InterestByUser\nClase que define el tipo de entidad Interés puntuado por el usuario.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                interestID\n                            \n                            \n                                nameInterest\n                            \n                            \n                                priority\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interestID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/interest.ts:26\n                            \n                        \n\n                \n                    \n                        Identificador del tipo de interés\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/interest.ts:30\n                            \n                        \n\n                \n                    \n                        Nombre del tipo de interés\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/interest.ts:34\n                            \n                        \n\n                \n                    \n                        Puntuación dada por el usuario al tipo de interés\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Interest {\n  /**\n   * Identificador del tipo de interés\n   */\n  id: number;\n  /**\n   * Nombre del tipo de interés\n   */\n  nameInterest: string;\n}\n\n/**\n * Clase InterestByUser\n * \n * Clase que define el tipo de entidad Interés puntuado por el usuario.\n */\nexport class InterestByUser {\n  /**\n   * Identificador del tipo de interés\n   */\n  interestID: number;\n  /**\n   * Nombre del tipo de interés\n   */\n  nameInterest: string;\n  /**\n   * Puntuación dada por el usuario al tipo de interés\n   */\n  priority: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InterestService.html":{"url":"injectables/InterestService.html","title":"injectable - InterestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InterestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/interest/interest.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                interestURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addInterests\n                            \n                            \n                                    Public\n                                deleteInterest\n                            \n                            \n                                    Public\n                                editInterest\n                            \n                            \n                                    Public\n                                getInterestByUser\n                            \n                            \n                                    Public\n                                getInterests\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/interest/interest.service.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor de la clase InterestService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                objeto que permite hacer peticiones a la API y obtener resultados de la misma\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addInterests\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addInterests(interest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest.service.ts:45\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para añadir un nuevo tipo de interés.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto interés que incluye la información del nuevo tipo de interés.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteInterest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteInterest(interest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest.service.ts:54\n                \n            \n\n\n            \n                \n                    Método que realiza una petición DELETE para eliminar un tipo de interés.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto interés que se quiere eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editInterest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editInterest(id, interest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest.service.ts:73\n                \n            \n\n\n            \n                \n                    Método que realiza una petición PUT para modificar la información de un tipo de interés.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del tipo de interés\n\n                                    \n                                \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto actividad con la información actualizada.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInterestByUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInterestByUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest.service.ts:63\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener las puntuaciones dadas por el usuario a un tipo de interés.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInterests\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInterests()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest.service.ts:36\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de los tipos de intereses.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interestURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/interest'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/interest/interest.service.ts:24\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Interest, InterestByUser} from '../../models/interest';\nimport {Observable} from 'rxjs';\n\n/**\n * Encabezado para las peticiones y respuestas HTTP\n */\nconst cabecera = {headers: new HttpHeaders({'Content-Type': 'application/json'})}; //Headers serán contenido JSON\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clase InterestService\n * \n * Clase que se encarga de realizar peticiones a la API relacionadas con los tipos de intereses.\n */\nexport class InterestService {\n\n  /**\n   * Almacena la url del endpoint\n   */\n  interestURL = 'http://localhost:8090/api/interest';\n\n  /**\n   * Constructor de la clase InterestService\n   * @param httpClient objeto que permite hacer peticiones a la API y obtener resultados de la misma\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Método que realiza una petición GET para obtener la lista de los tipos de intereses.\n   * @returns el observable con la información enviada por la API\n   */\n  public getInterests(): Observable {\n    return this.httpClient.get(this.interestURL + '/list', cabecera);\n  }\n\n  /**\n   * Método que realiza una petición POST para añadir un nuevo tipo de interés.\n   * @param interest objeto interés que incluye la información del nuevo tipo de interés.\n   * @returns el observable con la información enviada por la API\n   */\n  public addInterests(interest): Observable {\n    return this.httpClient.post(this.interestURL + '/add', interest, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición DELETE para eliminar un tipo de interés.\n   * @param interest objeto interés que se quiere eliminar\n   * @returns el observable con la información enviada por la API\n   */\n  public deleteInterest(interest): Observable {\n    return this.httpClient.delete(this.interestURL + '/delete/' + interest.id, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición GET para obtener las puntuaciones dadas por el usuario a un tipo de interés.\n   * @param id identificador del usuario\n   * @returns el observable con la información enviada por la API\n   */\n  public getInterestByUser(id): Observable {\n    return this.httpClient.get(this.interestURL + '/list/user/' + id, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición PUT para modificar la información de un tipo de interés.\n   * @param id identificador del tipo de interés\n   * @param interest objeto actividad con la información actualizada.\n   * @returns el observable con la información enviada por la API\n   */\n  public editInterest(id, interest): Observable {\n    return this.httpClient.put(this.interestURL + '/update/' + id, interest, cabecera);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsLogginInGuardService.html":{"url":"guards/IsLogginInGuardService.html","title":"guard - IsLogginInGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsLogginInGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/isLogginInGuard/is-loggin-in-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/isLogginInGuard/is-loggin-in-guard.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve()\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/isLogginInGuard/is-loggin-in-guard.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {Resolve, Router} from '@angular/router';\nimport {LocalStorageService} from '../../services/local-storage/local-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsLogginInGuardService implements Resolve{\n\n  constructor(private router: Router, private localStorageService: LocalStorageService) { }\n\n  resolve() {\n    if (this.localStorageService.getToken()) {\n      const roles = this.localStorageService.getRolesUser();\n      if (roles.includes(\"ROLE_ADMIN\")){\n        this.router.navigate(['/user']);\n      }\n      else{\n        this.router.navigate(['/recommendationMap']);\n      }\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtModel.html":{"url":"classes/JwtModel.html","title":"class - JwtModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/jwt_model.ts\n        \n\n            \n                Description\n            \n            \n                Clase JwtModel\nClase que define el tipo de entidad Token.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/jwt_model.ts:10\n                            \n                        \n\n                \n                    \n                        Token\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class JwtModel {\n  /**\n   * Token\n   */\n  token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListActivitiesEvaluateComponent.html":{"url":"components/ListActivitiesEvaluateComponent.html","title":"component - ListActivitiesEvaluateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListActivitiesEvaluateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/list-activities-evaluate/list-activities-evaluate.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-activities-evaluate\n            \n\n            \n                styleUrls\n                ./list-activities-evaluate.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-activities-evaluate.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listActivities\n                            \n                            \n                                sortField\n                            \n                            \n                                sortOptions\n                            \n                            \n                                sortOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSortChange\n                            \n                            \n                                photoURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, activityService: ActivityService, localStorageService: LocalStorageService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/list-activities-evaluate/list-activities-evaluate.component.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor de la clase ListActivitiesEvaluateComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de usuarios.\n\n                                                        \n                                                \n                                                \n                                                        activityService\n                                                  \n                                                        \n                                                                        ActivityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de actividades.\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-activities-evaluate/list-activities-evaluate.component.ts:69\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n\n      Inicializará las opciones del dropdown para ordenar las actividades por valoración.\n      Cargará la lista de actividades valoradas por el usuario autenticado.\n  \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSortChange\n                        \n                        \n                    \n                \n            \n            \n                \nonSortChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-activities-evaluate/list-activities-evaluate.component.ts:102\n                \n            \n\n\n            \n                \n                    Método que ordena las actividades por valoración.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Evento que se produce cuando una opción es seleccionada en el componente.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            photoURL\n                        \n                        \n                    \n                \n            \n            \n                \nphotoURL(activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-activities-evaluate/list-activities-evaluate.component.ts:91\n                \n            \n\n\n            \n                \n                    Método que sanea la URL de la imagen asociada a la actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Actividad cuya url de la imagen asociada se quiere sanear.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listActivities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActivityRecommended[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-activities-evaluate/list-activities-evaluate.component.ts:29\n                            \n                        \n\n                \n                    \n                        Almacena las actividades valoradas por el usuario autenticado.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-activities-evaluate/list-activities-evaluate.component.ts:41\n                            \n                        \n\n                \n                    \n                        Almacena el campo por el que se tiene que ordenar la información.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SelectItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-activities-evaluate/list-activities-evaluate.component.ts:33\n                            \n                        \n\n                \n                    \n                        Almacena las opciones para ordenar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-activities-evaluate/list-activities-evaluate.component.ts:37\n                            \n                        \n\n                \n                    \n                        Indica el orden seleccionado por el usuario. Tendrá dos posibles valores: -1 y 1.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SelectItem } from 'primeng/api';\nimport {ActivityRecommended} from '../models/activity';\nimport {UserService} from '../services/user/user.service';\nimport {ActivityService} from '../services/activity/activity.service';\nimport {LocalStorageService} from '../services/local-storage/local-storage.service';\nimport {map, mergeMap} from 'rxjs/operators';\nimport {forkJoin} from 'rxjs';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-list-activities-evaluate',\n  templateUrl: './list-activities-evaluate.component.html',\n  styleUrls: ['./list-activities-evaluate.component.scss']\n})\n/**\n * Clase ListActivitiesEvaluateComponent\n *\n * Clase que permite visualizar la lista de actividades valoradas por el usuario autenticado.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class ListActivitiesEvaluateComponent implements OnInit {\n\n  /**\n   * Almacena las actividades valoradas por el usuario autenticado.\n   */\n  listActivities: ActivityRecommended[];\n  /**\n   * Almacena las opciones para ordenar.\n   */\n  sortOptions: SelectItem[];\n  /**\n   * Indica el orden seleccionado por el usuario. Tendrá dos posibles valores: -1 y 1.\n   */\n  sortOrder: number;\n  /**\n   * Almacena el campo por el que se tiene que ordenar la información.\n   */\n  sortField: string;\n\n  /**\n   * Constructor de la clase ListActivitiesEvaluateComponent\n   *\n   * @param userService\n   * Servicio de usuarios.\n   * @param activityService\n   * Servicio de actividades.\n   * @param localStorageService\n   * Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n   * @param sanitizer\n   * Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n   */\n  constructor(\n    private userService: UserService,\n    private activityService: ActivityService,\n    private localStorageService: LocalStorageService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   * \n   *      Inicializará las opciones del dropdown para ordenar las actividades por valoración.\n   *      Cargará la lista de actividades valoradas por el usuario autenticado.\n   *  \n   */\n  ngOnInit(): void {\n    this.sortOptions = [\n      {label: 'rating_down', value: '!score'},\n      {label: 'rating_up', value: 'score'}\n    ];\n    this.userService.getUsers().pipe(\n      map (data => data.filter(p => p.email === this.localStorageService.getEmailUser())),\n      mergeMap ( user => {\n        return forkJoin([this.activityService.getRatedActivities(user[0].id)]).pipe();\n      })\n    ).subscribe(\n      ([response1]) => {\n        this.listActivities = response1;\n      }\n    );\n  }\n\n  /**\n   * Método que sanea la URL de la imagen asociada a la actividad.\n   * @param activity\n   * Actividad cuya url de la imagen asociada se quiere sanear.\n   */\n  photoURL(activity){\n    var url = 'data:' + activity.metadataImage.mimeType + ';base64,' + activity.metadataImage.data;\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n  /**\n   * Método que ordena las actividades por valoración.\n   *\n   * @param event\n   * Evento que se produce cuando una opción es seleccionada en el componente.\n   */\n  onSortChange(event) {\n    let value = event.value;\n\n    if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    }\n    else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    {{ 'activities_valued' | translate }}\n    \n      \n        \n          \n            \n              {{item.label | translate}}\n            \n            \n              {{selectedItem.label | translate}}\n            \n          \n          \n            \n            \n          \n        \n      \n      \n            \n                \n                    \n                      \n                    \n                    \n                        \n                            {{activity.name}}\n                        \n                        \n                          {{activity.description}}\n                        \n\n                        \n                          {{activity.interest}}\n                        \n                    \n\n                    \n                        \n                    \n                \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./list-activities-evaluate.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.activities-evaluates-panel{\n    @include custom-panel;\n    width: 100%;\n    min-height: 300px;\n    min-width: 800px;\n\n    h1{\n        text-align:center;\n    }\n}\n\n::ng-deep .p-dataview {\n    margin: 15px;\n}\n\n\n.activities-list-item{\n    display: flex;\n    align-items: center;\n    padding: 1rem;\n    width: 100%;\n\n    .activities-list-detail{\n        flex: 1 1 0;\n\n      .activity-badge.status-iglesias{\n        background: #feedaf;\n        color: #8a5340;\n      }\n\n      .activity-badge.status-museos{\n        background-color: #eccfff;\n        color: #694382;\n      }\n\n      .activity-badge.status-playas{\n        background-color: #b3e5fc;\n        color: #23547b;\n      }\n\n      .activity-badge.status-esculturas{\n        background: #ffcdd2;\n        color: #c63737;\n      }\n\n      .activity-badge.status-teatros{\n        background: #c8e6c9;\n        color: #256029;\n      }\n\n      .activity-badge.status-parques{\n        background-color: #ffd8b2;\n        color: #805b36;\n      }\n\n      .activity-badge{\n        border-radius: 2px;\n        padding: .25em .5rem;\n        text-transform: uppercase;\n        font-weight: 700;\n        font-size: 12px;\n        letter-spacing: .3px;\n      }\n    }\n\n    img {\n        width: 150px;\n        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n        margin-right: 2rem;\n    }\n\n    .activity-name{\n        font-size: 1.5rem;\n        font-weight: 700;\n    }\n\n}\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'activities_valued\\' | translate }}                                                      {{item.label | translate}}                                      {{selectedItem.label | translate}}                                                                                                                                                                                                                                                        {{activity.name}}                                                                          {{activity.description}}                                                                          {{activity.interest}}                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListActivitiesEvaluateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListCitiesComponent.html":{"url":"components/ListCitiesComponent.html","title":"component - ListCitiesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListCitiesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/list-cities/list-cities.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-cities\n            \n\n            \n                styleUrls\n                ./list-cities.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-cities.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cities\n                            \n                            \n                                display\n                            \n                            \n                                displayEditPanel\n                            \n                            \n                                errorAddCity\n                            \n                            \n                                errorEditCity\n                            \n                            \n                                formAddCity\n                            \n                            \n                                formEditCity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                cancelEdit\n                            \n                            \n                                editCity\n                            \n                            \n                                hideDialogCity\n                            \n                            \n                                hideDialogEditCity\n                            \n                            \n                                loadCities\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onEditSubmit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openPanel\n                            \n                            \n                                removeCity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cityService: CityService, formBuilder: FormBuilder, confirmationService: ConfirmationService, translateService: TranslateService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/list-cities/list-cities.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cityService\n                                                  \n                                                        \n                                                                        CityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancelEdit\n                        \n                        \n                    \n                \n            \n            \n                \ncancelEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editCity\n                        \n                        \n                    \n                \n            \n            \n                \neditCity(city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideDialogCity\n                        \n                        \n                    \n                \n            \n            \n                \nhideDialogCity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideDialogEditCity\n                        \n                        \n                    \n                \n            \n            \n                \nhideDialogEditCity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCities\n                        \n                        \n                    \n                \n            \n            \n                \nloadCities()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEditSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonEditSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openPanel\n                        \n                        \n                    \n                \n            \n            \n                \nopenPanel($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeCity\n                        \n                        \n                    \n                \n            \n            \n                \nremoveCity(city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-cities/list-cities.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         City[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-cities/list-cities.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            display\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-cities/list-cities.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayEditPanel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-cities/list-cities.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorAddCity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-cities/list-cities.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorEditCity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-cities/list-cities.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formAddCity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-cities/list-cities.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formEditCity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-cities/list-cities.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {CityService} from '../services/city/city.service';\nimport {City} from '../models/city';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ConfirmationService, MessageService} from 'primeng/api';\nimport {catchError, map, mergeMap} from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\nimport {validadorNonwhiteSpace} from '../validators/validatorNonWhiteSpace.directive';\n\n@Component({\n  selector: 'app-list-cities',\n  templateUrl: './list-cities.component.html',\n  styleUrls: ['./list-cities.component.scss']\n})\nexport class ListCitiesComponent implements OnInit {\n\n  cities: City[];\n  display: boolean = false;\n  formAddCity: FormGroup;\n  errorAddCity: boolean = false;\n  errorEditCity: boolean = false;\n  displayEditPanel: boolean = false;\n  formEditCity: FormGroup;\n\n  constructor(\n    private cityService: CityService,\n    private formBuilder: FormBuilder,\n    private confirmationService: ConfirmationService,\n    private translateService: TranslateService,\n    private messageService: MessageService\n  ) { }\n\n  ngOnInit(): void {\n    this.formAddCity = this.formBuilder.group({\n      name: ['', [Validators.required, validadorNonwhiteSpace()]]\n    });\n    this.formEditCity = this.formBuilder.group({\n      id: ['', Validators.required],\n      name: ['', [Validators.required, validadorNonwhiteSpace()]]\n    });\n    this.loadCities();\n  }\n\n  openPanel($event){\n    this.display = true;\n  }\n\n  loadCities(){\n    this.cityService.getCities().subscribe(\n      (data) => {\n        this.cities = data;\n      }\n    );\n  }\n\n  onSubmit(){\n    var city = {\n      name: this.formAddCity.get('name').value\n    };\n    this.cityService.addCity(city).pipe(\n      mergeMap( message => {\n        return this.cityService.getCities().pipe(\n          map(data => {\n            this.cities = data;\n          })\n        );\n      })\n    ).subscribe( data => {\n        var message = this.translateService.instant('city_add_message',{ 'nameCity': this.formAddCity.get('name').value });\n        this.display = false;\n        this.formAddCity.reset();\n        this.messageService.add({key: 'city', severity:'success', summary: this.translateService.instant('city_add'), detail: message });\n      },\n      err => {\n        this.errorAddCity = true;\n      }\n    );\n  }\n\n  removeCity(city){\n    this.confirmationService.confirm({\n      message: this.translateService.instant('message_delete_city'),\n      accept: () => {\n        this.cityService.deleteCity(city).pipe(\n          mergeMap( message => {\n            return this.cityService.getCities().pipe(\n              map(data => {\n                this.cities = data;\n              })\n            );\n          })\n        ).subscribe( data => {\n            var message = this.translateService.instant('city_delete_message',{ 'nameCity': city.name });\n            this.messageService.add({key: 'city', severity:'success', summary: this.translateService.instant('city_delete'), detail: message });\n          },\n          (err) => {\n            if (err.status === 500){\n              var message = this.translateService.instant('city_has_activities');\n              this.messageService.add({key: 'city', severity:'error', summary: this.translateService.instant('error'), detail: message });\n            }\n            else{\n              var message = this.translateService.instant('error_delete_message');\n              this.messageService.add({key: 'city', severity:'error', summary: this.translateService.instant('error'), detail: message });\n            }\n          }\n        );\n      }\n    });\n  }\n\n  hideDialogCity(){\n    this.formAddCity.reset();\n    this.errorAddCity = false;\n  }\n\n  hideDialogEditCity(){\n    this.errorEditCity = false;\n  }\n\n  cancel(){\n    this.display = false;\n  }\n\n  editCity(city){\n    this.displayEditPanel = true;\n    this.formEditCity.patchValue({\n        id: city.id,\n        name : city.name\n      }\n    );\n  }\n\n  onEditSubmit(){\n    var city = {\n      name : this.formEditCity.get('name').value\n    };\n\n    this.cityService.editCity(this.formEditCity.get('id').value, city).pipe(\n      mergeMap(message => {\n        return this.cityService.getCities().pipe();\n      })\n    ).subscribe( data => {\n      this.displayEditPanel = false;\n      var message = this.translateService.instant('city_edit_message',{ 'nameCity': city.name });\n      this.messageService.add({key: 'city', severity:'success', summary: this.translateService.instant('city_edit'), detail: message });\n      this.cities = data;\n    },\n      err => {\n        this.errorEditCity = true;\n      });\n  }\n\n  cancelEdit(){\n    this.displayEditPanel = false;\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        {{ 'cities' | translate }}\n        \n      \n      \n        \n          \n            {{city.name}}\n          \n          \n            \n            \n          \n        \n      \n    \n  \n\n\n  \n    \n      {{ 'add_city' | translate }}\n    \n    \n      \n        {{ 'name_city' | translate }}*:\n        \n          \n          {{ 'name_city_required' | translate }}\n          {{ 'name_city_repetead' | translate }}\n        \n      \n    \n    \n      \n      \n    \n  \n\n  \n\n  \n    \n      \n        {{ 'name_city' | translate }}*:\n        \n          \n          {{ 'name_city_required' | translate }}\n          {{ 'name_city_repetead' | translate }}\n        \n      \n    \n    \n      \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./list-cities.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.list-container-cities, .list-header {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.cities-panel {\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n}\n\n.buttons-add-city{\n  display: flex;\n  flex-direction: column;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'cities\\' | translate }}                                                  {{city.name}}                                                                                      {{ \\'add_city\\' | translate }}                      {{ \\'name_city\\' | translate }}*:                            {{ \\'name_city_required\\' | translate }}          {{ \\'name_city_repetead\\' | translate }}                                                              {{ \\'name_city\\' | translate }}*:                            {{ \\'name_city_required\\' | translate }}          {{ \\'name_city_repetead\\' | translate }}                                        '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListCitiesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListInterestComponent.html":{"url":"components/ListInterestComponent.html","title":"component - ListInterestComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListInterestComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/list-interest/list-interest.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-interest\n            \n\n            \n                styleUrls\n                ./list-interest.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-interest.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                            \n                                displayEditDialog\n                            \n                            \n                                errorAddInterest\n                            \n                            \n                                errorEditInterest\n                            \n                            \n                                formAddInterest\n                            \n                            \n                                formEditInterest\n                            \n                            \n                                interest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                cancelEdit\n                            \n                            \n                                deleteInterest\n                            \n                            \n                                editInterest\n                            \n                            \n                                hideDialogEditInterest\n                            \n                            \n                                hideDialogInterest\n                            \n                            \n                                loadInterest\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onEditSubmit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(interestService: InterestService, formBuilder: FormBuilder, confirmationService: ConfirmationService, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/list-interest/list-interest.component.ts:48\n                            \n                        \n\n                \n                    \n                            Constructor de la clase ListInterestComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        interestService\n                                                  \n                                                        \n                                                                        InterestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de intereses.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Clase que permite crear objetos de la clase FormGroup y FormControl.\n\n                                                        \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite mostrar un diálogo de confirmación.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancelEdit\n                        \n                        \n                    \n                \n            \n            \n                \ncancelEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteInterest\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteInterest(interest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:144\n                \n            \n\n\n            \n                \n                    Método que elimina un interés del sistema a través de la API.\nUna vez enviado, también será el encargado de mostrar un mensaje al usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Interés que se desea eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editInterest\n                        \n                        \n                    \n                \n            \n            \n                \neditInterest(interest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideDialogEditInterest\n                        \n                        \n                    \n                \n            \n            \n                \nhideDialogEditInterest()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideDialogInterest\n                        \n                        \n                    \n                \n            \n            \n                \nhideDialogInterest()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadInterest\n                        \n                        \n                    \n                \n            \n            \n                \nloadInterest()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:93\n                \n            \n\n\n            \n                \n                    Método que obtiene los intereses de la API y los almacena.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:79\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n\n      Inicializará el formulario para añadir un interés y para editar un interés.\n      Cargará los dintintos intereses.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEditSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonEditSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openPanel\n                        \n                        \n                    \n                \n            \n            \n                \nopenPanel($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-interest/list-interest.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            display\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-interest/list-interest.component.ts:28\n                            \n                        \n\n                \n                    \n                        Indica si el usuario quiere añadir un nuevo interés.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayEditDialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-interest/list-interest.component.ts:40\n                            \n                        \n\n                \n                    \n                        Indica si el usuario ha seleccionado algún interés para editar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorAddInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-interest/list-interest.component.ts:36\n                            \n                        \n\n                \n                    \n                        Indica si se ha producido algún error al añadir un nuevo interés.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorEditInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-interest/list-interest.component.ts:48\n                            \n                        \n\n                \n                    \n                        Indica si se ha producido algún error al modificar un interés.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formAddInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-interest/list-interest.component.ts:32\n                            \n                        \n\n                \n                    \n                        Formulario para añadir un interés.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formEditInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-interest/list-interest.component.ts:44\n                            \n                        \n\n                \n                    \n                        Formulario para editar la información de un interés.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interest\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/list-interest/list-interest.component.ts:24\n                            \n                        \n\n                \n                    \n                        Almacena los intereses\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {InterestService} from '../services/interest/interest.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ConfirmationService, MessageService} from 'primeng/api';\nimport {map, mergeMap} from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\nimport {validadorNonwhiteSpace} from '../validators/validatorNonWhiteSpace.directive';\n\n@Component({\n  selector: 'app-list-interest',\n  templateUrl: './list-interest.component.html',\n  styleUrls: ['./list-interest.component.scss']\n})\n/**\n * Clase ListInterestComponent\n * \n * Clase que muestra la lista de intereses.\n */\nexport class ListInterestComponent implements OnInit {\n\n  /**\n   * Almacena los intereses\n   */\n  interest;\n  /**\n   * Indica si el usuario quiere añadir un nuevo interés.\n   */\n  display: boolean = false;\n  /**\n   * Formulario para añadir un interés.\n   */\n  formAddInterest: FormGroup;\n  /**\n   * Indica si se ha producido algún error al añadir un nuevo interés.\n   */\n  errorAddInterest: boolean = false;\n  /**\n   * Indica si el usuario ha seleccionado algún interés para editar.\n   */\n  displayEditDialog: boolean = false;\n  /**\n   * Formulario para editar la información de un interés.\n   */\n  formEditInterest: FormGroup;\n  /**\n   * Indica si se ha producido algún error al modificar un interés.\n   */\n  errorEditInterest: boolean = false;\n\n  /**\n   * Constructor de la clase ListInterestComponent\n   *\n   * @param interestService \n   * Servicio de intereses.\n   * @param formBuilder \n   * Clase que permite crear objetos de la clase FormGroup y FormControl.\n   * @param confirmationService \n   * Servicio propocionado por la librería PrimeNG que permite mostrar un diálogo de confirmación.\n   * @param messageService \n   * Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n   * @param translateService \n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   */\n  constructor(\n    private interestService: InterestService,\n    private formBuilder: FormBuilder,\n    private confirmationService: ConfirmationService,\n    private messageService: MessageService,\n    private translateService: TranslateService\n  ) { }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   * \n   *      Inicializará el formulario para añadir un interés y para editar un interés.\n   *      Cargará los dintintos intereses.\n   * \n   */\n  ngOnInit(): void {\n    this.formAddInterest = this.formBuilder.group({\n      name: ['', [Validators.required, validadorNonwhiteSpace()]]\n    });\n    this.formEditInterest = this.formBuilder.group({\n      id: ['', Validators.required],\n      name: ['', [Validators.required, validadorNonwhiteSpace()]]\n    });\n    this.loadInterest();\n  }\n\n  /**\n   * Método que obtiene los intereses de la API y los almacena.\n   */\n  loadInterest(){\n    this.interestService.getInterests().subscribe(\n      data => {\n        this.interest = data;\n      }\n    );\n  }\n\n  openPanel($event){\n    this.display = true;\n  }\n\n  onSubmit(){\n    var interest = {\n      nameInterest: this.formAddInterest.get('name').value\n    };\n    this.interestService.addInterests(interest).pipe(\n      mergeMap( message => {\n        return this.interestService.getInterests().pipe(\n          map(data => {\n            this.interest = data;\n          })\n        );\n      })\n    ).subscribe( data => {\n        var message = this.translateService.instant('interest_add_message',{ 'nameInterest': this.formAddInterest.get('name').value });\n        this.display = false;\n        this.formAddInterest.reset();\n        this.messageService.add({key: 'interest', severity:'success', summary: this.translateService.instant('interest_add'), detail: message });\n      },\n      err => {\n        this.errorAddInterest = true;\n      }\n    );\n  }\n\n  hideDialogInterest(){\n    this.formAddInterest.reset();\n    this.errorAddInterest = false;\n  }\n\n  cancel(){\n    this.display = false;\n  }\n\n  /**\n   * Método que elimina un interés del sistema a través de la API.\n   * Una vez enviado, también será el encargado de mostrar un mensaje al usuario.\n   * @param interest \n   * Interés que se desea eliminar\n   */\n  deleteInterest(interest) {\n    this.confirmationService.confirm({\n      message: this.translateService.instant('message_delete_interest'),\n      accept: () => {\n        this.interestService.deleteInterest(interest).pipe(\n          mergeMap( message => {\n            return this.interestService.getInterests().pipe(\n              map(data => {\n                this.interest = data;\n              })\n            );\n          })\n        ).subscribe( data => {\n          var message = this.translateService.instant('interest_delete_message',{ 'nameInterest': interest.nameInterest });\n          this.messageService.add({key: 'interest', severity:'success', summary: this.translateService.instant('interest_delete'), detail: message });\n          },\n          (err) => {\n            if (err.status === 500){\n              var message = this.translateService.instant('interest_has_activities');\n              this.messageService.add({key: 'interest', severity:'error', summary: this.translateService.instant('error'), detail: message });\n            }\n            else{\n              var message = this.translateService.instant('error_delete_message');\n              this.messageService.add({key: 'interest', severity:'error', summary: this.translateService.instant('error'), detail: message });\n            }\n          }\n        );\n      }\n    });\n  }\n\n  editInterest(interest){\n    this.displayEditDialog = true;\n    this.formEditInterest.patchValue({\n      id: interest.id,\n      name: interest.nameInterest\n    });\n  }\n\n  onEditSubmit(){\n    var interest = {\n      nameInterest: this.formEditInterest.get('name').value\n    }\n    this.interestService.editInterest(this.formEditInterest.get('id').value, interest).pipe(\n      mergeMap( data => {\n        return this.interestService.getInterests().pipe();\n      })\n    ).subscribe(\n      data => {\n        this.displayEditDialog = false;\n        var message = this.translateService.instant('interest_edit_message',{ 'nameInterest': interest.nameInterest });\n        this.messageService.add({key: 'interest', severity:'success', summary: this.translateService.instant('interest_edit'), detail: message });\n        this.interest = data;\n      },\n      err => {\n        this.errorEditInterest = true;\n      }\n    );\n  }\n\n  cancelEdit(){\n    this.displayEditDialog = false;\n  }\n\n  hideDialogEditInterest(){\n    this.errorEditInterest = false;\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        {{ 'interest' | translate }}\n        \n      \n      \n        \n          \n            {{interest.nameInterest}}\n          \n          \n            \n            \n          \n        \n      \n    \n  \n  \n    \n      {{ 'add_interest' | translate }}\n    \n    \n      \n        {{ 'name_interest' | translate }}*:\n        \n          \n          {{ 'name_interest_required' | translate }}\n          {{ 'name_interest_repetead' | translate }}\n        \n      \n    \n    \n      \n      \n    \n  \n  \n\n  \n    \n      \n        {{ 'name_interest' | translate }}*:\n        \n          \n          {{ 'name_interest_required' | translate }}\n          {{ 'name_interest_repetead' | translate }}\n        \n      \n    \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./list-interest.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n\n.interest-panel {\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n}\n\n.list-container-interest, .list-header-interest {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.buttons-add-interest{\n  display: flex;\n  flex-direction: column;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'interest\\' | translate }}                                                  {{interest.nameInterest}}                                                                                      {{ \\'add_interest\\' | translate }}                      {{ \\'name_interest\\' | translate }}*:                            {{ \\'name_interest_required\\' | translate }}          {{ \\'name_interest_repetead\\' | translate }}                                                              {{ \\'name_interest\\' | translate }}*:                            {{ \\'name_interest_required\\' | translate }}          {{ \\'name_interest_repetead\\' | translate }}                                        '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListInterestComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListUserComponent.html":{"url":"components/ListUserComponent.html","title":"component - ListUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/list-user/list-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-user\n            \n\n            \n                styleUrls\n                ./list-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cols\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmDelete\n                            \n                            \n                                editUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, confirmationService: ConfirmationService, router: Router, rolService: RolService, translateService: TranslateService, localStorageService: LocalStorageService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/list-user/list-user.component.ts:33\n                            \n                        \n\n                \n                    \n                            Constructor de la clase ListUserComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de usuarios.\n\n                                                        \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite mostrar un diálogo de confirmación.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite la navegación entre vistas.\n\n                                                        \n                                                \n                                                \n                                                        rolService\n                                                  \n                                                        \n                                                                        RolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de roles.\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmDelete\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmDelete(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-user/list-user.component.ts:88\n                \n            \n\n\n            \n                \n                    Método que elimina un usuario del sistema a través de la API.\nUna vez enviado, también será el encargado de mostrar un mensaje al usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Usuario que se desea eliminar.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \neditUser(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-user/list-user.component.ts:119\n                \n            \n\n\n            \n                \n                    Método que redirige al usuario al componente EditUserAdmin.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Usuario cuya información se quiere editar.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/list-user/list-user.component.ts:70\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n  \n      Inicializará los objetos que representan una columna de la tabla.\n      Cargará los dintintos usuarios.\n  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cols\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-user/list-user.component.ts:33\n                            \n                        \n\n                \n                    \n                        Array de objetos que representan las columnas del componente tabla.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/list-user/list-user.component.ts:29\n                            \n                        \n\n                \n                    \n                        Almacena los usuarios\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../services/user/user.service';\nimport {ConfirmationService, MessageService} from 'primeng/api';\nimport {Router} from '@angular/router';\nimport {RolService} from '../services/rol/rol.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {map, mergeMap} from 'rxjs/operators';\nimport {LocalStorageService} from '../services/local-storage/local-storage.service';\nimport {User} from '../models/user';\n\n@Component({\n  selector: 'app-list-user',\n  templateUrl: './list-user.component.html',\n  styleUrls: ['./list-user.component.scss']\n})\n/**\n * Clase ListUserComponent\n *\n * Clase que muestra la lista de usuarios registrados en el sistema.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class ListUserComponent implements OnInit {\n\n  /**\n   * Almacena los usuarios\n   */\n  users: User[] = [];\n  /**\n   * Array de objetos que representan las columnas del componente tabla.\n   */\n  cols: any[];\n\n  /**\n   * Constructor de la clase ListUserComponent\n   *\n   * @param userService\n   * Servicio de usuarios.\n   * @param confirmationService\n   * Servicio propocionado por la librería PrimeNG que permite mostrar un diálogo de confirmación.\n   * @param router\n   * Servicio que permite la navegación entre vistas.\n   * @param rolService\n   * Servicio de roles.\n   * @param translateService\n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   * @param localStorageService\n   * Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n   * @param messageService\n   * Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n   */\n  constructor(\n    private userService: UserService,\n    private confirmationService: ConfirmationService,\n    private router: Router,\n    private rolService: RolService,\n    private translateService: TranslateService,\n    private localStorageService: LocalStorageService,\n    private messageService: MessageService\n  ) { }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   *  \n   *      Inicializará los objetos que representan una columna de la tabla.\n   *      Cargará los dintintos usuarios.\n   *  \n   */\n  ngOnInit(): void {\n    this.cols = [\n      { field: 'userName', header: 'username' },\n      { field: 'email', header: 'Email' },\n      { field: 'dateBirthday', header: 'date_birth' },\n      { field: 'roles', header: 'Role'}\n    ];\n    this.userService.getUsers().subscribe(response => {\n      this.users = response.filter(user => user.email !== this.localStorageService.getEmailUser());\n    });\n  }\n\n  /**\n   * Método que elimina un usuario del sistema a través de la API.\n   * Una vez enviado, también será el encargado de mostrar un mensaje al usuario.\n   * @param user\n   * Usuario que se desea eliminar.\n   */\n  confirmDelete(user){\n    this.confirmationService.confirm({\n      message: this.translateService.instant('message_delete_user'),\n      accept: () => {\n        this.userService.deleteUser(user.id).pipe(\n          mergeMap( message => {\n            return this.userService.getUsers().pipe(\n              map(data => {\n                this.users = data;\n                this.users = this.users.filter(restUser => restUser.email !== this.localStorageService.getEmailUser());\n              })\n            );\n          })\n        ).subscribe( data => {\n            var message = this.translateService.instant('user_delete_message',{ 'email': user.email });\n            this.messageService.add({key: 'user', severity:'success', summary: this.translateService.instant('user_delete'), detail: message });\n          },\n          (err) => {\n            var message = this.translateService.instant('error_delete_message');\n            this.messageService.add({key: 'user', severity:'error', summary: this.translateService.instant('error'), detail: message });\n          }\n        );\n      }\n    });\n  }\n\n  /**\n   * Método que redirige al usuario al componente EditUserAdmin.\n   * @param user\n   * Usuario cuya información se quiere editar.\n   */\n  editUser(user){\n    this.router.navigateByUrl('admin/user/edit/' + user.id);\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n          {{ 'list_user' | translate }}\n          \n                    \n                    \n                \n        \n      \n      \n        \n          \n            {{ col.header | translate }}\n            \n          \n          \n          \n        \n      \n      \n        \n          {{user.userName}}\n          {{user.email}}\n          {{user.dateBirthday| date: 'dd/MM/yyyy'}}\n          \n                  \n                      {{rol}}\n                  \n          \n          \n            \n            \n          \n        \n      \n      \n        {{ 'message-no-user-match' | translate }}\n      \n    \n  \n\n\n\n\n\n    \n\n    \n                \n                    ./list-user.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.user-panel {\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n}\n\n.user-container{\n  display: inline-flex;\n  height: 100%;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.table-user{\n  padding: 15px;\n\n  ::ng-deep .p-datatable-tbody > tr > td,\n  ::ng-deep .p-datatable-thead > tr > th{\n    word-wrap:break-word;\n    text-align: center;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ \\'list_user\\' | translate }}                                                                                                                    {{ col.header | translate }}                                                                                {{user.userName}}          {{user.email}}          {{user.dateBirthday| date: \\'dd/MM/yyyy\\'}}                                                  {{rol}}                                                                                                    {{ \\'message-no-user-match\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/local-storage/local-storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decodeToken\n                            \n                            \n                                getEmailUser\n                            \n                            \n                                getRolesUser\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                logOut\n                            \n                            \n                                    Public\n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/local-storage/local-storage.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decodeToken\n                        \n                        \n                    \n                \n            \n            \n                \ndecodeToken(token)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage/local-storage.service.ts:70\n                \n            \n\n\n            \n                \n                    Método que decodifica el token de acceso\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        objeto con la información decodificada del token\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage/local-storage.service.ts:49\n                \n            \n\n\n            \n                \n                    Método que obtiene el email del token.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        el email del usuario si se encuentra autenticado o null en caso contrario\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRolesUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetRolesUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage/local-storage.service.ts:59\n                \n            \n\n\n            \n                \n                    Método que obtiene los roles del token.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        los roles del usuario si se encuentra autenticado o null en caso contrario\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage/local-storage.service.ts:34\n                \n            \n\n\n            \n                \n                    Método que obtiene el token del objeto LocalStorage\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        el token\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage/local-storage.service.ts:41\n                \n            \n\n\n            \n                \n                    Método que elimina la información almacenada en el objeto LocalStorage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage/local-storage.service.ts:25\n                \n            \n\n\n            \n                \n                    Método que almacena el nuevo token en el objeto LocalStorage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport jwt_decode from 'jwt-decode';\n\n/**\n * Clave para almacenar el valor del token en el LocalStorage\n */\nconst TOKEN_KEY = 'AuthToken';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clase LocalStorageService\n * \n * Clase que se encarga de acceder al objeto LocalStorage del navegador.\n */\nexport class LocalStorageService {\n\n  constructor() { }\n\n  /**\n   * Método que almacena el nuevo token en el objeto LocalStorage\n   * @param token token\n   */\n  public setToken(token: string): void {\n    window.localStorage.removeItem(TOKEN_KEY);\n    window.localStorage.setItem(TOKEN_KEY, token);\n  }\n\n  /**\n   * Método que obtiene el token del objeto LocalStorage\n   * @returns el token\n   */\n  public getToken(): string {\n    return localStorage.getItem(TOKEN_KEY);\n  }\n\n  /**\n   * Método que elimina la información almacenada en el objeto LocalStorage\n   */\n  public logOut(): void {\n    window.localStorage.clear();\n  }\n\n  /**\n   * Método que obtiene el email del token.\n   * @returns el email del usuario si se encuentra autenticado o null en caso contrario\n   */\n  getEmailUser() {\n    var token = this.getToken();\n    var decodedToken = this.decodeToken(token);\n    return decodedToken ? decodedToken.sub : null;\n  }\n\n  /**\n   * Método que obtiene los roles del token.\n   * @returns los roles del usuario si se encuentra autenticado o null en caso contrario\n   */\n  getRolesUser() {\n    var token = this.getToken();\n    var decodedToken = this.decodeToken(token);\n    return decodedToken ? decodedToken.ROLES : [];\n  }\n\n  /**\n   * Método que decodifica el token de acceso\n   * @param token token\n   * @returns objeto con la información decodificada del token\n   */\n  decodeToken(token): any {\n    if (token) {\n      return jwt_decode(token);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                infoMessage\n                            \n                            \n                                isLoginFail\n                            \n                            \n                                loginForm\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                processMessageTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, formBuilder: FormBuilder, router: Router, route: ActivatedRoute, messageService: MessageService, translateService: TranslateService, notification: NotificationService, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor de la clase LoginComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Clase que permite crear objetos de la clase FormGroup y FormControl.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite la navegación entre vistas\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                                \n                                                        notification\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite almacenar notificaciones.\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessages\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:110\n                \n            \n\n\n            \n                \n                    Métódo que obtiene mensajes de notificación a través del servicio.\n\n\n                    \n                        Returns :     Message[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:143\n                \n            \n\n\n            \n                \n                    Método que se ejecuta al destruir un componente.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:80\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n\n      Inicializará el formulario\n      Si el usuario fue redirigido al Login desde SignUp, se inicializará el mensaje de éxito\n  \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:119\n                \n            \n\n\n            \n                \n                    Método que crea un objeto user a partir de los datos del formulario y se lo envía a la API.\nUna vez enviado y si las credenciales son correctas, también será el encargado de redirigir al usuario al componente correspondiente según su rol.\nEn caso contrario, se mostrará un error al usuario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processMessageTranslation\n                        \n                        \n                    \n                \n            \n            \n                \nprocessMessageTranslation(messages)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:97\n                \n            \n\n\n            \n                \n                    Método que traduce textos.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    messages\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Los textos a traducir.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            infoMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                        Almacena el mensaje que se muestra al usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoginFail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:33\n                            \n                        \n\n                \n                    \n                        Indica si el inicio de sesión falló.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:29\n                            \n                        \n\n                \n                    \n                        Formulario para iniciar sesión en la aplicación.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:37\n                            \n                        \n\n                \n                    \n                        Almacena los roles del usuario autenticado.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../services/auth/auth.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Message, MessageService} from 'primeng/api';\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\nimport {NotificationService} from '../services/message/notification.service';\nimport {LocalStorageService} from '../services/local-storage/local-storage.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n/**\n * Clase LoginComponent\n *\n * Clase que permite iniciar sesión a un usuario.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Formulario para iniciar sesión en la aplicación.\n   */\n  loginForm: FormGroup;\n  /**\n   * Indica si el inicio de sesión falló.\n   */\n  isLoginFail = false;\n  /**\n   * Almacena los roles del usuario autenticado.\n   */\n  roles: string[] = [];\n  /**\n   * Almacena el mensaje que se muestra al usuario.\n   */\n  infoMessage = [];\n\n  /**\n   * Constructor de la clase LoginComponent\n   *\n   * @param authService\n   * Servicio de autenticación.\n   * @param formBuilder\n   * Clase que permite crear objetos de la clase FormGroup y FormControl.\n   * @param router\n   * Servicio que permite la navegación entre vistas\n   * @param route\n   *\n   * @param messageService\n   * Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n   * @param translateService\n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   * @param notification\n   * Servicio que permite almacenar notificaciones.\n   * @param localStorageService\n   * Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n   */\n  constructor(\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private notification: NotificationService,\n    private localStorageService: LocalStorageService) {}\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   * \n   *      Inicializará el formulario\n   *      Si el usuario fue redirigido al Login desde SignUp, se inicializará el mensaje de éxito\n   *  \n    */\n  ngOnInit(): void {\n    this.processMessageTranslation(this.getMessages());\n    this.infoMessage = this.getMessages();\n    this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.processMessageTranslation(this.getMessages());\n    });\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /**\n   * Método que traduce textos.\n   * @param messages\n   * Los textos a traducir.\n   */\n  processMessageTranslation(messages): void {\n    this.infoMessage = [];\n    for (let message of messages){\n      var mAux = message;\n      mAux.summary = this.translateService.instant(\"sign_up_successful_message_summary\");\n      mAux.detail = this.translateService.instant(\"sign_up_successful_message_detail\");\n      this.infoMessage.push(mAux);\n    }\n  }\n\n  /**\n   * Métódo que obtiene mensajes de notificación a través del servicio.\n   */\n  getMessages(): Message[] {\n    return this.notification.message;\n  }\n\n  /**\n   * Método que crea un objeto user a partir de los datos del formulario y se lo envía a la API.\n   * Una vez enviado y si las credenciales son correctas, también será el encargado de redirigir al usuario al componente correspondiente según su rol.\n   * En caso contrario, se mostrará un error al usuario.\n   */\n  onSubmit() {\n    const usuario = {\n      email: this.loginForm.get('email').value,\n      password: this.loginForm.get('password').value\n    };\n    this.authService.login(usuario).subscribe(data => {\n        this.localStorageService.setToken(data.token);\n        this.isLoginFail = false;\n        this.roles = this.localStorageService.getRolesUser();\n        if (this.roles.includes(\"ROLE_ADMIN\")){\n          this.router.navigate(['/user']);\n        }\n        else{\n          this.router.navigate(['/recommendationMap']);\n        }\n      },\n      (err: any) => {\n        this.isLoginFail = true;\n      });\n  }\n\n  /**\n   * Método que se ejecuta al destruir un componente.\n   */\n  ngOnDestroy() {\n    this.notification.message = [];\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n  \n    \n      \n      {{ 'welcome' | translate }}\n      Aplicación de turismo basada en las preferencias del usuario\n    \n    \n      \n      \n        \n          \n            \n            Email\n          \n        \n        \n          \n        \n        \n          \n            \n            {{ 'password' | translate }}\n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n      {{ 'sign_up' | translate }}\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.login-component {\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n  \n  display: flex;\n  flex-direction: column;\n}\n\n.right-container, .left-container{\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\nform {\n  margin-top: 10px;\n}\n\n#img_logo {\n  width: 300px;\n  height: 300px;\n}\n\n#img-icon-user{\n  margin-top: 5px;\n}\n\n::ng-deep .p-messages {\n  margin-left: 5px;\n  margin-right: 5px;\n}\n\n.right-container{\n  .p-field{\n    margin-bottom: 1.5rem;\n  }\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ \\'welcome\\' | translate }}      Aplicación de turismo basada en las preferencias del usuario                                                              Email                                                                                      {{ \\'password\\' | translate }}                                                                                                            {{ \\'sign_up\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/map/map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map\n            \n\n            \n                styleUrls\n                ./map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initMap\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/map/map.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/map/map.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  private map;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.initMap();\n  }\n\n  private initMap(): void {\n    this.map = L.map('map', {\n      center: [ 43.333333, -6 ],\n      zoom: 8\n    });\n\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 19,\n      attribution: '&copy; OpenStreetMap'\n    });\n\n    tiles.addTo(this.map);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./map.component.scss\n                \n                .map-container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: 30px;\n}\n\n.map-frame {\n  border: 2px solid black;\n  height: 100%;\n}\n\n#map {\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuBarComponent.html":{"url":"components/MenuBarComponent.html","title":"component - MenuBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/menu-bar/menu-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu-bar\n            \n\n            \n                styleUrls\n                ./menu-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authority\n                            \n                            \n                                email\n                            \n                            \n                                isLogin\n                            \n                            \n                                roles\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                switchLang\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, translate: TranslateService, localStorageService: LocalStorageService, config: PrimeNGConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/menu-bar/menu-bar.component.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor de la clase MenuBarComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite la navegación entre vistas\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    PrimeNGConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite tener acceso a la API I18N proporcionada por dicha librería.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu-bar/menu-bar.component.ts:84\n                \n            \n\n\n            \n                \n                    Método que permite cerrar sesión a un usuario autenticado y le redirige de vuelta a la página de inicio de sesión.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu-bar/menu-bar.component.ts:66\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n\n      El email del usuario autenticado\n      Los roles del usuario autenticado\n  \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchLang\n                        \n                        \n                    \n                \n            \n            \n                \nswitchLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu-bar/menu-bar.component.ts:97\n                \n            \n\n\n            \n                \n                    Método que permite cambiar el idioma a la aplicación.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        El idioma a utilizar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authority\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu-bar/menu-bar.component.ts:34\n                            \n                        \n\n                \n                    \n                        Rol que identifica al usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/menu-bar/menu-bar.component.ts:38\n                            \n                        \n\n                \n                    \n                        Email del usuario autenticado.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu-bar/menu-bar.component.ts:26\n                            \n                        \n\n                \n                    \n                        Indica si el usuario está autenticado o no.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu-bar/menu-bar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Roles del usuario autenticado.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu-bar/menu-bar.component.ts:54\n                            \n                        \n\n                \n                    \n                        Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LocalStorageService} from '../services/local-storage/local-storage.service';\nimport {PrimeNGConfig} from 'primeng/api';\n\n@Component({\n  selector: 'app-menu-bar',\n  templateUrl: './menu-bar.component.html',\n  styleUrls: [\n    './menu-bar.component.scss'\n  ],\n})\n/**\n * Clase MenuBarComponent\n *\n * Clase que proporciona enlaces a las diferentes páginas de la aplicación.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class MenuBarComponent implements OnInit {\n  /**\n   * Indica si el usuario está autenticado o no.\n   */\n  isLogin = false;\n  /**\n   * Roles del usuario autenticado.\n   */\n  roles: string[];\n  /**\n   * Rol que identifica al usuario.\n   */\n  authority: string;\n  /**\n   * Email del usuario autenticado.\n   */\n  email;\n\n  /**\n   * Constructor de la clase MenuBarComponent\n   *\n   * @param router\n   * Servicio que permite la navegación entre vistas\n   * @param translate\n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   * @param localStorageService\n   * Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n   * @param config\n     Servicio propocionado por la librería PrimeNG que permite tener acceso a la API I18N proporcionada por dicha librería.\n   */\n  constructor(\n    private router: Router,\n    public translate: TranslateService,\n    private localStorageService: LocalStorageService,\n    private config: PrimeNGConfig\n  ) {}\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   * \n   *      El email del usuario autenticado\n   *      Los roles del usuario autenticado\n   *  \n   */\n  ngOnInit(): void {\n    this.email = this.localStorageService.getEmailUser();\n    if (this.localStorageService.getToken()){\n      this.isLogin = true;\n      this.roles = [];\n      this.roles = this.localStorageService.getRolesUser();\n      if (this.roles.includes(\"ROLE_ADMIN\")){\n        this.authority = 'admin';\n      }\n      else {\n        this.authority = 'user';\n      }\n    }\n  }\n\n  /**\n   * Método que permite cerrar sesión a un usuario autenticado y le redirige de vuelta a la página de inicio de sesión.\n   */\n  logOut(): void {\n    this.localStorageService.logOut();\n    this.isLogin = false;\n    this.authority = '';\n    this.router.navigateByUrl('/login');\n  }\n\n  /**\n   * Método que permite cambiar el idioma a la aplicación.\n   *\n   * @param lang\n   * El idioma a utilizar\n   */\n  switchLang(lang: string) {\n    this.translate.use(lang);\n    this.translate.get('primeng').subscribe(res => this.config.setTranslation(res));\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n         {{'users' | translate }}(current)\n      \n      \n         {{'cities' | translate }}(current)\n      \n      \n         {{'activities' | translate }}(current)\n      \n      \n         {{'interests' | translate }}(current)\n      \n      \n         {{'recommendation' | translate }}(current)\n      \n      \n         {{'activities_valued' | translate }}(current)\n      \n    \n    \n      \n        \n          {{ 'language' | translate }}\n        \n        \n           {{ 'spanish' | translate }}\n           {{ 'english' | translate }}\n        \n      \n      \n        \n          \n            \n            {{email}}\n          \n          \n             {{ 'yourPerfile' | translate }}\n            \n             {{ 'log_out' | translate }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./menu-bar.component.scss\n                \n                @import \"~bootstrap/scss/bootstrap\";\n\n:host ::ng-deep .menu-bar {\n  min-width: 800px;\n  border-radius: 3px;\n}\n\n/*.container-name{\n  display: flex;\n  justify-content: center; !* align horizontal *!\n  align-items: center; !* align vertical *!\n}*/\n\n.navbar-light .navbar-nav .nav-link:hover{\n  background-color: rgba(0, 0, 0, 0.1);\n}\n\n.navbar-light .navbar-nav .nav-link.active{\n  color: #2196F3;\n}\n\n.navbar-light .navbar-nav .nav-link{\n  color: rgba(0,0,0, 0.9);\n}\n\n.navbar-nav .nav-link{\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                             {{\\'users\\' | translate }}(current)                     {{\\'cities\\' | translate }}(current)                     {{\\'activities\\' | translate }}(current)                     {{\\'interests\\' | translate }}(current)                     {{\\'recommendation\\' | translate }}(current)                     {{\\'activities_valued\\' | translate }}(current)                                      {{ \\'language\\' | translate }}                           {{ \\'spanish\\' | translate }}           {{ \\'english\\' | translate }}                                                              {{email}}                                 {{ \\'yourPerfile\\' | translate }}                         {{ \\'log_out\\' | translate }}                              '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockActivityService.html":{"url":"injectables/MockActivityService.html","title":"injectable - MockActivityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockActivityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/activity/activity-service-mock.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ActivityService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listActivities\n                            \n                            \n                                listActivitiesRated\n                            \n                            \n                                listRecommendedActivities\n                            \n                            \n                                activityUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActivity\n                            \n                            \n                                deleteActivity\n                            \n                            \n                                editActivity\n                            \n                            \n                                getActivities\n                            \n                            \n                                getActivity\n                            \n                            \n                                getRatedActivities\n                            \n                            \n                                getRecommendedActivities\n                            \n                            \n                                postRateActivity\n                            \n                            \n                                    Public\n                                addActivity\n                            \n                            \n                                    Public\n                                deleteActivity\n                            \n                            \n                                    Public\n                                editActivity\n                            \n                            \n                                    Public\n                                getActivities\n                            \n                            \n                                    Public\n                                getActivity\n                            \n                            \n                                    Public\n                                getRatedActivities\n                            \n                            \n                                    Public\n                                getRecommendedActivities\n                            \n                            \n                                    Public\n                                postRateActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addActivity\n                        \n                        \n                    \n                \n            \n            \n                \naddActivity(formData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity-service-mock.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteActivity\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteActivity(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity-service-mock.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editActivity\n                        \n                        \n                    \n                \n            \n            \n                \neditActivity(id, activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity-service-mock.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActivities\n                        \n                        \n                    \n                \n            \n            \n                \ngetActivities()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity-service-mock.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActivity\n                        \n                        \n                    \n                \n            \n            \n                \ngetActivity(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity-service-mock.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRatedActivities\n                        \n                        \n                    \n                \n            \n            \n                \ngetRatedActivities(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity-service-mock.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRecommendedActivities\n                        \n                        \n                    \n                \n            \n            \n                \ngetRecommendedActivities(idUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity-service-mock.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idUser\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postRateActivity\n                        \n                        \n                    \n                \n            \n            \n                \npostRateActivity(activityRate)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/activity/activity-service-mock.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityRate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addActivity(formData)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityService\n\n                \n            \n            \n                \n                        Defined in         ActivityService:56\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para añadir una nueva actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    formData\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto FormData que incluye la información de la nueva actividad.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteActivity(id)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityService\n\n                \n            \n            \n                \n                        Defined in         ActivityService:65\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición DELETE para eliminar una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador de la actividad\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editActivity(id, activity)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityService\n\n                \n            \n            \n                \n                        Defined in         ActivityService:76\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición PUT para modificar la información de una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador de la actividad\n\n                                    \n                                \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto actividad con la información actualizada.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getActivities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActivities()\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityService\n\n                \n            \n            \n                \n                        Defined in         ActivityService:38\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de actividades.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActivity(id)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityService\n\n                \n            \n            \n                \n                        Defined in         ActivityService:47\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador de la actividad\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRatedActivities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRatedActivities(idUser)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityService\n\n                \n            \n            \n                \n                        Defined in         ActivityService:103\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de actividades valoradas por el usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idUser\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRecommendedActivities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecommendedActivities(idUser)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityService\n\n                \n            \n            \n                \n                        Defined in         ActivityService:94\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de actividades recomendadas al usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idUser\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postRateActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postRateActivity(activityRate)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityService\n\n                \n            \n            \n                \n                        Defined in         ActivityService:85\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para añadir una nueva valoración a una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activityRate\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto con la valoración del usuario a una actividad\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API \n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listActivities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 1,\n      name: 'Universidad Laboral',\n      description: 'Universidad situada en Gijón',\n      latitude: 43.524088,\n      longitude: -5.614049,\n      pathImage: 'universidad.jpg',\n      city: 'Gijón',\n      interest: 'Iglesia',\n      address: 'Universidad Laboral, Calle José Luis Álvarez Margaride, Cabueñes, La Guía, Distrito Rural, Gijón, 33394, España',\n      metadataImage: {\n        filename: 'universidad.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      }\n    },\n    {\n      id: 2,\n      name: 'Elogio del horizonte',\n      description: 'Elogio del horizonte es el nombre de una escultura de hormigón situada en la ciudad de Gijón, realizada por el escultor vasco Eduardo Chillida.​ Se trata de una obra de grandes proporciones erigida en el año 1990 en el Cerro de Santa Catalina.​',\n      latitude: 43.549,\n      longitude: -5.6631,\n      pathImage: 'elogio.jpg',\n      city: 'Gijón',\n      interest: 'Escultura',\n      address: 'Elogio del Horizonte, Parque del Cerro, Cimadevilla, Distrito Centro, Gijón, 33201, España',\n      metadataImage: {\n        filename: 'elogio.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      }\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/activity/activity-service-mock.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listActivitiesRated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 8,\n      name: 'Estatua de Don Pelayo',\n      description: 'Escultura de Gijón',\n      latitude: 43.544993,\n      longitude: -5.664037,\n      pathImage: 'pelayo.jpg',\n      city: 'Gijón',\n      interest: 'Escultura',\n      address: 'Plaza del Marqués, 1, 33201 Gijón, Asturias',\n      metadataImage: {\n        filename: 'pelayo.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      },\n      score: 5,\n      average: 2\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/activity/activity-service-mock.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listRecommendedActivities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 1,\n      name: 'Universidad Laboral',\n      description: 'Universidad situada en Gijón',\n      latitude: 43.524088,\n      longitude: -5.614049,\n      pathImage: 'universidad.jpg',\n      city: 'Gijón',\n      interest: 'Iglesia',\n      address: 'Universidad Laboral, Calle José Luis Álvarez Margaride, Cabueñes, La Guía, Distrito Rural, Gijón, 33394, España',\n      metadataImage: {\n        filename: 'universidad.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      },\n      score: 1.99999,\n      average: 2\n    },\n    {\n      id: 2,\n      name: 'Elogio del horizonte',\n      description: 'Elogio del horizonte es el nombre de una escultura de hormigón situada en la ciudad de Gijón, realizada por el escultor vasco Eduardo Chillida.​ Se trata de una obra de grandes proporciones erigida en el año 1990 en el Cerro de Santa Catalina.​',\n      latitude: 43.549,\n      longitude: -5.6631,\n      pathImage: 'elogio.jpg',\n      city: 'Gijón',\n      interest: 'Escultura',\n      address: 'Elogio del Horizonte, Parque del Cerro, Cimadevilla, Distrito Centro, Gijón, 33201, España',\n      metadataImage: {\n        filename: 'elogio.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      },\n      score: 0.5,\n      average: 2\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/activity/activity-service-mock.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activityUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/activity'\n                        \n                    \n                            \n                                \n                                    Inherited from         ActivityService\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActivityService:26\n\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {ActivityService} from './activity.service';\nimport {Injectable} from '@angular/core';\nimport {Activity, ActivityRecommended} from '../../models/activity';\nimport {Observable, of} from 'rxjs';\n\n\n@Injectable()\nexport class MockActivityService extends ActivityService {\n\n  listActivities = [\n    {\n      id: 1,\n      name: 'Universidad Laboral',\n      description: 'Universidad situada en Gijón',\n      latitude: 43.524088,\n      longitude: -5.614049,\n      pathImage: 'universidad.jpg',\n      city: 'Gijón',\n      interest: 'Iglesia',\n      address: 'Universidad Laboral, Calle José Luis Álvarez Margaride, Cabueñes, La Guía, Distrito Rural, Gijón, 33394, España',\n      metadataImage: {\n        filename: 'universidad.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      }\n    },\n    {\n      id: 2,\n      name: 'Elogio del horizonte',\n      description: 'Elogio del horizonte es el nombre de una escultura de hormigón situada en la ciudad de Gijón, realizada por el escultor vasco Eduardo Chillida.​ Se trata de una obra de grandes proporciones erigida en el año 1990 en el Cerro de Santa Catalina.​',\n      latitude: 43.549,\n      longitude: -5.6631,\n      pathImage: 'elogio.jpg',\n      city: 'Gijón',\n      interest: 'Escultura',\n      address: 'Elogio del Horizonte, Parque del Cerro, Cimadevilla, Distrito Centro, Gijón, 33201, España',\n      metadataImage: {\n        filename: 'elogio.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      }\n    }\n  ];\n\n\n  listActivitiesRated = [\n    {\n      id: 8,\n      name: 'Estatua de Don Pelayo',\n      description: 'Escultura de Gijón',\n      latitude: 43.544993,\n      longitude: -5.664037,\n      pathImage: 'pelayo.jpg',\n      city: 'Gijón',\n      interest: 'Escultura',\n      address: 'Plaza del Marqués, 1, 33201 Gijón, Asturias',\n      metadataImage: {\n        filename: 'pelayo.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      },\n      score: 5,\n      average: 2\n    }\n  ];\n\n  listRecommendedActivities = [\n    {\n      id: 1,\n      name: 'Universidad Laboral',\n      description: 'Universidad situada en Gijón',\n      latitude: 43.524088,\n      longitude: -5.614049,\n      pathImage: 'universidad.jpg',\n      city: 'Gijón',\n      interest: 'Iglesia',\n      address: 'Universidad Laboral, Calle José Luis Álvarez Margaride, Cabueñes, La Guía, Distrito Rural, Gijón, 33394, España',\n      metadataImage: {\n        filename: 'universidad.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      },\n      score: 1.99999,\n      average: 2\n    },\n    {\n      id: 2,\n      name: 'Elogio del horizonte',\n      description: 'Elogio del horizonte es el nombre de una escultura de hormigón situada en la ciudad de Gijón, realizada por el escultor vasco Eduardo Chillida.​ Se trata de una obra de grandes proporciones erigida en el año 1990 en el Cerro de Santa Catalina.​',\n      latitude: 43.549,\n      longitude: -5.6631,\n      pathImage: 'elogio.jpg',\n      city: 'Gijón',\n      interest: 'Escultura',\n      address: 'Elogio del Horizonte, Parque del Cerro, Cimadevilla, Distrito Centro, Gijón, 33201, España',\n      metadataImage: {\n        filename: 'elogio.jpg',\n        mimeType: 'image/jpg',\n        data: 'E3uTRf1oyGPBx0S5zlxdwQhA7WwLoNmf/9k=',\n      },\n      score: 0.5,\n      average: 2\n    }\n  ];\n\n  getActivities(): Observable {\n    return of(this.listActivities);\n  }\n\n  deleteActivity(id): Observable {\n    this.listActivities = this.listActivities.filter(p => p.id !== id);\n    return of({\n      mensaje: 'La actividad ha sido eliminada'\n    });\n  }\n\n  addActivity(formData): Observable {\n    var activityToAdd = {\n      id: this.listActivities[this.listActivities.length - 1].id + 1,\n      name: formData.get('name'),\n      description:  formData.get('description'),\n      latitude: formData.get('latitude'),\n      longitude: formData.get('longitude'),\n      pathImage: '',\n      city: formData.get('city'),\n      interest: formData.get('interest'),\n      address: formData.get('address'),\n      metadataImage: {\n        filename: '',\n        mimeType: '',\n        data: '',\n      }\n    }\n    this.listActivities.push(activityToAdd);\n    return of({\n      mensaje: 'La actividad ha sido añadida'\n    });\n  }\n\n  getRatedActivities(user): Observable{\n    return of(this.listActivitiesRated);\n  }\n\n  getRecommendedActivities(idUser): Observable {\n    return of(this.listRecommendedActivities);\n  }\n\n  editActivity(id, activity): Observable {\n    // ERROR. El observer se llamaba antes\n    const updateItem = this.listActivities.find(acti => acti.id === id);\n    const index = this.listActivities.indexOf(updateItem);\n\n    var cityToEdit = {\n      id: id,\n      name: activity.get('name'),\n      description:  activity.get('description'),\n      latitude: activity.get('latitude'),\n      longitude: activity.get('longitude'),\n      pathImage: updateItem.pathImage,\n      city: activity.get('city'),\n      interest: activity.get('interest'),\n      address: activity.get('address'),\n      metadataImage: {\n        filename: updateItem.metadataImage.filename,\n        mimeType: updateItem.metadataImage.mimeType,\n        data: updateItem.metadataImage.data,\n      }\n    }\n    this.listActivities[index] = cityToEdit;\n    return of({\n      mensaje: 'La actividad ha sido modificada'\n    });\n  }\n\n  getActivity(id): Observable {\n    const activity = this.listActivities.find(p => p.id === id);\n    return of(activity);\n  }\n\n  postRateActivity(activityRate): Observable {\n    this.listRecommendedActivities.push(activityRate);\n    return of({\n      mensaje: 'La actividad ha sido valorada'\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockAuthService.html":{"url":"injectables/MockAuthService.html","title":"injectable - MockAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth-service-mock.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                signUp\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(user: UserLogin)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth-service-mock.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \nsignUp(user: UserSignUp)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth-service-mock.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserSignUp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: UserLogin)\n                \n            \n\n\n            \n                \n                    Inherited from         AuthService\n\n                \n            \n            \n                \n                        Defined in         AuthService:38\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para autenticar al usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto usuario que incluye la información del usuario que se intenta autenticar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(user: UserSignUp)\n                \n            \n\n\n            \n                \n                    Inherited from         AuthService\n\n                \n            \n            \n                \n                        Defined in         AuthService:47\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para registrar a un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserSignUp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto usuario que incluye la información del usuario que se registra\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/auth'\n                        \n                    \n                            \n                                \n                                    Inherited from         AuthService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AuthService:25\n\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {AuthService} from './auth.service';\nimport {Observable, of} from 'rxjs';\nimport {UserLogin, UserSignUp} from '../../models/user';\nimport {JwtModel} from '../../models/jwt_model';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class MockAuthService extends AuthService{\n\n  signUp(user: UserSignUp): Observable {\n    return of({\n      mensaje: 'Usuario añadido'\n    });\n  }\n\n  login(user: UserLogin): Observable {\n    if (user.email === \"alba@email.com\" ){\n      return of({\n        token: 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbkBlbWFpbC5jb20iLCJST0xFUyI6IlJPTEVfVVNFUiIsImlhdCI6MTYxOTYyNjg0NSwiZXhwIjoxNjE5NjMwNDQ1fQ.G9Lo7n_qFYlwN6QUSijFO-REsPft5VvaFlgHKTOFmvphx20NL7b1-8d8-GidTd2a_UhHDHlVjHV6LdIGGa2gTw'\n      });\n    }\n    else{\n      return of({\n        token: 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbkBlbWFpbC5jb20iLCJST0xFUyI6IlJPTEVfQURNSU4sUk9MRV9VU0VSIiwiaWF0IjoxNjE5NjI2ODQ1LCJleHAiOjE2MTk2MzA0NDV9.pl_Io9pBx38Yl2jUZXB4UabZFix64n657neG7fHteN3DguhTp_IgUOze0PabMk55bnW9dftQbsBTdWjQFhHDkQ'\n      });\n    }\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockCityService.html":{"url":"injectables/MockCityService.html","title":"injectable - MockCityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockCityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/city/city-service-mock.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CityService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listCities\n                            \n                            \n                                cityURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCity\n                            \n                            \n                                deleteCity\n                            \n                            \n                                editCity\n                            \n                            \n                                getCities\n                            \n                            \n                                    Public\n                                addCity\n                            \n                            \n                                    Public\n                                deleteCity\n                            \n                            \n                                    Public\n                                editCity\n                            \n                            \n                                    Public\n                                getCities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCity\n                        \n                        \n                    \n                \n            \n            \n                \naddCity(city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/city/city-service-mock.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteCity\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteCity(city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/city/city-service-mock.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editCity\n                        \n                        \n                    \n                \n            \n            \n                \neditCity(id, city)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/city/city-service-mock.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCities\n                        \n                        \n                    \n                \n            \n            \n                \ngetCities()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/city/city-service-mock.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCity(city)\n                \n            \n\n\n            \n                \n                    Inherited from         CityService\n\n                \n            \n            \n                \n                        Defined in         CityService:47\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para añadir una nueva localidad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto interés que incluye la información de la nueva localidad\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCity(city)\n                \n            \n\n\n            \n                \n                    Inherited from         CityService\n\n                \n            \n            \n                \n                        Defined in         CityService:56\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición DELETE para eliminar una localidad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto localidad que se quiere eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editCity(id, city)\n                \n            \n\n\n            \n                \n                    Inherited from         CityService\n\n                \n            \n            \n                \n                        Defined in         CityService:66\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición PUT para modificar la información de una localidad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador de la localidad\n\n                                    \n                                \n                                \n                                    city\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto localidad con la información actualizada. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCities()\n                \n            \n\n\n            \n                \n                    Inherited from         CityService\n\n                \n            \n            \n                \n                        Defined in         CityService:38\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de localidades.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listCities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        {\n            id: 1,\n            name: \"Gijón\"\n        },\n        {\n            id: 2,\n            name: \"Oviedo\"\n        },\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/city/city-service-mock.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cityURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/city'\n                        \n                    \n                            \n                                \n                                    Inherited from         CityService\n\n                                \n                            \n                        \n                            \n                                    Defined in         CityService:26\n\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { City } from \"src/app/models/city\";\nimport { CityService } from \"./city.service\";\n\n@Injectable()\nexport class MockCityService extends CityService {\n\n    listCities = [\n        {\n            id: 1,\n            name: \"Gijón\"\n        },\n        {\n            id: 2,\n            name: \"Oviedo\"\n        },\n    ];\n\n    getCities(): Observable {\n        return of(this.listCities);\n    }\n\n    addCity(city): Observable {\n        var cityToAdd = {\n            id: this.listCities[this.listCities.length - 1].id + 1,\n            name: city.name\n        }\n        this.listCities.push(cityToAdd);\n        return of({\n            mensaje: 'La ciudad ha sido añadida'\n        });\n    }\n\n    deleteCity(city): Observable {\n        this.listCities = this.listCities.filter(p => p.id !== city.id);\n        return of({\n            mensaje: 'La ciudad ha sido eliminada'\n        });\n    }\n\n    editCity(id, city): Observable {\n        const updateItem = this.listCities.find(ci => ci.id === id);\n        const index = this.listCities.indexOf(updateItem);\n\n        var cityToEdit = {\n            id: id,\n            name: city.name\n        }\n        this.listCities[index] = cityToEdit;\n\n        return of({\n            mensaje: 'La ciudad ha sido editada'\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockInterestService.html":{"url":"injectables/MockInterestService.html","title":"injectable - MockInterestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockInterestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/interest/interest-service-mock.ts\n        \n\n\n            \n                Extends\n            \n            \n                        InterestService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                interestList\n                            \n                            \n                                interestURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addInterests\n                            \n                            \n                                deleteInterest\n                            \n                            \n                                editInterest\n                            \n                            \n                                getInterests\n                            \n                            \n                                    Public\n                                addInterests\n                            \n                            \n                                    Public\n                                deleteInterest\n                            \n                            \n                                    Public\n                                editInterest\n                            \n                            \n                                    Public\n                                getInterestByUser\n                            \n                            \n                                    Public\n                                getInterests\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addInterests\n                        \n                        \n                    \n                \n            \n            \n                \naddInterests(interest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest-service-mock.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteInterest\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteInterest(interest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest-service-mock.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editInterest\n                        \n                        \n                    \n                \n            \n            \n                \neditInterest(id, interest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest-service-mock.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInterests\n                        \n                        \n                    \n                \n            \n            \n                \ngetInterests()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interest/interest-service-mock.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addInterests\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addInterests(interest)\n                \n            \n\n\n            \n                \n                    Inherited from         InterestService\n\n                \n            \n            \n                \n                        Defined in         InterestService:45\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición POST para añadir un nuevo tipo de interés.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto interés que incluye la información del nuevo tipo de interés.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteInterest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteInterest(interest)\n                \n            \n\n\n            \n                \n                    Inherited from         InterestService\n\n                \n            \n            \n                \n                        Defined in         InterestService:54\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición DELETE para eliminar un tipo de interés.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto interés que se quiere eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editInterest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editInterest(id, interest)\n                \n            \n\n\n            \n                \n                    Inherited from         InterestService\n\n                \n            \n            \n                \n                        Defined in         InterestService:73\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición PUT para modificar la información de un tipo de interés.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del tipo de interés\n\n                                    \n                                \n                                \n                                    interest\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto actividad con la información actualizada.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInterestByUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInterestByUser(id)\n                \n            \n\n\n            \n                \n                    Inherited from         InterestService\n\n                \n            \n            \n                \n                        Defined in         InterestService:63\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener las puntuaciones dadas por el usuario a un tipo de interés.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInterests\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInterests()\n                \n            \n\n\n            \n                \n                    Inherited from         InterestService\n\n                \n            \n            \n                \n                        Defined in         InterestService:36\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de los tipos de intereses.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interestList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 1,\n      nameInterest: 'Museos'\n    },\n    {\n      id: 2,\n      nameInterest: 'Iglesias'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/interest/interest-service-mock.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interestURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/interest'\n                        \n                    \n                            \n                                \n                                    Inherited from         InterestService\n\n                                \n                            \n                        \n                            \n                                    Defined in         InterestService:24\n\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {AuthService} from '../auth/auth.service';\nimport {UserSignUp} from '../../models/user';\nimport {Observable, of} from 'rxjs';\nimport {InterestService} from './interest.service';\nimport {Interest} from '../../models/interest';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class MockInterestService extends InterestService{\n\n  interestList = [\n    {\n      id: 1,\n      nameInterest: 'Museos'\n    },\n    {\n      id: 2,\n      nameInterest: 'Iglesias'\n    }\n  ]\n\n  getInterests(): Observable {\n    return of(this.interestList);\n  }\n\n  addInterests(interest): Observable {\n    var interestToAdd = {\n      id: this.interestList[this.interestList.length - 1].id + 1,\n      nameInterest: interest.nameInterest\n    }\n    this.interestList.push(interestToAdd);\n    return of({\n      mensaje: 'El interés ha sido añadido'\n    });\n  }\n\n  deleteInterest(interest): Observable {\n    this.interestList = this.interestList.filter(p => p.id !== interest.id);\n    return of({\n      mensaje: 'El interés ha sido eliminado'\n    });\n  }\n\n  editInterest(id, interest): Observable {\n    const updateItem = this.interestList.find(inter => inter.id === id);\n    const index = this.interestList.indexOf(updateItem);\n\n    var interestToEdit = {\n      id: id,\n      nameInterest: interest.nameInterest\n    }\n    this.interestList[index] = interestToEdit;\n\n    return of({\n      mensaje: 'El interés ha sido editado'\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockRolService.html":{"url":"injectables/MockRolService.html","title":"injectable - MockRolService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockRolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/rol/rol-service-mock.ts\n        \n\n\n            \n                Extends\n            \n            \n                        RolService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roles\n                            \n                            \n                                rolURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRoles\n                            \n                            \n                                    Public\n                                getRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRoles\n                        \n                        \n                    \n                \n            \n            \n                \ngetRoles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/rol/rol-service-mock.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoles()\n                \n            \n\n\n            \n                \n                    Inherited from         RolService\n\n                \n            \n            \n                \n                        Defined in         RolService:37\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de los tipos de roles.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 1,\n      rolName: 'ROLE_ADMIN'\n    },\n    {\n      id: 2,\n      rolName: 'ROLE_USER'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/rol/rol-service-mock.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/rol'\n                        \n                    \n                            \n                                \n                                    Inherited from         RolService\n\n                                \n                            \n                        \n                            \n                                    Defined in         RolService:25\n\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {RolService} from './rol.service';\nimport {Rol} from '../../models/rol';\nimport {Observable, of} from 'rxjs';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class MockRolService extends RolService{\n\n  roles = [\n    {\n      id: 1,\n      rolName: 'ROLE_ADMIN'\n    },\n    {\n      id: 2,\n      rolName: 'ROLE_USER'\n    }\n  ]\n\n  getRoles(): Observable {\n    return of(this.roles);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockUserService.html":{"url":"injectables/MockUserService.html","title":"injectable - MockUserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user/user-service-mock.ts\n        \n\n\n            \n                Extends\n            \n            \n                        UserService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listUsers\n                            \n                            \n                                user\n                            \n                            \n                                userURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserForAdmin\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Public\n                                deleteUser\n                            \n                            \n                                    Public\n                                editUser\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                getUserForAdmin\n                            \n                            \n                                    Public\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-service-mock.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \neditUser(id, user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-service-mock.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-service-mock.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserForAdmin\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserForAdmin(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-service-mock.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-service-mock.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id)\n                \n            \n\n\n            \n                \n                    Inherited from         UserService\n\n                \n            \n            \n                \n                        Defined in         UserService:74\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición DELETE para eliminar un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(id, user)\n                \n            \n\n\n            \n                \n                    Inherited from         UserService\n\n                \n            \n            \n                \n                        Defined in         UserService:65\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición PUT para modificar la información de un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto usuario con la información actualizada.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id)\n                \n            \n\n\n            \n                \n                    Inherited from         UserService\n\n                \n            \n            \n                \n                        Defined in         UserService:55\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserForAdmin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserForAdmin(id)\n                \n            \n\n\n            \n                \n                    Inherited from         UserService\n\n                \n            \n            \n                \n                        Defined in         UserService:46\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Inherited from         UserService\n\n                \n            \n            \n                \n                        Defined in         UserService:37\n\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de usuarios registrados en el sistema.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 1,\n      dateBirthday: new Date('1998-12-18T00:00:00.000+00:00'),\n      email: 'admin@email.com',\n      userName: 'Admin',\n      roles: ['ROLE_USER', 'ROLE_ADMIN'],\n    },\n    {\n      id: 2,\n      dateBirthday: new Date('1998-12-18T00:00:00.000+00:00'),\n      email: 'alba@email.com',\n      userName: 'Alba',\n      roles: ['ROLE_USER'],\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user/user-service-mock.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: 1,\n    dateBirthday: new Date('1998-12-18T00:00:00.000+00:00'),\n    email: 'alba@email.com',\n    userName: 'Admin',\n    roles: ['ROLE_USER', 'ROLE_ADMIN'],\n    interest:\n      [\n        {\n          interestID: 2,\n          nameInterest: 'Playas',\n          priority: 0\n        },\n        {\n          interestID: 155,\n          nameInterest: 'Prueba',\n          priority: 0\n        }\n      ]\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user/user-service-mock.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/user'\n                        \n                    \n                            \n                                \n                                    Inherited from         UserService\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserService:25\n\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {UserService} from './user.service';\nimport {Observable, of} from 'rxjs';\nimport {User} from '../../models/user';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class MockUserService extends UserService {\n\n  listUsers = [\n    {\n      id: 1,\n      dateBirthday: new Date('1998-12-18T00:00:00.000+00:00'),\n      email: 'admin@email.com',\n      userName: 'Admin',\n      roles: ['ROLE_USER', 'ROLE_ADMIN'],\n    },\n    {\n      id: 2,\n      dateBirthday: new Date('1998-12-18T00:00:00.000+00:00'),\n      email: 'alba@email.com',\n      userName: 'Alba',\n      roles: ['ROLE_USER'],\n    }\n  ];\n\n  user = {\n    id: 1,\n    dateBirthday: new Date('1998-12-18T00:00:00.000+00:00'),\n    email: 'alba@email.com',\n    userName: 'Admin',\n    roles: ['ROLE_USER', 'ROLE_ADMIN'],\n    interest:\n      [\n        {\n          interestID: 2,\n          nameInterest: 'Playas',\n          priority: 0\n        },\n        {\n          interestID: 155,\n          nameInterest: 'Prueba',\n          priority: 0\n        }\n      ]\n  }\n\n  getUsers(): Observable {\n    return of(this.listUsers);\n  }\n\n  deleteUser(id): Observable {\n    this.listUsers = this.listUsers.filter(us => us.id !== id);\n    return of({\n      mensaje: 'El usuario se ha eliminado'\n    });\n  }\n\n  getUser(id): Observable {\n    return of(this.user);\n  }\n\n  editUser(id, user): Observable {\n    this.user.dateBirthday = user.dateBirthday;\n    this.user.interest = user.interest;\n    this.user.roles = user.roles;\n    this.user.userName = user.userName;\n    return of({\n      mensaje: 'El usuario ha sido modificado'\n    });\n  }\n\n  getUserForAdmin(id): Observable {\n    return of(this.user);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/message/notification.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearService\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/message/notification.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearService\n                        \n                        \n                    \n                \n            \n            \n                \nclearService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message/notification.service.ts:36\n                \n            \n\n\n            \n                \n                    Método que vacía el array de notificaciones\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            success\n                        \n                        \n                    \n                \n            \n            \n                \nsuccess(detail: string, summary?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message/notification.service.ts:27\n                \n            \n\n\n            \n                \n                    Método para incluir una nueva notificación en el array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    detail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        detalle de la notificación\n\n                                    \n                                \n                                \n                                    summary\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        mensaje de la notificación\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Message[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/message/notification.service.ts:18\n                            \n                        \n\n                \n                    \n                        Array de objetos Message para almacenar las notificaciones\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Message} from 'primeng/api';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clase NotificationService\n * \n * Clase que se encarga de almacenar notificaciones que serán mostradas al usuario.\n */\nexport class NotificationService {\n\n  /**\n   * Array de objetos Message para almacenar las notificaciones\n   */\n  message: Message[] = [];\n\n  constructor() { }\n\n  /**\n   * Método para incluir una nueva notificación en el array\n   * @param detail detalle de la notificación\n   * @param summary mensaje de la notificación\n   */\n  success(detail: string, summary?: string): void {\n    this.message.push({\n      severity: 'success', summary: summary, detail: detail\n    });\n  }\n\n  /**\n   * Método que vacía el array de notificaciones\n   */\n  clearService(): void {\n    this.message = [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecommendationComponent.html":{"url":"components/RecommendationComponent.html","title":"component - RecommendationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecommendationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/recommendation/recommendation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recommendation\n            \n\n            \n                styleUrls\n                ./recommendation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recommendation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                            \n                                interestList\n                            \n                            \n                                numberRecommendations\n                            \n                            \n                                typeselected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(interestService: InterestService, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/recommendation/recommendation.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        interestService\n                                                  \n                                                        \n                                                                        InterestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recommendation/recommendation.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            info\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation/recommendation.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interestList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Interest[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation/recommendation.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberRecommendations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation/recommendation.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeselected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation/recommendation.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {InterestService} from '../services/interest/interest.service';\nimport {Interest} from '../models/interest';\nimport {LocalStorageService} from '../services/local-storage/local-storage.service';\n\n@Component({\n  selector: 'app-recommendation',\n  templateUrl: './recommendation.component.html',\n  styleUrls: ['./recommendation.component.scss']\n})\nexport class RecommendationComponent implements OnInit {\n\n  info: any = {};\n  numberRecommendations: number = 0;\n  typeselected: any[];\n  interestList: Interest[] = [];\n\n  constructor(private interestService: InterestService, private localStorageService: LocalStorageService) { }\n\n  ngOnInit() {\n    this.info = {\n      token: this.localStorageService.getToken(),\n      nombreUsuario: this.localStorageService.getEmailUser(),\n      authorities: this.localStorageService.getRolesUser()\n    };\n    this.interestService.getInterests().subscribe(\n      interestList => {\n        this.interestList = interestList;\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Tu nombre de usuario: {{ info.nombreUsuario}}\n      Este es el token: {{ info.token}}\n      Tus privilegios: {{ info.authorities}}\n    \n\n\n  \n  \n    \n      No has iniciado sesión\n    \n  -->\n\n  {{ 'create_recommendation' | translate }}\n  \n    \n      \n        {{ 'question_number_recommendation' | translate }}\n      \n      \n        \n      \n      \n        {{ 'question_type_activities_recommendation' | translate }}\n      \n      \n        \n          \n        \n      \n    \n  \n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./recommendation.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.recommendation-panel{\n  @include custom-panel;\n  width: 100%;\n  min-height: 380px;\n  min-width: 800px;\n\n  h1 {\n    text-align: center;\n  }\n\n  ::ng-deep .p-card, .button_create_recommendation {\n    width: 60%;\n    margin-left: auto;\n    margin-right: auto;\n  }\n}\n\n.question_recommendations_container{\n  display: flex;\n  flex-direction:column;\n\n  .question_container{\n    margin: 5px;\n  }\n}\n\n\n\n.button_create_recommendation {\n  text-align: right;\n  margin-top: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Tu nombre de usuario: {{ info.nombreUsuario}}      Este es el token: {{ info.token}}      Tus privilegios: {{ info.authorities}}                  No has iniciado sesión      -->  {{ \\'create_recommendation\\' | translate }}                    {{ \\'question_number_recommendation\\' | translate }}                                        {{ \\'question_type_activities_recommendation\\' | translate }}                                                          '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecommendationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecommendationMapComponent.html":{"url":"components/RecommendationMapComponent.html","title":"component - RecommendationMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecommendationMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/recommendation-map/recommendation-map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recommendation-map\n            \n\n            \n                styleUrls\n                ./recommendation-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recommendation-map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activitiesRecommendation\n                            \n                            \n                                activitiesSelected\n                            \n                            \n                                activitySelectedToRate\n                            \n                            \n                                displayPanelRating\n                            \n                            \n                                formToRatingActivity\n                            \n                            \n                                map\n                            \n                            \n                                markerList\n                            \n                            \n                                userLogged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeMap\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openPanelToRating\n                            \n                            \n                                photoURL\n                            \n                            \n                                removeMarkerFromMap\n                            \n                            \n                                sendRatingActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activitiesService: ActivityService, fb: FormBuilder, interestService: InterestService, cityService: CityService, sanitizer: DomSanitizer, filterService: FilterService, localStorageService: LocalStorageService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/recommendation-map/recommendation-map.component.ts:59\n                            \n                        \n\n                \n                    \n                            Constructor de la clase RecommendationMapComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activitiesService\n                                                  \n                                                        \n                                                                        ActivityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de actividades.\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Clase que permite crear objetos de la clase FormGroup y FormControl.\n\n                                                        \n                                                \n                                                \n                                                        interestService\n                                                  \n                                                        \n                                                                        InterestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de intereses.\n\n                                                        \n                                                \n                                                \n                                                        cityService\n                                                  \n                                                        \n                                                                        CityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de localidades.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n\n                                                        \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                    FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite acceder a la API para registrar filtros personalizados.\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de usuarios.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeMap\n                        \n                        \n                    \n                \n            \n            \n                \nchangeMap(event, activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/recommendation-map/recommendation-map.component.ts:162\n                \n            \n\n\n            \n                \n                    Método que modifica la aparición de los marcadores en el mapa según la selección del usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Evento que se produce cuando el usuario hace click en alguna casilla de verificación.\n\n                                    \n                                \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La actividad cuyo marcador se quiere mostrar o eliminar del mapa.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recommendation-map/recommendation-map.component.ts:101\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n  \n      Creará el mapa con los correspondientes marcadores.\n      Cargará las actividades recomendadas al usuario autenticado.\n  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openPanelToRating\n                        \n                        \n                    \n                \n            \n            \n                \nopenPanelToRating(activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/recommendation-map/recommendation-map.component.ts:194\n                \n            \n\n\n            \n                \n                    Método que abre un diálogo para que el usuario autenticado pueda valorar una actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Actividad a valorar.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            photoURL\n                        \n                        \n                    \n                \n            \n            \n                \nphotoURL(activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/recommendation-map/recommendation-map.component.ts:252\n                \n            \n\n\n            \n                \n                    Método que sanea la URL de la imagen asociada a la actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Actividad cuya url de la imagen asociada se quiere sanear.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMarkerFromMap\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMarkerFromMap(activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/recommendation-map/recommendation-map.component.ts:233\n                \n            \n\n\n            \n                \n                    Método que elimina un marcador del mapa.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Actividad cuyo marcador asociado se quiere eliminar del mapa.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendRatingActivity\n                        \n                        \n                    \n                \n            \n            \n                \nsendRatingActivity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/recommendation-map/recommendation-map.component.ts:206\n                \n            \n\n\n            \n                \n                    Método que envía una valoración de una actividad recomendada.\nUna vez enviado, también se encargará de cargar las nuevas recomendaciones y de modificar los marcadores del mapa.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activitiesRecommendation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActivityRecommended[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation-map/recommendation-map.component.ts:31\n                            \n                        \n\n                \n                    \n                        Almacena las actividades recomendadas.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activitiesSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation-map/recommendation-map.component.ts:35\n                            \n                        \n\n                \n                    \n                        Almacena la lista de actividades que se muestran en el mapa.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activitySelectedToRate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivityRecommended\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation-map/recommendation-map.component.ts:55\n                            \n                        \n\n                \n                    \n                        Almacena la actividad que el usuario quiere valorar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayPanelRating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation-map/recommendation-map.component.ts:47\n                            \n                        \n\n                \n                    \n                        Indica si el usuario ha seleccionado alguna actividad para valorar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formToRatingActivity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation-map/recommendation-map.component.ts:51\n                            \n                        \n\n                \n                    \n                        Formulario para valorar una actividad.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/recommendation-map/recommendation-map.component.ts:39\n                            \n                        \n\n                \n                    \n                        Mapa\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markerList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation-map/recommendation-map.component.ts:43\n                            \n                        \n\n                \n                    \n                        Array que almacena la lista de marcadores del mapa.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userLogged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/recommendation-map/recommendation-map.component.ts:59\n                            \n                        \n\n                \n                    \n                        Almacena el usuario autenticado\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ActivityService} from '../services/activity/activity.service';\nimport * as L from 'leaflet';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {InterestService} from '../services/interest/interest.service';\nimport {FilterService} from 'primeng/api';\nimport {CityService} from '../services/city/city.service';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {UserService} from '../services/user/user.service';\nimport {map, mergeMap} from 'rxjs/operators';\nimport {forkJoin} from 'rxjs';\nimport {LocalStorageService} from '../services/local-storage/local-storage.service';\nimport {ActivityRecommended} from '../models/activity';\nimport {User} from '../models/user';\n\n@Component({\n  selector: 'app-recommendation-map',\n  templateUrl: './recommendation-map.component.html',\n  styleUrls: ['./recommendation-map.component.scss']\n})\n/**\n * Clase RecommendationMapComponent\n *\n * Clase que obtiene las actividades recomendadas al usuario autenticado.\n */\nexport class RecommendationMapComponent implements OnInit {\n\n  /**\n   * Almacena las actividades recomendadas.\n   */\n  activitiesRecommendation: ActivityRecommended[];\n  /**\n   * Almacena la lista de actividades que se muestran en el mapa.\n   */\n  activitiesSelected: string[] = [];\n  /**\n   * Mapa\n   */\n  map;\n  /**\n   * Array que almacena la lista de marcadores del mapa.\n   */\n  markerList = [];\n  /**\n   * Indica si el usuario ha seleccionado alguna actividad para valorar.\n   */\n  displayPanelRating: boolean = false;\n  /**\n   * Formulario para valorar una actividad.\n   */\n  formToRatingActivity: FormGroup;\n  /**\n   * Almacena la actividad que el usuario quiere valorar.\n   */\n  activitySelectedToRate: ActivityRecommended;\n  /**\n   * Almacena el usuario autenticado\n   */\n  userLogged: User;\n\n  /**\n   * Constructor de la clase RecommendationMapComponent\n   * @param activitiesService\n   * Servicio de actividades.\n   * @param fb\n   * Clase que permite crear objetos de la clase FormGroup y FormControl.\n   * @param interestService\n   * Servicio de intereses.\n   * @param cityService\n   * Servicio de localidades.\n   * @param sanitizer\n   * Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n   * @param filterService\n   * Servicio propocionado por la librería PrimeNG que permite acceder a la API para registrar filtros personalizados.\n   * @param localStorageService\n   * Servicio que consta de métodos para acceder al objeto LocalStorage del navegador.\n   * @param userService\n     Servicio de usuarios.\n   */\n  constructor(\n    private activitiesService: ActivityService,\n    private fb: FormBuilder,\n    private interestService: InterestService,\n    private cityService: CityService,\n    private sanitizer: DomSanitizer,\n    private filterService: FilterService,\n    private localStorageService: LocalStorageService,\n    private userService: UserService) {\n    this.formToRatingActivity = this.fb.group({\n      rating: ['', Validators.required],\n    });\n  }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   *  \n   *      Creará el mapa con los correspondientes marcadores.\n   *      Cargará las actividades recomendadas al usuario autenticado.\n   *  \n   */\n  ngOnInit(): void {\n\n    this.map = L.map('mapActivityRecommendation', {\n      center: [ 43.333333, -5.826187 ],\n      zoom: 8.75,\n      zoomSnap: 0.25\n    });\n\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 19,\n      attribution: '&copy; OpenStreetMap'\n    });\n\n    tiles.addTo(this.map);\n\n    this.userService.getUsers().pipe(\n      map (data => data.filter(p => p.email === this.localStorageService.getEmailUser())),\n      mergeMap ( user => {\n        this.userLogged = user[0];\n        return forkJoin([this.activitiesService.getRecommendedActivities(user[0].id)]).pipe();\n      })\n    ).subscribe(\n      ([response1]) => {\n        this.activitiesRecommendation = response1;\n\n        this.activitiesRecommendation.forEach(activity => {\n          this.activitiesSelected.push(activity.name);\n\n          var greenIcon = L.icon({\n            iconUrl: '../../assets/images/landscape.png',\n            iconSize: [35, 35], // size of the icon\n          });\n\n          var photoImg = '';\n\n          const popupContent =\n            photoImg +\n            '' +\n            '' +\n            activity.name  +\n            '' + ' ' + activity.address + '' + ' ' + activity.interest + ''  + '';\n\n          var marker = L.marker([activity.latitude, activity.longitude], {icon: greenIcon}).addTo(this.map).bindPopup(popupContent, {\n            maxWidth : 250\n          });\n          this.markerList.push(marker);\n        });\n\n        setTimeout(() => {\n          this.map.invalidateSize();\n        }, 300);\n    });\n  }\n\n  /**\n   * Método que modifica la aparición de los marcadores en el mapa según la selección del usuario.\n   * @param event\n   * Evento que se produce cuando el usuario hace click en alguna casilla de verificación.\n   * @param activity\n   * La actividad cuyo marcador se quiere mostrar o eliminar del mapa.\n   */\n  changeMap(event, activity){\n    if (event.checked){\n      var greenIcon = L.icon({\n        iconUrl: '../../assets/images/landscape.png',\n        iconSize: [35, 35], // size of the icon\n      });\n\n      var photoImg = '';\n\n      const popupContent =\n        photoImg +\n        '' +\n        '' +\n        activity.name  +\n        '' + ' ' + activity.address + '' + ' ' + activity.interest + ''  + '';\n\n\n      var marker = L.marker([activity.latitude, activity.longitude], {icon: greenIcon}).addTo(this.map).bindPopup(popupContent, {\n        maxWidth : 250\n      });\n      this.markerList.push(marker);\n    }\n    else{\n      this.removeMarkerFromMap(activity);\n    }\n  }\n\n  /**\n   * Método que abre un diálogo para que el usuario autenticado pueda valorar una actividad.\n   * @param activity\n   * Actividad a valorar.\n   */\n  openPanelToRating(activity){\n    this.formToRatingActivity.patchValue({\n      rating: []\n    });\n    this.activitySelectedToRate = activity;\n    this.displayPanelRating = true;\n  }\n\n  /**\n   * Método que envía una valoración de una actividad recomendada.\n   * Una vez enviado, también se encargará de cargar las nuevas recomendaciones y de modificar los marcadores del mapa.\n   */\n  sendRatingActivity(){\n    var rateActivity = {\n      activity_id : this.activitySelectedToRate.id,\n      email_user: this.localStorageService.getEmailUser(),\n      rate: this.formToRatingActivity.get('rating').value\n    }\n\n    this.activitiesService.postRateActivity(rateActivity).pipe(\n      mergeMap(\n        data => {\n          this.displayPanelRating = false;\n          this.removeMarkerFromMap(this.activitySelectedToRate);\n          return this.activitiesService.getRecommendedActivities(this.userLogged.id).pipe();\n        }\n      )\n    ).subscribe(\n      data => {\n        this.activitiesRecommendation = data;\n      }\n    );\n  }\n\n  /**\n   * Método que elimina un marcador del mapa.\n   * @param activity\n   * Actividad cuyo marcador asociado se quiere eliminar del mapa.\n   */\n  removeMarkerFromMap(activity){\n    var f = this.markerList.filter((act) => {\n      return act._latlng.lat === activity.latitude && act._latlng.lng === activity.longitude;\n    });\n    // NOTE: Puede haber un marcador con la misma longitude y latitude. Cuidado\n    if (f.length !== 0){\n      const index = this.markerList.indexOf(f[0]);\n      if (index > -1) {\n        this.markerList.splice(index, 1);\n      }\n      this.map.removeLayer(f[0]);\n    }\n  }\n\n  /**\n   * Método que sanea la URL de la imagen asociada a la actividad.\n   * @param activity\n   * Actividad cuya url de la imagen asociada se quiere sanear.\n   */\n  photoURL(activity){\n    var url = 'data:' + activity.metadataImage.mimeType + ';base64,' + activity.metadataImage.data;\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n            \n            \n          \n        \n      \n      \n        \n          \n            \n            \n            \n              {{activity.name}}\n              {{activity.description}}\n              \n                 {{activity.average}}/5\n              \n              \n            \n          \n        \n      \n    \n  \n  \n    \n  \n\n  \n    \n      {{ 'message_rate_activity' | translate }}\n      \n      {{ 'submessage_rate_activity' | translate }}\n    \n    \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./recommendation-map.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.recommendation-map-panel{\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n\n  display: flex;\n}\n\n.table_recommendation, .map_recommendation{\n  width: 50%;\n}\n\n.activity-recommendation-list-item{\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n  width: 100%;\n\n  .checkBoxActivityRecommendation{\n    margin: 5px;\n  }\n\n  img {\n    width: 150px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n    margin-right: 2rem;\n  }\n\n  .activity-recommendation-list-detail {\n    flex: 1 1 0;\n  }\n\n  .activity-name {\n    font-size: 1.5rem;\n    font-weight: 700;\n  }\n\n  .activity-description {\n    margin: 0 0 1rem 0;\n  }\n\n  .activity-average{\n    .fa-star{\n      color: rgb(255, 56, 92);\n    }\n\n    .average{\n      font-weight: 600;\n    }\n  }\n}\n\n#mapActivityRecommendation{\n  width: 100%;\n  height: 100%;\n}\n\n.rateActivity{\n  text-align: center;\n}\n\n.messageRateActivity{\n  font-weight: 700;\n}\n\n:host ::ng-deep .p-multiselect {\n  min-width: 12rem;\n}\n\n.filter_container{\n  display: flex;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                        {{activity.name}}              {{activity.description}}                               {{activity.average}}/5                                                                                          {{ \\'message_rate_activity\\' | translate }}            {{ \\'submessage_rate_activity\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecommendationMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rol.html":{"url":"classes/Rol.html","title":"class - Rol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/rol.ts\n        \n\n            \n                Description\n            \n            \n                Clase Rol\nClase que define el tipo de entidad Rol.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                rolName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/rol.ts:10\n                            \n                        \n\n                \n                    \n                        Identificador del tipo de rol.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/rol.ts:14\n                            \n                        \n\n                \n                    \n                        Nombre del tipo de rol\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Rol {\n  /**\n   * Identificador del tipo de rol.\n   */\n  id: number;\n  /**\n   * Nombre del tipo de rol\n   */\n  rolName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolService.html":{"url":"injectables/RolService.html","title":"injectable - RolService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/rol/rol.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rolURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/rol/rol.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor de la clase RolService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                objeto que permite hacer peticiones a la API y obtener resultados de la misma\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/rol/rol.service.ts:37\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de los tipos de roles.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/rol'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/rol/rol.service.ts:25\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Interest} from '../../models/interest';\nimport {Rol} from '../../models/rol';\n\n/**\n * Encabezado para las peticiones y respuestas HTTP\n */\nconst cabecera = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clase RolService\n * \n * Clase que se encarga de realizar peticiones a la API relacionadas con los tipos de roles.\n */\nexport class RolService {\n\n  /**\n   * Almacena la url del endpoint\n   */\n  rolURL = 'http://localhost:8090/api/rol';\n\n  /**\n   * Constructor de la clase RolService\n   * @param httpClient objeto que permite hacer peticiones a la API y obtener resultados de la misma\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Método que realiza una petición GET para obtener la lista de los tipos de roles.\n   * @returns \n   */\n  public getRoles(): Observable {\n    return this.httpClient.get(this.rolURL + '/list', cabecera);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuardService.html":{"url":"guards/RoleGuardService.html","title":"guard - RoleGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/RoleGuard/role-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorageService: LocalStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/RoleGuard/role-guard.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/RoleGuard/role-guard.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {LocalStorageService} from '../../services/local-storage/local-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuardService implements CanActivate{\n\n  rol: string;\n\n  constructor(private localStorageService: LocalStorageService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const expectedRol = route.data.expectedRol;\n    const roles = this.localStorageService.getRolesUser();\n    if (roles.includes(\"ROLE_ADMIN\")){\n      this.rol = 'admin';\n    }\n    else{\n      this.rol = 'user';\n    }\n    if (!this.localStorageService.getToken() || expectedRol.indexOf(this.rol) === -1 ){\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpComponent.html":{"url":"components/SignUpComponent.html","title":"component - SignUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sign-up/sign-up.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up\n            \n\n            \n                styleUrls\n                ./sign-up.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sign-up.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                interestArray\n                            \n                            \n                                isContinueFail\n                            \n                            \n                                isRegisterFail\n                            \n                            \n                                message\n                            \n                            \n                                openSecondForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                continueSecondPartForm\n                            \n                            \n                                loadInterest\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                returnFirstPartForm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    interest\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, interestService: InterestService, authService: AuthService, router: Router, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sign-up/sign-up.component.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor de la clase EditActivitiesComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Clase que permite crear objetos de la clase FormGroup y FormControl.\n\n                                                        \n                                                \n                                                \n                                                        interestService\n                                                  \n                                                        \n                                                                        InterestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de intereses.\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite la navegación entre vistas\n\n                                                        \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite almacenar notificaciones.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            continueSecondPartForm\n                        \n                        \n                    \n                \n            \n            \n                \ncontinueSecondPartForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/sign-up/sign-up.component.ts:157\n                \n            \n\n\n            \n                \n                    Método que muestra al usuario el segundo bloque del formulario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadInterest\n                        \n                        \n                    \n                \n            \n            \n                \nloadInterest()\n                \n            \n\n\n            \n                \n                    Defined in src/app/sign-up/sign-up.component.ts:109\n                \n            \n\n\n            \n                \n                    Método que obtiene los intereses de la API y los almacena.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/sign-up/sign-up.component.ts:81\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n\n      Inicializará el formulario\n      Cargará los dintintos intereses.\n  \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/sign-up/sign-up.component.ts:129\n                \n            \n\n\n            \n                \n                    Método que crea un objeto user a partir de los datos del formulario y se lo envía a la API.\nUna vez enviado, también será el encargado de redirigir al usuario al componente Login y de mostrar un mensaje al usuario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            returnFirstPartForm\n                        \n                        \n                    \n                \n            \n            \n                \nreturnFirstPartForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/sign-up/sign-up.component.ts:171\n                \n            \n\n\n            \n                \n                    Método que permite al usuario regresar al primer bloque del formulario.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.component.ts:29\n                            \n                        \n\n                \n                    \n                        Formulario para registrar a un usuario.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interestArray\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.component.ts:33\n                            \n                        \n\n                \n                    \n                        Array de objetos Interest para almacenar los distintos intereses.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isContinueFail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.component.ts:45\n                            \n                        \n\n                \n                    \n                        Indica que en la primera parte del formulario hay algún error e impide visualizar el segundo bloque.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRegisterFail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.component.ts:37\n                            \n                        \n\n                \n                    \n                        Indica si el registro falló.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.component.ts:49\n                            \n                        \n\n                \n                    \n                        Almacena el mensaje de error devuelto por la API.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSecondForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.component.ts:41\n                            \n                        \n\n                \n                    \n                        Indica que la primera parte del formulario es correcta y visualiza el segundo bloque.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        interest\n                    \n                \n\n                \n                    \n                        getinterest()\n                    \n                \n                            \n                                \n                                    Defined in src/app/sign-up/sign-up.component.ts:102\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {InterestService} from '../services/interest/interest.service';\nimport {AuthService} from '../services/auth/auth.service';\nimport {validadorPasswordSame} from '../validators/validatorPasswordSame.directive';\nimport {validadorAgeGreaterThan} from '../validators/validatorGreaterThan.directive';\nimport {Router} from '@angular/router';\nimport {NotificationService} from '../services/message/notification.service';\nimport {validadorPriorityNumberOfInterest} from '../validators/validatorPriorityNumber.directive';\n\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\n/**\n * Clase SignUpComponent\n *\n * Clase que permite el registro de un usuario.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class SignUpComponent implements OnInit {\n  /**\n   * Formulario para registrar a un usuario.\n   */\n  formGroup: FormGroup;\n  /**\n   * Array de objetos Interest para almacenar los distintos intereses.\n   */\n  interestArray;\n  /**\n   * Indica si el registro falló.\n   */\n  isRegisterFail = false;\n  /**\n   * Indica que la primera parte del formulario es correcta y visualiza el segundo bloque.\n   */\n  openSecondForm = false;\n  /**\n   * Indica que en la primera parte del formulario hay algún error e impide visualizar el segundo bloque.\n   */\n  isContinueFail = false;\n  /**\n   * Almacena el mensaje de error devuelto por la API.\n   */\n  message;\n\n  /**\n   * Constructor de la clase EditActivitiesComponent\n   *\n   * @param formBuilder\n   * Clase que permite crear objetos de la clase FormGroup y FormControl.\n   * @param interestService\n   * Servicio de intereses.\n   * @param authService\n   * Servicio de autenticación.\n   * @param router\n   * Servicio que permite la navegación entre vistas\n   * @param notificationService\n   * Servicio que permite almacenar notificaciones.\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private interestService: InterestService,\n    private authService: AuthService,\n    private router: Router,\n    private notificationService: NotificationService\n  ) {\n  }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   * \n   *      Inicializará el formulario\n   *      Cargará los dintintos intereses.\n   *  \n   */\n  ngOnInit(): void {\n    const minPassLength = 7;\n    this.formGroup = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      dateBirthday: ['', [Validators.required, validadorAgeGreaterThan()]],\n      password: ['', [Validators.required, Validators.minLength(minPassLength)]],\n      repeatPassword: ['', [Validators.required, Validators.minLength(minPassLength)]],\n      interest: new FormArray([])\n    },\n      {\n        validators: validadorPasswordSame()\n      });\n    this.loadInterest();\n\n    // Podría sobrar si actualizo a Angular 11 (no sé si lo necesito)\n    this.formGroup.valueChanges.subscribe(e => {\n      this.formGroup.setValue(e, {emitEvent: false});\n    });\n  }\n\n  get interest(): FormArray {\n    return this.formGroup.get('interest') as FormArray;\n  }\n\n  /**\n   * Método que obtiene los intereses de la API y los almacena.\n   */\n  loadInterest() {\n    this.interestService.getInterests().subscribe(data => {\n        this.interestArray = data;\n        this.interestArray.forEach(interest => {\n          const control = new FormGroup({\n            nameInterest: new FormControl(interest.nameInterest, Validators.required),\n            priority: new FormControl(0, [Validators.required, validadorPriorityNumberOfInterest()])\n          });\n          this.interest.push(control);\n        });\n      },\n      err => {\n        console.log(err);\n      });\n  }\n\n  /**\n   * Método que crea un objeto user a partir de los datos del formulario y se lo envía a la API.\n   * Una vez enviado, también será el encargado de redirigir al usuario al componente Login y de mostrar un mensaje al usuario.\n   */\n  onSubmit() {\n    var dateBirthday = new Date(this.formGroup.get('dateBirthday').value);\n    const offset = dateBirthday.getTimezoneOffset()\n    dateBirthday = new Date(dateBirthday.getTime() - (offset * 60 * 1000))\n    const user = {\n      userName: this.formGroup.get('name').value,\n      email: this.formGroup.get('email').value,\n      dateBirthday: dateBirthday.toISOString().split('T')[0],\n      password: this.formGroup.get('password').value,\n      passwordConfirm: this.formGroup.get('repeatPassword').value,\n      roles: ['user'],\n      interest: this.interest.value\n    };\n    this.authService.signUp(user).subscribe(\n      data => {\n        this.isRegisterFail = false;\n        this.notificationService.success(\"sign_up_successful_message_detail\", \"sign_up_successful_message_summary\");\n        this.router.navigate(['login']);\n      },\n      (err) => {\n        this.isRegisterFail = true;\n        this.message = err.error.mensaje;\n      });\n  }\n\n  /**\n   * Método que muestra al usuario el segundo bloque del formulario.\n   */\n  continueSecondPartForm(){\n    if (this.formGroup.get('name').valid && this.formGroup.get('email').valid && this.formGroup.get('dateBirthday').valid &&\n      this.formGroup.get('password').valid && this.formGroup.get('repeatPassword').valid){\n      this.openSecondForm = true;\n      this.isContinueFail = false;\n    }\n    else{\n      this.isContinueFail = true;\n    }\n  }\n\n  /**\n   * Método que permite al usuario regresar al primer bloque del formulario.\n   */\n  returnFirstPartForm(){\n    this.openSecondForm = false;\n  }\n}\n\n    \n\n    \n        \n\n  {{ 'sign_up' | translate }}\n  \n    \n      \n        \n          {{ 'username' | translate }}*:\n          \n            \n            \n          \n          \n            \n          \n        \n        \n          {{ 'date_birth' | translate }}*:\n          \n            \n            \n          \n          \n            \n            \n          \n\n        \n        \n          Email*:\n          \n            \n            \n          \n          \n            \n          \n        \n        \n          {{ 'password' | translate }}*:\n          \n            \n            \n           \n          \n            \n          \n        \n\n        \n          {{ 'repeat_password' | translate }}*:\n          \n            \n            \n          \n          \n            \n          \n        \n\n        \n          \n          \n        \n      \n    \n\n    \n      \n        {{ 'message_valuation_one' | translate }}\n        {{ 'message_valuation_two' | translate }}\n      \n      \n        \n          \n            {{interestArray[i].nameInterest}}\n            \n              \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                -->\n                \n                \n                  0\n                \n\n                \n                \n                  1\n                \n\n                \n                \n                  2\n                \n\n                \n                \n                  3\n                \n\n                \n                \n                  4\n                \n\n                \n                \n                  5\n                \n\n                \n                \n                  6\n                \n\n                \n                \n                  7\n                \n\n                \n                \n                  8\n                \n\n                \n                \n                  9\n                \n\n                \n                \n                  10\n                \n              \n            \n          \n        \n        \n        \n          \n          \n        \n      \n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./sign-up.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.signup-panel{\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n\n  h1{\n    text-align:center;\n  }\n}\n\n.button_signup{\n  float: right;\n}\n\n.sign_up_btns{\n\n}\n\n.button_return, .button_signup{\n  width: auto;\n}\n\n.form-signup-container{\n  width: 60%;\n}\n\n.form-signup-container, .form-signup-second-container{\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.form-signup-second-container{\n  width: 70%;\n\n  .form-check-label{\n    margin: 10px;\n  }\n}\n\n.message_error_sign_container{\n  padding-top: 5px;\n}\n\n.input-birth{\n  width: 100%;\n}\n\n.message_valuation_container{\n  text-align: center;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'sign_up\\' | translate }}                              {{ \\'username\\' | translate }}*:                                                                                                      {{ \\'date_birth\\' | translate }}*:                                                                                                                  Email*:                                                                                                      {{ \\'password\\' | translate }}*:                                                                                                       {{ \\'repeat_password\\' | translate }}*:                                                                                                                                                    {{ \\'message_valuation_one\\' | translate }}        {{ \\'message_valuation_two\\' | translate }}                                          {{interestArray[i].nameInterest}}n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableActivitiesComponent.html":{"url":"components/TableActivitiesComponent.html","title":"component - TableActivitiesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableActivitiesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/table-activities/table-activities.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table-activities\n            \n\n            \n                styleUrls\n                ./table-activities.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table-activities.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activities\n                            \n                            \n                                cols\n                            \n                            \n                                ref\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirm\n                            \n                            \n                                editActivity\n                            \n                            \n                                loadActivities\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openNew\n                            \n                            \n                                photoURL\n                            \n                            \n                                seeMoreInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activityService: ActivityService, confirmationService: ConfirmationService, dialogService: DialogService, translateService: TranslateService, messageService: MessageService, router: Router, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/table-activities/table-activities.component.ts:37\n                            \n                        \n\n                \n                    \n                            Constructor de la clase EditActivitiesComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activityService\n                                                  \n                                                        \n                                                                        ActivityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de actividades.\n\n                                                        \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite mostrar un diálogo de confirmación.\n\n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite mostrar un diálogo.\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que permite la navegación entre vistas\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirm\n                        \n                        \n                    \n                \n            \n            \n                \nconfirm(activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/table-activities/table-activities.component.ts:103\n                \n            \n\n\n            \n                \n                    Método que elimina una actividad del sistema a través de la API.\nUna vez enviado, también será el encargado de mostrar un mensaje al usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Actividad que se desea eliminar.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editActivity\n                        \n                        \n                    \n                \n            \n            \n                \neditActivity(activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/table-activities/table-activities.component.ts:167\n                \n            \n\n\n            \n                \n                    Método que redirige al usuario al componente EditActivities.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadActivities\n                        \n                        \n                    \n                \n            \n            \n                \nloadActivities()\n                \n            \n\n\n            \n                \n                    Defined in src/app/table-activities/table-activities.component.ts:87\n                \n            \n\n\n            \n                \n                    Método que obtiene las actividades de la API y las almacena.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/table-activities/table-activities.component.ts:158\n                \n            \n\n\n            \n                \n                    Método que se ejecuta al destruir un componente.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/table-activities/table-activities.component.ts:74\n                \n            \n\n\n            \n                \n                    Método que permite inicializar los datos del componente.\n  \n      Inicializará los objetos que representan una columna de la tabla.\n      Cargará las actividades.\n  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openNew\n                        \n                        \n                    \n                \n            \n            \n                \nopenNew()\n                \n            \n\n\n            \n                \n                    Defined in src/app/table-activities/table-activities.component.ts:131\n                \n            \n\n\n            \n                \n                    Método que redirige al usuario al componente AddActivity.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            photoURL\n                        \n                        \n                    \n                \n            \n            \n                \nphotoURL(activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/table-activities/table-activities.component.ts:176\n                \n            \n\n\n            \n                \n                    Método que sanea la URL de la imagen asociada a la actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Actividad cuya url de la imagen asociada se quiere sanear.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            seeMoreInfo\n                        \n                        \n                    \n                \n            \n            \n                \nseeMoreInfo(activity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/table-activities/table-activities.component.ts:140\n                \n            \n\n\n            \n                \n                    Método que abre el componente InformationActivities para mostrar información adicional de la actividad.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activity\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Actividad de la que se quiere obtener información adicional.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activities\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/table-activities/table-activities.component.ts:33\n                            \n                        \n\n                \n                    \n                        Almacena las actividades.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cols\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/table-activities/table-activities.component.ts:29\n                            \n                        \n\n                \n                    \n                        Array de objetos que representan las columnas del componente tabla.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ref\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DynamicDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/table-activities/table-activities.component.ts:37\n                            \n                        \n\n                \n                    \n                        Servicio propocionado por la librería PrimeNG que permite pasar información a los componentes dinámicos.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ActivityService} from '../services/activity/activity.service';\nimport {ConfirmationService, MessageService} from 'primeng/api';\nimport {DialogService, DynamicDialogRef} from 'primeng/dynamicdialog';\nimport {InformationActivitiesComponent} from '../information-activities/information-activities.component';\nimport {TranslateService} from '@ngx-translate/core';\nimport {map, mergeMap} from 'rxjs/operators';\nimport {Router} from '@angular/router';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-table-activities',\n  templateUrl: './table-activities.component.html',\n  styleUrls: ['./table-activities.component.scss']\n})\n/**\n * Clase TableActivitiesComponent\n *\n * Clase que muestra la lista de actividades del sistema.\n *\n * @author Alba Serena Suárez\n * @version 1.0\n */\nexport class TableActivitiesComponent implements OnInit {\n\n  /**\n   * Array de objetos que representan las columnas del componente tabla.\n   */\n  cols: any[];\n  /**\n   * Almacena las actividades.\n   */\n  activities;\n  /**\n   * Servicio propocionado por la librería PrimeNG que permite pasar información a los componentes dinámicos.\n   */\n  ref: DynamicDialogRef;\n\n  /**\n   * Constructor de la clase EditActivitiesComponent\n   *\n   * @param activityService\n   * Servicio de actividades.\n   * @param confirmationService\n   * Servicio propocionado por la librería PrimeNG que permite mostrar un diálogo de confirmación.\n   * @param dialogService\n   * Servicio propocionado por la librería PrimeNG que permite mostrar un diálogo.\n   * @param translateService\n   * Servicio proporcionado por la librería ngx-translate que se utiliza para la internacionalización de la aplicación.\n   * @param messageService\n   * Servicio propocionado por la librería PrimeNG que permite almacenar los mensajes que serán mostrados al usuario.\n   * @param router\n   * Servicio que permite la navegación entre vistas\n   * @param sanitizer\n   * Ayuda a prevenir los fallos de seguridad de Cross Site Scripting (XSS) saneando los valores para que sean seguros de usar en los diferentes contextos del DOM\n   */\n  constructor(\n    private activityService: ActivityService,\n    private confirmationService: ConfirmationService,\n    private dialogService: DialogService,\n    private translateService: TranslateService,\n    private messageService: MessageService,\n    private router: Router,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  /**\n   * Método que permite inicializar los datos del componente.\n   *  \n   *      Inicializará los objetos que representan una columna de la tabla.\n   *      Cargará las actividades.\n   *  \n   */\n  ngOnInit(): void {\n    this.cols = [\n      { field: 'name', header: 'name_activity' },\n      { field: 'description', header: 'description_activity' },\n      { field: 'city', header: 'city' },\n      { field: 'interest', header: 'interest'}\n    ];\n    this.loadActivities();\n  }\n\n  /**\n   * Método que obtiene las actividades de la API y las almacena.\n   */\n  loadActivities(){\n    this.activityService.getActivities().subscribe(\n      data => {\n        this.activities = data;\n      },\n      (err) => {\n        console.log(err);\n      });\n  }\n\n  /**\n   * Método que elimina una actividad del sistema a través de la API.\n   * Una vez enviado, también será el encargado de mostrar un mensaje al usuario.\n   * @param activity\n   * Actividad que se desea eliminar.\n   */\n  confirm(activity){\n    this.confirmationService.confirm({\n      message: this.translateService.instant('message_delete_activity'),\n      accept: () => {\n        this.activityService.deleteActivity(activity.id).pipe(\n          mergeMap( message => {\n            return this.activityService.getActivities().pipe(\n              map(data => {\n                this.activities = data;\n              })\n            );\n          })\n        ).subscribe( data => {\n            var message = this.translateService.instant('activity_delete_message',{ 'nameActivity': activity.name });\n            this.messageService.add({key: 'activity', severity:'success', summary: this.translateService.instant('interest_delete'), detail: message });\n          },\n          (err) => {\n            var message = this.translateService.instant('error_delete_message');\n            this.messageService.add({key: 'activity', severity:'error', summary: this.translateService.instant('error'), detail: message });\n          }\n        );\n      }\n    });\n  }\n\n  /**\n   * Método que redirige al usuario al componente AddActivity.\n   */\n  openNew(){\n    this.router.navigate(['activities/add']);\n  }\n\n  /**\n   * Método que abre el componente InformationActivities para mostrar información adicional de la actividad.\n   * @param activity\n   * Actividad de la que se quiere obtener información adicional.\n   */\n  seeMoreInfo(activity){\n    this.ref = this.dialogService.open(InformationActivitiesComponent,\n      {\n        data: {\n          'activity' : activity,\n        },\n        header: this.translateService.instant('info_dialog_title') + activity.name,\n        width: '70%'\n      });\n\n    this.ref.onClose.subscribe((activity) => {\n      console.log(\"Aqui\");\n    });\n  }\n\n  /**\n   * Método que se ejecuta al destruir un componente.\n   */\n  ngOnDestroy() {\n    if (this.ref){\n      this.ref.close();\n    }\n  }\n\n  /**\n   * Método que redirige al usuario al componente EditActivities.\n   */\n  editActivity(activity){\n    this.router.navigateByUrl('activities/edit/' + activity.id);\n  }\n\n  /**\n   * Método que sanea la URL de la imagen asociada a la actividad.\n   * @param activity\n   * Actividad cuya url de la imagen asociada se quiere sanear.\n   */\n  photoURL(activity){\n    var url = 'data:' + activity.metadataImage.mimeType + ';base64,' + activity.metadataImage.data;\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n  \n    \n      \n      \n        \n      \n    \n\n    \n      \n        \n          {{ 'list_activities' | translate }}\n          \n                    \n                    \n          \n        \n      \n      \n        \n          \n            {{ 'image' | translate }}\n          \n          \n            {{ col.header | translate }}\n            \n          \n          \n          \n        \n      \n      \n        \n          \n          {{activity.name}}\n          {{activity.description}}\n          {{activity.city}}\n          {{activity.interest}}\n          \n            \n            \n            \n          \n        \n      \n      \n        {{ 'message-no-activities-match' | translate }}\n      \n    \n  \n\n  \n\n\n\n    \n\n    \n                \n                    ./table-activities.component.scss\n                \n                @import \"src/assets/sass/utility/_mixins.scss\";\n\n.imgview-panel {\n  @include custom-panel;\n  width: 100%;\n  min-height: 300px;\n  min-width: 800px;\n}\n\n.card{\n  display: inline-flex;\n  height: 100%;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n\n.table-activities{\n\n  .td-text-wrap{\n    word-wrap:break-word;\n  }\n}\n\n.toolbar-activities, .table-activities{\n  padding: 15px;\n}\n\n#image-activity-table{\n  width: 100%;\n  height: 100px;\n  width: auto\\9; /* ie8 */\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                {{ \\'list_activities\\' | translate }}                                                                                                              {{ \\'image\\' | translate }}                                {{ col.header | translate }}                                                                                          {{activity.name}}          {{activity.description}}          {{activity.city}}          {{activity.interest}}                                                                                    {{ \\'message-no-activities-match\\' | translate }}              '\n    var COMPONENTS = [{'name': 'AddActivityComponent', 'selector': 'app-add-activity'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditActivitiesComponent', 'selector': 'app-edit-activities'},{'name': 'EditUserAdminComponent', 'selector': 'app-edit-user-admin'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'InformationActivitiesComponent', 'selector': 'app-information-activities'},{'name': 'ListActivitiesEvaluateComponent', 'selector': 'app-list-activities-evaluate'},{'name': 'ListCitiesComponent', 'selector': 'app-list-cities'},{'name': 'ListInterestComponent', 'selector': 'app-list-interest'},{'name': 'ListUserComponent', 'selector': 'app-list-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MenuBarComponent', 'selector': 'app-menu-bar'},{'name': 'RecommendationComponent', 'selector': 'app-recommendation'},{'name': 'RecommendationMapComponent', 'selector': 'app-recommendation-map'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'TableActivitiesComponent', 'selector': 'app-table-activities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableActivitiesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n            \n                Description\n            \n            \n                Clase User\nClase que define el tipo de entidad Usuario.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateBirthday\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                roles\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateBirthday\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:22\n                            \n                        \n\n                \n                    \n                        Fecha de nacimiento del usuario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:18\n                            \n                        \n\n                \n                    \n                        Correo electrónico del usuario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:10\n                            \n                        \n\n                \n                    \n                        Identificador del usuario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:26\n                            \n                        \n\n                \n                    \n                        Roles del usuario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:14\n                            \n                        \n\n                \n                    \n                        Nombre de usuario\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  /**\n   * Identificador del usuario\n   */\n  id: number;\n  /**\n   * Nombre de usuario\n   */\n  userName: string;\n  /**\n   * Correo electrónico del usuario\n   */\n  email: string;\n  /**\n   * Fecha de nacimiento del usuario\n   */\n  dateBirthday: Date;\n  /**\n   * Roles del usuario\n   */\n  roles: string[];\n}\n\n/**\n * Clase UserLogin\n * \n * Clase que define el tipo de entidad Usuario que intenta autenticarse en el sistema.\n */\nexport class UserLogin {\n  /**\n   * Correo electrónico del usuario\n   */\n  email: string;\n  /**\n   * Contraseña\n   */\n  password: string;\n}\n\n/**\n * Clase UserSignUp\n * \n * Clase que define el tipo de entidad Usuario que intenta registrarse en el sistema.\n */\nexport class UserSignUp {\n  /**\n   *  Nombre de usuario\n   */\n  userName: string;\n  /**\n   * Correo electrónico del usuario\n   */\n  email: string;\n  /**\n   * Fecha de nacimiento del usuario\n   */\n  dateBirthday: string;\n  /**\n   * Contraseña\n   */\n  password: string;\n  /**\n   * Contraseña repetida\n   */\n  passwordConfirm: string;\n  /**\n   * Roles del usuario\n   */\n  roles: string[];\n  /**\n   * Lista de puntuaciones dadas por el usuario a los tipos de intereses\n   */\n  interest: Interest[];\n}\n\n/**\n * Clase Interest\n * \n * Clase que define el tipo de entidad Interés que puntúa el usuario.\n */\nexport class Interest {\n  /**\n   * Nombre del tipo de interés\n   */\n  nameInterest: string;\n  /**\n   * Puntuación dada por el usuario al tipo de interés\n   */\n  priority: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLogin.html":{"url":"classes/UserLogin.html","title":"class - UserLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n            \n                Description\n            \n            \n                Clase UserLogin\nClase que define el tipo de entidad Usuario que intenta autenticarse en el sistema.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:38\n                            \n                        \n\n                \n                    \n                        Correo electrónico del usuario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:42\n                            \n                        \n\n                \n                    \n                        Contraseña\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  /**\n   * Identificador del usuario\n   */\n  id: number;\n  /**\n   * Nombre de usuario\n   */\n  userName: string;\n  /**\n   * Correo electrónico del usuario\n   */\n  email: string;\n  /**\n   * Fecha de nacimiento del usuario\n   */\n  dateBirthday: Date;\n  /**\n   * Roles del usuario\n   */\n  roles: string[];\n}\n\n/**\n * Clase UserLogin\n * \n * Clase que define el tipo de entidad Usuario que intenta autenticarse en el sistema.\n */\nexport class UserLogin {\n  /**\n   * Correo electrónico del usuario\n   */\n  email: string;\n  /**\n   * Contraseña\n   */\n  password: string;\n}\n\n/**\n * Clase UserSignUp\n * \n * Clase que define el tipo de entidad Usuario que intenta registrarse en el sistema.\n */\nexport class UserSignUp {\n  /**\n   *  Nombre de usuario\n   */\n  userName: string;\n  /**\n   * Correo electrónico del usuario\n   */\n  email: string;\n  /**\n   * Fecha de nacimiento del usuario\n   */\n  dateBirthday: string;\n  /**\n   * Contraseña\n   */\n  password: string;\n  /**\n   * Contraseña repetida\n   */\n  passwordConfirm: string;\n  /**\n   * Roles del usuario\n   */\n  roles: string[];\n  /**\n   * Lista de puntuaciones dadas por el usuario a los tipos de intereses\n   */\n  interest: Interest[];\n}\n\n/**\n * Clase Interest\n * \n * Clase que define el tipo de entidad Interés que puntúa el usuario.\n */\nexport class Interest {\n  /**\n   * Nombre del tipo de interés\n   */\n  nameInterest: string;\n  /**\n   * Puntuación dada por el usuario al tipo de interés\n   */\n  priority: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteUser\n                            \n                            \n                                    Public\n                                editUser\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                getUserForAdmin\n                            \n                            \n                                    Public\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user/user.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor de la clase UserService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                objeto que permite hacer peticiones a la API y obtener resultados de la misma\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user.service.ts:74\n                \n            \n\n\n            \n                \n                    Método que realiza una petición DELETE para eliminar un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(id, user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user.service.ts:65\n                \n            \n\n\n            \n                \n                    Método que realiza una petición PUT para modificar la información de un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto usuario con la información actualizada.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user.service.ts:55\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserForAdmin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserForAdmin(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user.service.ts:46\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener un usuario.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identificador del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user.service.ts:37\n                \n            \n\n\n            \n                \n                    Método que realiza una petición GET para obtener la lista de usuarios registrados en el sistema.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        el observable con la información enviada por la API\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8090/api/user'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user/user.service.ts:25\n                            \n                        \n\n                \n                    \n                        Almacena la url del endpoint\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, Subject} from 'rxjs';\nimport {Interest} from '../../models/interest';\nimport {User} from '../../models/user';\n\n/**\n * Encabezado para las peticiones y respuestas HTTP\n */\nconst cabecera = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clase UserService\n * \n * Clase que se encarga de realizar peticiones a la API relacionadas con los usuarios.\n */\nexport class UserService {\n\n  /**\n   * Almacena la url del endpoint\n   */\n  userURL = 'http://localhost:8090/api/user';\n\n  /**\n   * Constructor de la clase UserService\n   * @param httpClient objeto que permite hacer peticiones a la API y obtener resultados de la misma\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Método que realiza una petición GET para obtener la lista de usuarios registrados en el sistema.\n   * @returns el observable con la información enviada por la API\n   */\n  public getUsers(): Observable {\n    return this.httpClient.get(this.userURL + '/list', cabecera);\n  }\n\n  /**\n   * Método que realiza una petición GET para obtener un usuario.\n   * @param id identificador del usuario\n   * @returns el observable con la información enviada por la API\n   */\n  public getUserForAdmin(id): Observable {\n    return this.httpClient.get(this.userURL + '/details/' + id, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición GET para obtener un usuario.\n   * @param id identificador del usuario\n   * @returns el observable con la información enviada por la API\n   */\n  public getUser(id): Observable {\n    return this.httpClient.get(this.userURL + '/details/' + id, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición PUT para modificar la información de un usuario.\n   * @param id identificador del usuario\n   * @param user objeto usuario con la información actualizada.\n   * @returns el observable con la información enviada por la API\n   */\n  public editUser(id, user): Observable {\n    return this.httpClient.put(this.userURL + '/update/' + id, user, cabecera);\n  }\n\n  /**\n   * Método que realiza una petición DELETE para eliminar un usuario.\n   * @param id identificador del usuario\n   * @returns el observable con la información enviada por la API\n   */\n  public deleteUser(id): Observable {\n    return this.httpClient.delete(this.userURL + '/delete/' + id, cabecera);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSignUp.html":{"url":"classes/UserSignUp.html","title":"class - UserSignUp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSignUp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n            \n                Description\n            \n            \n                Clase UserSignUp\nClase que define el tipo de entidad Usuario que intenta registrarse en el sistema.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateBirthday\n                            \n                            \n                                email\n                            \n                            \n                                interest\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirm\n                            \n                            \n                                roles\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateBirthday\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:62\n                            \n                        \n\n                \n                    \n                        Fecha de nacimiento del usuario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:58\n                            \n                        \n\n                \n                    \n                        Correo electrónico del usuario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Interest[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:78\n                            \n                        \n\n                \n                    \n                        Lista de puntuaciones dadas por el usuario a los tipos de intereses\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:66\n                            \n                        \n\n                \n                    \n                        Contraseña\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:70\n                            \n                        \n\n                \n                    \n                        Contraseña repetida\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:74\n                            \n                        \n\n                \n                    \n                        Roles del usuario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:54\n                            \n                        \n\n                \n                    \n                        Nombre de usuario\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  /**\n   * Identificador del usuario\n   */\n  id: number;\n  /**\n   * Nombre de usuario\n   */\n  userName: string;\n  /**\n   * Correo electrónico del usuario\n   */\n  email: string;\n  /**\n   * Fecha de nacimiento del usuario\n   */\n  dateBirthday: Date;\n  /**\n   * Roles del usuario\n   */\n  roles: string[];\n}\n\n/**\n * Clase UserLogin\n * \n * Clase que define el tipo de entidad Usuario que intenta autenticarse en el sistema.\n */\nexport class UserLogin {\n  /**\n   * Correo electrónico del usuario\n   */\n  email: string;\n  /**\n   * Contraseña\n   */\n  password: string;\n}\n\n/**\n * Clase UserSignUp\n * \n * Clase que define el tipo de entidad Usuario que intenta registrarse en el sistema.\n */\nexport class UserSignUp {\n  /**\n   *  Nombre de usuario\n   */\n  userName: string;\n  /**\n   * Correo electrónico del usuario\n   */\n  email: string;\n  /**\n   * Fecha de nacimiento del usuario\n   */\n  dateBirthday: string;\n  /**\n   * Contraseña\n   */\n  password: string;\n  /**\n   * Contraseña repetida\n   */\n  passwordConfirm: string;\n  /**\n   * Roles del usuario\n   */\n  roles: string[];\n  /**\n   * Lista de puntuaciones dadas por el usuario a los tipos de intereses\n   */\n  interest: Interest[];\n}\n\n/**\n * Clase Interest\n * \n * Clase que define el tipo de entidad Interés que puntúa el usuario.\n */\nexport class Interest {\n  /**\n   * Nombre del tipo de interés\n   */\n  nameInterest: string;\n  /**\n   * Puntuación dada por el usuario al tipo de interés\n   */\n  priority: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/add-activity/add-activity.component.ts\n            \n            component\n            AddActivityComponent\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            httpTranslateLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/edit-activities/edit-activities.component.ts\n            \n            component\n            EditActivitiesComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/edit-user-admin/edit-user-admin.component.ts\n            \n            component\n            EditUserAdminComponent\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/edit-user/edit-user.component.ts\n            \n            component\n            EditUserComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/guards/RoleGuard/role-guard.service.ts\n            \n            guard\n            RoleGuardService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/guards/auth-guard/auth-guard.service.ts\n            \n            guard\n            AuthGuardService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/guards/isLogginInGuard/is-loggin-in-guard.service.ts\n            \n            guard\n            IsLogginInGuardService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/information-activities/information-activities.component.ts\n            \n            component\n            InformationActivitiesComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/interceptors/interceptor.service.ts\n            \n            interceptor\n            InterceptorService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interceptors/interceptor.service.ts\n            \n            variable\n            interceptorProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/list-activities-evaluate/list-activities-evaluate.component.ts\n            \n            component\n            ListActivitiesEvaluateComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/list-cities/list-cities.component.ts\n            \n            component\n            ListCitiesComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/list-interest/list-interest.component.ts\n            \n            component\n            ListInterestComponent\n            \n                55 %\n                (11/20)\n            \n        \n        \n            \n                \n                src/app/list-user/list-user.component.ts\n            \n            component\n            ListUserComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/map/map.component.ts\n            \n            component\n            MapComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/menu-bar/menu-bar.component.ts\n            \n            component\n            MenuBarComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/models/activity.ts\n            \n            class\n            Activity\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/models/activity.ts\n            \n            class\n            ActivityRecommended\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/models/city.ts\n            \n            class\n            City\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/interest.ts\n            \n            class\n            Interest\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/interest.ts\n            \n            class\n            InterestByUser\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/jwt_model.ts\n            \n            class\n            JwtModel\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/models/rol.ts\n            \n            class\n            Rol\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            Interest\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            User\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            UserLogin\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            UserSignUp\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/recommendation-map/recommendation-map.component.ts\n            \n            component\n            RecommendationMapComponent\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/recommendation/recommendation.component.ts\n            \n            component\n            RecommendationComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/activity/activity-service-mock.ts\n            \n            injectable\n            MockActivityService\n            \n                42 %\n                (9/21)\n            \n        \n        \n            \n                \n                src/app/services/activity/activity.service.ts\n            \n            injectable\n            ActivityService\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/services/activity/activity.service.ts\n            \n            variable\n            cabecera\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth-service-mock.ts\n            \n            injectable\n            MockAuthService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            cabecera\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/city/city-service-mock.ts\n            \n            injectable\n            MockCityService\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/services/city/city.service.ts\n            \n            injectable\n            CityService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/city/city.service.ts\n            \n            variable\n            cabecera\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/images/images.service.ts\n            \n            injectable\n            ImagesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/images/images.service.ts\n            \n            variable\n            cabecera\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/interest/interest-service-mock.ts\n            \n            injectable\n            MockInterestService\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/services/interest/interest.service.ts\n            \n            injectable\n            InterestService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/services/interest/interest.service.ts\n            \n            variable\n            cabecera\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/local-storage/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/services/local-storage/local-storage.service.ts\n            \n            variable\n            TOKEN_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/message/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/services/rol/rol-service-mock.ts\n            \n            injectable\n            MockRolService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/services/rol/rol.service.ts\n            \n            injectable\n            RolService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/services/rol/rol.service.ts\n            \n            variable\n            cabecera\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/user/user-service-mock.ts\n            \n            injectable\n            MockUserService\n            \n                42 %\n                (6/14)\n            \n        \n        \n            \n                \n                src/app/services/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/services/user/user.service.ts\n            \n            variable\n            cabecera\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/sign-up/sign-up.component.ts\n            \n            component\n            SignUpComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/table-activities/table-activities.component.ts\n            \n            component\n            TableActivitiesComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/validators/validatorGreaterThan.directive.ts\n            \n            function\n            validadorAgeGreaterThan\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/validators/validatorNonWhiteSpace.directive.ts\n            \n            function\n            validadorNonwhiteSpace\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/validators/validatorPasswordSame.directive.ts\n            \n            function\n            validadorPasswordSame\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/validators/validatorPriorityNumber.directive.ts\n            \n            function\n            validadorPriorityNumberOfInterest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.2.0\n        \n            @angular/cdk : ^11.2.0\n        \n            @angular/common : ~11.2.0\n        \n            @angular/compiler : ~11.2.0\n        \n            @angular/core : ~11.2.0\n        \n            @angular/forms : ~11.2.0\n        \n            @angular/platform-browser : ~11.2.0\n        \n            @angular/platform-browser-dynamic : ~11.2.0\n        \n            @angular/router : ~11.2.0\n        \n            @fortawesome/fontawesome-free : ^5.15.1\n        \n            @ngx-translate/core : ^13.0.0\n        \n            @ngx-translate/http-loader : ^6.0.0\n        \n            @popperjs/core : ^2.5.4\n        \n            bootstrap : ^4.5.3\n        \n            font-awesome : 4.7.0\n        \n            jquery : ^3.5.1\n        \n            jwt-decode : ^3.1.2\n        \n            leaflet : ^1.7.1\n        \n            leaflet-control-geocoder : ^2.1.0\n        \n            primeflex : ^2.0.0\n        \n            primeicons : ^4.0.0\n        \n            primeng : ^11.2.3\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            httpTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            validadorAgeGreaterThan   (src/.../validatorGreaterThan.directive.ts)\n                        \n                        \n                            validadorNonwhiteSpace   (src/.../validatorNonWhiteSpace.directive.ts)\n                        \n                        \n                            validadorPasswordSame   (src/.../validatorPasswordSame.directive.ts)\n                        \n                        \n                            validadorPriorityNumberOfInterest   (src/.../validatorPriorityNumber.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            httpTranslateLoader\n                        \n                        \n                    \n                \n            \n            \n                \nhttpTranslateLoader(http)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/validators/validatorGreaterThan.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            validadorAgeGreaterThan\n                        \n                        \n                    \n                \n            \n            \n                \nvalidadorAgeGreaterThan()\n                \n            \n\n\n\n\n            \n                \n                    Función que valida que la edad de un usuario sea mayor de 18 años.\n\n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n    src/app/validators/validatorNonWhiteSpace.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            validadorNonwhiteSpace\n                        \n                        \n                    \n                \n            \n            \n                \nvalidadorNonwhiteSpace()\n                \n            \n\n\n\n\n            \n                \n                    Función que valida que los campos de un formulario no estén en blanco.\n\n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n    src/app/validators/validatorPasswordSame.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            validadorPasswordSame\n                        \n                        \n                    \n                \n            \n            \n                \nvalidadorPasswordSame()\n                \n            \n\n\n\n\n            \n                \n                    Función que valida que el campo password y repeatPassword sean igual.\n\n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n    src/app/validators/validatorPriorityNumber.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            validadorPriorityNumberOfInterest\n                        \n                        \n                    \n                \n            \n            \n                \nvalidadorPriorityNumberOfInterest()\n                \n            \n\n\n\n\n            \n                \n                    Función que valida que el valor de la puntuación dada a un interés se encuentre entre 0 y 10.\n\n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n\nProyectoTurismoFRONT\nThis project was generated with Angular CLI version 10.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddActivityComponent\n\nAddActivityComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddActivityComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditActivitiesComponent\n\nEditActivitiesComponent\n\nAppModule -->\n\nEditActivitiesComponent->AppModule\n\n\n\n\n\nEditUserAdminComponent\n\nEditUserAdminComponent\n\nAppModule -->\n\nEditUserAdminComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nInformationActivitiesComponent\n\nInformationActivitiesComponent\n\nAppModule -->\n\nInformationActivitiesComponent->AppModule\n\n\n\n\n\nListActivitiesEvaluateComponent\n\nListActivitiesEvaluateComponent\n\nAppModule -->\n\nListActivitiesEvaluateComponent->AppModule\n\n\n\n\n\nListCitiesComponent\n\nListCitiesComponent\n\nAppModule -->\n\nListCitiesComponent->AppModule\n\n\n\n\n\nListInterestComponent\n\nListInterestComponent\n\nAppModule -->\n\nListInterestComponent->AppModule\n\n\n\n\n\nListUserComponent\n\nListUserComponent\n\nAppModule -->\n\nListUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nMenuBarComponent\n\nMenuBarComponent\n\nAppModule -->\n\nMenuBarComponent->AppModule\n\n\n\n\n\nRecommendationComponent\n\nRecommendationComponent\n\nAppModule -->\n\nRecommendationComponent->AppModule\n\n\n\n\n\nRecommendationMapComponent\n\nRecommendationMapComponent\n\nAppModule -->\n\nRecommendationMapComponent->AppModule\n\n\n\n\n\nSignUpComponent\n\nSignUpComponent\n\nAppModule -->\n\nSignUpComponent->AppModule\n\n\n\n\n\nTableActivitiesComponent\n\nTableActivitiesComponent\n\nAppModule -->\n\nTableActivitiesComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nAppModule -->\n\nNotificationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        16 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cabecera   (src/.../city.service.ts)\n                        \n                        \n                            cabecera   (src/.../user.service.ts)\n                        \n                        \n                            cabecera   (src/.../rol.service.ts)\n                        \n                        \n                            cabecera   (src/.../activity.service.ts)\n                        \n                        \n                            cabecera   (src/.../auth.service.ts)\n                        \n                        \n                            cabecera   (src/.../interest.service.ts)\n                        \n                        \n                            cabecera   (src/.../images.service.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            interceptorProvider   (src/.../interceptor.service.ts)\n                        \n                        \n                            TOKEN_KEY   (src/.../local-storage.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/city/city.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cabecera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers: new HttpHeaders({'Content-Type': 'application/json'})}\n                        \n                    \n\n                \n                    \n                        Encabezado para las peticiones y respuestas HTTP\n\n                    \n                \n\n            \n        \n\n    src/app/services/user/user.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cabecera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers: new HttpHeaders({'Content-Type': 'application/json'})}\n                        \n                    \n\n                \n                    \n                        Encabezado para las peticiones y respuestas HTTP\n\n                    \n                \n\n            \n        \n\n    src/app/services/rol/rol.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cabecera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers: new HttpHeaders({'Content-Type': 'application/json'})}\n                        \n                    \n\n                \n                    \n                        Encabezado para las peticiones y respuestas HTTP\n\n                    \n                \n\n            \n        \n\n    src/app/services/activity/activity.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cabecera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers: new HttpHeaders({'Content-Type': 'application/json'})}\n                        \n                    \n\n                \n                    \n                        Encabezado para las peticiones y respuestas HTTP\n\n                    \n                \n\n            \n        \n\n    src/app/services/auth/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cabecera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers: new HttpHeaders({'Content-Type': 'application/json'})}\n                        \n                    \n\n                \n                    \n                        Encabezado para las peticiones y respuestas HTTP\n\n                    \n                \n\n            \n        \n\n    src/app/services/interest/interest.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cabecera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers: new HttpHeaders({'Content-Type': 'application/json'})}\n                        \n                    \n\n                \n                    \n                        Encabezado para las peticiones y respuestas HTTP\n\n                    \n                \n\n            \n        \n\n    src/app/services/images/images.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cabecera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {headers: new HttpHeaders({'Content-Type': 'application/json'})}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/interceptors/interceptor.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            interceptorProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{provide: HTTP_INTERCEPTORS, useClass: InterceptorService, multi: true}]\n                        \n                    \n\n\n            \n        \n\n    src/app/services/local-storage/local-storage.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'AuthToken'\n                        \n                    \n\n                \n                    \n                        Clave para almacenar el valor del token en el LocalStorage\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
